{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar emotions = [{\n  name: 'Surprised',\n  color: '#FFA87A',\n  icon: require(\"./asserts/surprised.png\")\n}, {\n  name: 'Excited',\n  color: '#FFC0CB',\n  icon: require(\"./asserts/excited.png\")\n}, {\n  name: 'Happy',\n  color: '#F9D342',\n  icon: require(\"./asserts/happy.png\")\n}, {\n  name: 'Calm',\n  color: '#9ED8F6',\n  icon: require(\"./asserts/calm.png\")\n}, {\n  name: 'Neutral',\n  color: '#D0D1D4',\n  icon: require(\"./asserts/neutral.png\")\n}, {\n  name: 'Bored',\n  color: '#AA96DA',\n  icon: require(\"./asserts/bored.png\")\n}, {\n  name: 'Anxious',\n  color: '#FFB200',\n  icon: require(\"./asserts/anxious.png\")\n}, {\n  name: 'Sad',\n  color: '#4A90E2',\n  icon: require(\"./asserts/sad.png\")\n}, {\n  name: 'Angry',\n  color: '#FF6B6B',\n  icon: require(\"./asserts/angry.png\")\n}];\nvar deviceWidth = Dimensions.get('window').width;\nvar deviceHeight = Dimensions.get('window').height;\nvar cardSize = deviceWidth / 5;\nvar cardMargin = deviceWidth * 0.02 / 2;\nvar MoodScreen = function MoodScreen() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedEmotion = _useState2[0],\n    setSelectedEmotion = _useState2[1];\n  var numEmotions = emotions.length;\n  var numRows = Math.ceil(numEmotions / 5);\n  var emptyCards = Array(5 - numEmotions % 5).fill(null);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.emotionCardsContainer,\n      children: [emotions.map(function (emotion, index) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setSelectedEmotion(emotion);\n          },\n          children: _jsxs(View, {\n            style: [styles.emotionCard, {\n              backgroundColor: emotion.color\n            }, selectedEmotion === emotion ? styles.selectedEmotionCard : null],\n            children: [_jsx(Text, {\n              style: styles.emotionText,\n              children: emotion.name\n            }), selectedEmotion === emotion && _jsx(Image, {\n              source: emotion.icon,\n              style: styles.emotionIcon\n            })]\n          })\n        }, index);\n      }), emptyCards.map(function (_, index) {\n        return _jsx(View, {\n          style: styles.emotionCard\n        }, index);\n      })]\n    }), _jsx(View, {\n      style: {\n        flex: 1\n      }\n    })]\n  });\n};\nexport default MoodScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  emotionCardsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    width: '100%',\n    height: deviceHeight * 0.8,\n    alignItems: 'center'\n  },\n  emotionCard: {\n    width: cardSize,\n    height: cardSize,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: cardMargin,\n    borderRadius: 10\n  },\n  emotionText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 8\n  },\n  emotionIcon: {\n    width: 64,\n    height: 64\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","Dimensions","TouchableOpacity","Image","jsx","_jsx","jsxs","_jsxs","emotions","name","color","icon","require","deviceWidth","get","width","deviceHeight","height","cardSize","cardMargin","MoodScreen","_useState","_useState2","_slicedToArray","selectedEmotion","setSelectedEmotion","numEmotions","length","numRows","Math","ceil","emptyCards","Array","fill","style","styles","container","children","emotionCardsContainer","map","emotion","index","onPress","emotionCard","backgroundColor","selectedEmotionCard","emotionText","source","emotionIcon","_","flex","create","justifyContent","alignItems","flexDirection","flexWrap","margin","borderRadius","fontSize","fontWeight","marginBottom"],"sources":["/cs/home/sz78/Documents/my-expo-app/examples-master/with-drawer-navigation/MoodScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, StyleSheet, Dimensions, TouchableOpacity, Image } from 'react-native';\n\nconst emotions = [\n  { name: 'Surprised', color: '#FFA87A', icon: require('./asserts/surprised.png') },\n  { name: 'Excited', color: '#FFC0CB', icon: require('./asserts/excited.png') },\n  { name: 'Happy', color: '#F9D342', icon: require('./asserts/happy.png') },\n  { name: 'Calm', color: '#9ED8F6', icon: require('./asserts/calm.png') },\n  { name: 'Neutral', color: '#D0D1D4', icon: require('./asserts/neutral.png') },\n  { name: 'Bored', color: '#AA96DA', icon: require('./asserts/bored.png') },\n  { name: 'Anxious', color: '#FFB200', icon: require('./asserts/anxious.png') },\n  { name: 'Sad', color: '#4A90E2', icon: require('./asserts/sad.png') },\n  { name: 'Angry', color: '#FF6B6B', icon: require('./asserts/angry.png') },\n];\n\nconst deviceWidth = Dimensions.get('window').width;\nconst deviceHeight = Dimensions.get('window').height;\nconst cardSize = deviceWidth / 5; // Reduce the card size\nconst cardMargin = (deviceWidth * 0.02) / 2; // Reduce the card margin\n\nconst MoodScreen = () => {\n  const [selectedEmotion, setSelectedEmotion] = useState(null);\n\n  const numEmotions = emotions.length;\n  const numRows = Math.ceil(numEmotions / 5);\n  const emptyCards = Array(5 - (numEmotions % 5)).fill(null);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.emotionCardsContainer}>\n        {emotions.map((emotion, index) => (\n          <TouchableOpacity key={index} onPress={() => setSelectedEmotion(emotion)}>\n            <View\n              style={[\n                styles.emotionCard,\n                { backgroundColor: emotion.color },\n                selectedEmotion === emotion ? styles.selectedEmotionCard : null\n              ]}\n            >\n              <Text style={styles.emotionText}>{emotion.name}</Text>\n              {selectedEmotion === emotion && (\n                <Image source={emotion.icon} style={styles.emotionIcon} />\n              )}\n            </View>\n          </TouchableOpacity>\n        ))}\n        {emptyCards.map((_, index) => (\n          <View key={index} style={styles.emotionCard} />\n        ))}\n      </View>\n      <View style={{ flex: 1 }} />\n    </View>\n  );\n};\nexport default MoodScreen;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  emotionCardsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    width: '100%',\n    height: deviceHeight * 0.8,\n    alignItems: 'center',\n  },\n\n  emotionCard: {\n    width: cardSize,\n    height: cardSize,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: cardMargin,\n    borderRadius: 10,\n  },\n\n  emotionText: {\n    fontSize: 24, // 减小情绪名称字号\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 8,\n  },\n\n  emotionIcon: {\n    width: 64, // 缩小情绪图标\n    height: 64,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}