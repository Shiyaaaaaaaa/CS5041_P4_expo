{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar emotions = [{\n  name: 'Happy',\n  color: '#F9D342'\n}, {\n  name: 'Sad',\n  color: '#4A90E2'\n}, {\n  name: 'Angry',\n  color: '#FF6B6B'\n}, {\n  name: 'Excited',\n  color: '#1DE9B6'\n}, {\n  name: 'Calm',\n  color: '#9ED8F6'\n}, {\n  name: 'Anxious',\n  color: '#FFB200'\n}, {\n  name: 'Bored',\n  color: '#AA96DA'\n}, {\n  name: 'Surprised',\n  color: '#FFA87A'\n}, {\n  name: 'Neutral',\n  color: '#D0D1D4'\n}];\nvar MoodScreen = function MoodScreen() {\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(View, {\n      style: styles.emotionCardsContainer,\n      children: emotions.map(function (emotion, index) {\n        return _jsx(View, {\n          style: [styles.emotionCard, {\n            backgroundColor: emotion.color\n          }],\n          children: _jsx(Text, {\n            style: styles.emotionText,\n            children: emotion.name\n          })\n        }, index);\n      })\n    })\n  });\n};\nexport default MoodScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  emotionCardsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    width: '80%'\n  },\n  emotionCard: {\n    width: '30%',\n    aspectRatio: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: '1.66%',\n    borderRadius: 10\n  },\n  emotionText: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: 'white'\n  }\n});","map":{"version":3,"names":["React","View","Text","StyleSheet","jsx","_jsx","emotions","name","color","MoodScreen","style","styles","container","children","emotionCardsContainer","map","emotion","index","emotionCard","backgroundColor","emotionText","create","flex","justifyContent","alignItems","flexDirection","flexWrap","width","aspectRatio","margin","borderRadius","fontSize","fontWeight"],"sources":["/cs/home/sz78/Documents/my-expo-app/examples-master/with-drawer-navigation/MoodScreen.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\nconst emotions = [\n  { name: 'Happy', color: '#F9D342' },\n  { name: 'Sad', color: '#4A90E2' },\n  { name: 'Angry', color: '#FF6B6B' },\n  { name: 'Excited', color: '#1DE9B6' },\n  { name: 'Calm', color: '#9ED8F6' },\n  { name: 'Anxious', color: '#FFB200' },\n  { name: 'Bored', color: '#AA96DA' },\n  { name: 'Surprised', color: '#FFA87A' },\n  { name: 'Neutral', color: '#D0D1D4' },\n];\n\nconst MoodScreen = () => {\n  return (\n    <View style={styles.container}>\n      <View style={styles.emotionCardsContainer}>\n        {emotions.map((emotion, index) => (\n          <View\n            key={index}\n            style={[\n              styles.emotionCard,\n              { backgroundColor: emotion.color },\n            ]}\n          >\n            <Text style={styles.emotionText}>{emotion.name}</Text>\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default MoodScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  emotionCardsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    width: '80%', // Adjust this value to change the container width\n  },\n\n  emotionCard: {\n    width: '30%', // Adjust this value to change the card width\n    aspectRatio: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: '1.66%', // Adjust this value to change the space between cards\n    borderRadius: 10,\n  },\n\n  emotionText: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAG1B,IAAMC,QAAQ,GAAG,CACf;EAAEC,IAAI,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAU,CAAC,EACnC;EAAED,IAAI,EAAE,KAAK;EAAEC,KAAK,EAAE;AAAU,CAAC,EACjC;EAAED,IAAI,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAU,CAAC,EACnC;EAAED,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAU,CAAC,EACrC;EAAED,IAAI,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAU,CAAC,EAClC;EAAED,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAU,CAAC,EACrC;EAAED,IAAI,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAU,CAAC,EACnC;EAAED,IAAI,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAU,CAAC,EACvC;EAAED,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAU,CAAC,CACtC;AAED,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACvB,OACEJ,IAAA,CAACJ,IAAI;IAACS,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5BR,IAAA,CAACJ,IAAI;MAACS,KAAK,EAAEC,MAAM,CAACG,qBAAsB;MAAAD,QAAA,EACvCP,QAAQ,CAACS,GAAG,CAAC,UAACC,OAAO,EAAEC,KAAK;QAAA,OAC3BZ,IAAA,CAACJ,IAAI;UAEHS,KAAK,EAAE,CACLC,MAAM,CAACO,WAAW,EAClB;YAAEC,eAAe,EAAEH,OAAO,CAACR;UAAM,CAAC,CAClC;UAAAK,QAAA,EAEFR,IAAA,CAACH,IAAI;YAACQ,KAAK,EAAEC,MAAM,CAACS,WAAY;YAAAP,QAAA,EAAEG,OAAO,CAACT;UAAI,CAAO;QAAC,GANjDU,KAOD,CAAC;MAAA,CACR;IAAC,CACE;EAAC,CACH,CAAC;AAEX,CAAC;AAED,eAAeR,UAAU;AAEzB,IAAME,MAAM,GAAGR,UAAU,CAACkB,MAAM,CAAC;EAC/BT,SAAS,EAAE;IACTU,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EAEDV,qBAAqB,EAAE;IACrBW,aAAa,EAAE,KAAK;IACpBC,QAAQ,EAAE,MAAM;IAChBH,cAAc,EAAE,QAAQ;IACxBI,KAAK,EAAE;EACT,CAAC;EAEDT,WAAW,EAAE;IACXS,KAAK,EAAE,KAAK;IACZC,WAAW,EAAE,CAAC;IACdL,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBK,MAAM,EAAE,OAAO;IACfC,YAAY,EAAE;EAChB,CAAC;EAEDV,WAAW,EAAE;IACXW,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBxB,KAAK,EAAE;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}