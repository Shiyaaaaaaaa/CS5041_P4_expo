{"ast":null,"code":"import { useRef } from 'react';\nimport { useSharedValue } from \"./useSharedValue\";\nimport { getTag } from \"../NativeMethods\";\nimport { getShadowNodeWrapperFromHostInstance } from \"../fabricUtils\";\nimport { makeShareableCloneRecursive, registerShareableMapping } from \"../shareables\";\nfunction getShareableShadowNodeFromComponent(component) {\n  return getShadowNodeWrapperFromHostInstance(component);\n}\nvar getTagValueFunction = global._IS_FABRIC ? getShareableShadowNodeFromComponent : getTag;\nvar _worklet_13022177922424_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    tag\\n  } = this._closure;\\n  return function () {\\n    return tag.value;\\n  };\\n}\",\n  location: \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedRef.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"tag\\\",\\\"_closure\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedRef.js\\\"],\\\"mappings\\\":\\\"AAuBc,SAAAA,SAAMA,CAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGZ,OAAO;IAAA,OAAMD,GAAG,CAACE,KAAK;EAAA;AACxB\\\"}\"\n};\nexport function useAnimatedRef() {\n  var tag = useSharedValue(-1);\n  var ref = useRef();\n  if (!ref.current) {\n    var fun = function fun(component) {\n      if (component) {\n        tag.value = getTagValueFunction(component);\n        fun.current = component;\n      }\n      return tag.value;\n    };\n    fun.current = null;\n    var remoteRef = makeShareableCloneRecursive({\n      __init: function () {\n        var _e = [new global.Error(), -2, -27];\n        var _f = function _f() {\n          return function () {\n            return tag.value;\n          };\n        };\n        _f._closure = {\n          tag: tag\n        };\n        _f.__initData = _worklet_13022177922424_init_data;\n        _f.__workletHash = 13022177922424;\n        _f.__stackDetails = _e;\n        _f.__version = \"3.1.0\";\n        return _f;\n      }()\n    });\n    registerShareableMapping(fun, remoteRef);\n    ref.current = fun;\n  }\n  return ref.current;\n}","map":{"version":3,"names":["useRef","useSharedValue","getTag","getShadowNodeWrapperFromHostInstance","makeShareableCloneRecursive","registerShareableMapping","getShareableShadowNodeFromComponent","component","getTagValueFunction","global","_IS_FABRIC","_worklet_13022177922424_init_data","code","location","sourceMap","useAnimatedRef","tag","ref","current","fun","value","remoteRef","__init","_e","Error","_f","_closure","__initData","__workletHash","__stackDetails","__version"],"sources":["/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedRef.ts"],"sourcesContent":["import { Component, useRef } from 'react';\nimport { useSharedValue } from './useSharedValue';\nimport { RefObjectFunction } from './commonTypes';\nimport { ShadowNodeWrapper } from '../commonTypes';\nimport { getTag } from '../NativeMethods';\nimport { getShadowNodeWrapperFromHostInstance } from '../fabricUtils';\nimport {\n  makeShareableCloneRecursive,\n  registerShareableMapping,\n} from '../shareables';\n\nfunction getShareableShadowNodeFromComponent(\n  component: Component\n): ShadowNodeWrapper {\n  return getShadowNodeWrapperFromHostInstance(component);\n}\n\nconst getTagValueFunction = global._IS_FABRIC\n  ? getShareableShadowNodeFromComponent\n  : getTag;\n\nexport function useAnimatedRef<T extends Component>(): RefObjectFunction<T> {\n  const tag = useSharedValue<number | ShadowNodeWrapper | null>(-1);\n  const ref = useRef<RefObjectFunction<T>>();\n\n  if (!ref.current) {\n    const fun: RefObjectFunction<T> = <RefObjectFunction<T>>((component) => {\n      // enters when ref is set by attaching to a component\n      if (component) {\n        tag.value = getTagValueFunction(component);\n        fun.current = component;\n      }\n      return tag.value;\n    });\n\n    fun.current = null;\n\n    const remoteRef = makeShareableCloneRecursive({\n      __init: () => {\n        'worklet';\n        return () => tag.value;\n      },\n    });\n    registerShareableMapping(fun, remoteRef);\n\n    ref.current = fun;\n  }\n\n  return ref.current;\n}\n"],"mappings":"AAAA,SAAoBA,MAAM,QAAQ,OAAO;AACzC,SAASC,cAAc;AAGvB,SAASC,MAAM;AACf,SAASC,oCAAoC;AAC7C,SACEC,2BAA2B,EAC3BC,wBAAwB;AAG1B,SAASC,mCAAmCA,CAC1CC,SAAoB,EACD;EACnB,OAAOJ,oCAAoC,CAACI,SAAS,CAAC;AACxD;AAEA,IAAMC,mBAAmB,GAAGC,MAAM,CAACC,UAAU,GACzCJ,mCAAmC,GACnCJ,MAAM;AAAA,IAAAS,iCAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;AAAA;AAEV,OAAO,SAASC,cAAcA,CAAA,EAA8C;EAC1E,IAAMC,GAAG,GAAGf,cAAc,CAAoC,CAAC,CAAC,CAAC;EACjE,IAAMgB,GAAG,GAAGjB,MAAM,EAAwB;EAE1C,IAAI,CAACiB,GAAG,CAACC,OAAO,EAAE;IAChB,IAAMC,GAAyB,GAA2B,SAApDA,GAAyBA,CAA2BZ,SAAS,EAAK;MAEtE,IAAIA,SAAS,EAAE;QACbS,GAAG,CAACI,KAAK,GAAGZ,mBAAmB,CAACD,SAAS,CAAC;QAC1CY,GAAG,CAACD,OAAO,GAAGX,SAAS;MACzB;MACA,OAAOS,GAAG,CAACI,KAAK;IAClB,CAAE;IAEFD,GAAG,CAACD,OAAO,GAAG,IAAI;IAElB,IAAMG,SAAS,GAAGjB,2BAA2B,CAAC;MAC5CkB,MAAM;QAAA,IAAAC,EAAA,QAAAd,MAAA,CAAAe,KAAA;QAAA,IAAAC,EAAA,YAAAA,GAAA,EAAQ;UAEZ,OAAO;YAAA,OAAMT,GAAG,CAACI,KAAK;UAAA;QACxB;QAAAK,EAAA,CAAAC,QAAA;UAAAV,GAAA,EAxCGA;QAAA;QAAAS,EAAA,CAAAE,UAAA,GAAAhB,iCAAA;QAAAc,EAAA,CAAAG,aAAA;QAAAH,EAAA,CAAAI,cAAA,GAAAN,EAAA;QAAAE,EAAA,CAAAK,SAAA;QAAA,OAAAL,EAAA;MAAA;IAyCL,CAAC,CAAC;IACFpB,wBAAwB,CAACc,GAAG,EAAEE,SAAS,CAAC;IAExCJ,GAAG,CAACC,OAAO,GAAGC,GAAG;EACnB;EAEA,OAAOF,GAAG,CAACC,OAAO;AACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}