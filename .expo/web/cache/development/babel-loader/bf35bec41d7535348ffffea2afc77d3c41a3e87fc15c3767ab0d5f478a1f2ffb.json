{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Video } from \"expo-av\";\nimport React, { useState } from 'react';\nimport MessageScreen from \"./MessageScreen.js\";\nimport WeatherScreen from \"./WeatherScreen.js\";\nimport MoodScreen from \"./MoodScreen.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(new Animated.Value(0)),\n    _useState2 = _slicedToArray(_useState, 1),\n    opacity = _useState2[0];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Animated.View, {\n      style: [styles.background, {\n        opacity: opacity\n      }],\n      children: _jsx(Video, {\n        isLooping: true,\n        isMuted: true,\n        positionMillis: 500,\n        onLoad: function onLoad() {\n          Animated.timing(opacity, {\n            toValue: 1,\n            useNativeDriver: false\n          }).start();\n        },\n        resizeMode: \"cover\",\n        shouldPlay: true,\n        source: {\n          uri: \"http://d23dyxeqlo5psv.cloudfront.net/big_buck_bunny.mp4\"\n        },\n        style: {\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0\n        }\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: navigation.openDrawer,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Open navigation drawer\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(\"MessageScreen\");\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Go to Message to Fife Rabbits\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(\"WeatherScreen\");\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Go to check the Fife environment\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(\"MoodScreen\");\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Go to send you color of moods\"\n      })\n    })]\n  });\n}\nvar Drawer = createDrawerNavigator();\nfunction App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Drawer.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Drawer.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"MessageScreen\",\n        component: MessageScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"WeatherScreen\",\n        component: WeatherScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"MoodScreen\",\n        component: MoodScreen\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  background: {\n    flex: 1,\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  button: {\n    width: \"100%\",\n    maxWidth: 300,\n    backgroundColor: \"#1e90ff\",\n    padding: 15,\n    borderRadius: 8,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 10\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  }\n});\nexport default App;","map":{"version":3,"names":["createDrawerNavigator","NavigationContainer","View","StyleSheet","TouchableOpacity","Text","Animated","Video","React","useState","MessageScreen","WeatherScreen","MoodScreen","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","_useState","Value","_useState2","_slicedToArray","opacity","style","styles","container","children","background","isLooping","isMuted","positionMillis","onLoad","timing","toValue","useNativeDriver","start","resizeMode","shouldPlay","source","uri","position","top","left","right","bottom","button","onPress","openDrawer","buttonText","navigate","Drawer","App","Navigator","initialRouteName","Screen","name","component","create","flex","alignItems","justifyContent","width","maxWidth","backgroundColor","padding","borderRadius","marginBottom","color","fontWeight","fontSize"],"sources":["/cs/home/sz78/Documents/my-expo-app/examples-master/with-drawer-navigation/App.js"],"sourcesContent":["\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { View, StyleSheet } from 'react-native';\nimport { TouchableOpacity, Text, Animated } from \"react-native\";\n\nimport { Video } from \"expo-av\";\nimport React, { useState } from 'react';\n\nimport MessageScreen from './MessageScreen.js';\nimport WeatherScreen from './WeatherScreen.js';\nimport MoodScreen from './MoodScreen.js';\n\nfunction HomeScreen({ navigation }) {\n  const [opacity] = useState(new Animated.Value(0));\n  return (\n    <View style={styles.container}>\n      <Animated.View\n        style={[styles.background, { opacity: opacity }]}\n      >\n        <Video\n          isLooping\n          isMuted\n          positionMillis={500}\n          onLoad={() => {\n            // https://facebook.github.io/react-native/docs/animated#timing\n            Animated.timing(opacity, {\n              toValue: 1,\n              useNativeDriver: false,\n            }).start();\n          }}\n          resizeMode=\"cover\"\n          shouldPlay\n          source={{\n            uri: \"http://d23dyxeqlo5psv.cloudfront.net/big_buck_bunny.mp4\",\n          }}\n          style={{ position: \"absolute\", top: 0, left: 0, right: 0, bottom: 0 }}\n        />\n      </Animated.View>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={navigation.openDrawer}\n      >\n        <Text style={styles.buttonText}>Open navigation drawer</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => navigation.navigate(\"MessageScreen\")}\n      >\n        <Text style={styles.buttonText}>Go to Message to Fife Rabbits</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => navigation.navigate(\"WeatherScreen\")}\n      >\n        <Text style={styles.buttonText}>Go to check the Fife environment</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => navigation.navigate(\"MoodScreen\")}\n      >\n        <Text style={styles.buttonText}>Go to send you color of moods</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst Drawer = createDrawerNavigator();\n\nfunction App() {\n  return (\n    <NavigationContainer>\n      <Drawer.Navigator initialRouteName=\"Home\">\n        <Drawer.Screen name=\"Home\" component={HomeScreen} />\n        <Drawer.Screen name=\"MessageScreen\" component={MessageScreen} />\n        <Drawer.Screen name=\"WeatherScreen\" component={WeatherScreen} />\n        <Drawer.Screen name=\"MoodScreen\" component={MoodScreen} />\n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  background: {\n    flex: 1,\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  button: {\n    width: \"100%\",\n    maxWidth: 300,\n    backgroundColor: \"#1e90ff\",\n    padding: 15,\n    borderRadius: 8,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 10,\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 16,\n  },\n});\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}