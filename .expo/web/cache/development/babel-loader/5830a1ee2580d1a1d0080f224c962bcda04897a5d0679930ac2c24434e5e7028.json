{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Video } from \"expo-av\";\nimport React, { useState } from 'react';\nimport MessageScreen from \"./MessageScreen.js\";\nimport WeatherScreen from \"./WeatherScreen.js\";\nimport MoodScreen from \"./MoodScreen.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(new Animated.Value(0)),\n    _useState2 = _slicedToArray(_useState, 1),\n    opacity = _useState2[0];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Animated.View, {\n      style: [styles.background, {\n        opacity: opacity\n      }],\n      children: _jsx(Video, {\n        isLooping: true,\n        isMuted: true,\n        positionMillis: 500,\n        onLoad: function onLoad() {\n          Animated.timing(opacity, {\n            toValue: 1,\n            duration: 500,\n            useNativeDriver: false\n          }).start();\n        },\n        resizeMode: \"cover\",\n        shouldPlay: true,\n        source: {\n          uri: \"https://cdn.coverr.co/videos/coverr-foamy-ocean-waves-at-night-2122/1080p.mp4\"\n        },\n        style: {\n          width: '100%',\n          height: '100%',\n          position: \"cover\"\n        }\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: navigation.openDrawer,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Open navigation drawer\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(\"MessageScreen\");\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Go to Message to Fife Rabbits\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(\"WeatherScreen\");\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Go to check the Fife environment\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(\"MoodScreen\");\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Go to send you color of moods\"\n      })\n    })]\n  });\n}\nvar Drawer = createDrawerNavigator();\nfunction App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Drawer.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Drawer.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"MessageScreen\",\n        component: MessageScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"WeatherScreen\",\n        component: WeatherScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"MoodScreen\",\n        component: MoodScreen\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  background: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  button: {\n    width: \"100%\",\n    maxWidth: 300,\n    backgroundColor: \"#1e90ff\",\n    padding: 15,\n    borderRadius: 8,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 10\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  }\n});\nexport default App;","map":{"version":3,"names":["createDrawerNavigator","NavigationContainer","View","StyleSheet","Dimensions","TouchableOpacity","Text","Animated","Video","React","useState","MessageScreen","WeatherScreen","MoodScreen","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","HomeScreen","_ref","navigation","_useState","Value","_useState2","_slicedToArray","opacity","style","styles","container","children","background","isLooping","isMuted","positionMillis","onLoad","timing","toValue","duration","useNativeDriver","start","resizeMode","shouldPlay","source","uri","position","button","onPress","openDrawer","buttonText","navigate","Drawer","App","Navigator","initialRouteName","Screen","name","component","create","flex","alignItems","justifyContent","top","left","right","bottom","maxWidth","backgroundColor","padding","borderRadius","marginBottom","color","fontWeight","fontSize"],"sources":["/cs/home/sz78/Documents/P4_expo/App.js"],"sourcesContent":["\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { View, StyleSheet, Dimensions } from 'react-native';\nimport { TouchableOpacity, Text, Animated } from \"react-native\";\n\nimport { Video } from \"expo-av\";\nimport React, { useState } from 'react';\n\nimport MessageScreen from './MessageScreen.js';\nimport WeatherScreen from './WeatherScreen.js';\nimport MoodScreen from './MoodScreen.js';\n\nconst { width, height } = Dimensions.get('window');\n\nfunction HomeScreen({ navigation }) {\n  const [opacity] = useState(new Animated.Value(0));\n  return (\n    <View style={styles.container}>\n      <Animated.View\n        style={[styles.background, { opacity: opacity }]}\n      >\n        <Video\n          isLooping\n          isMuted\n          positionMillis={500}\n          onLoad={() => {\n            Animated.timing(opacity, {\n              toValue: 1,\n              duration: 500,\n              useNativeDriver: false,\n            }).start();\n          }}\n          resizeMode=\"cover\"\n          shouldPlay\n          source={{\n            uri: \"https://cdn.coverr.co/videos/coverr-foamy-ocean-waves-at-night-2122/1080p.mp4\",\n          }}\n          style={{ width: '100%', height: '100%', position: \"cover\" }} // 修改这里\n        />\n      </Animated.View>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={navigation.openDrawer}\n      >\n        <Text style={styles.buttonText}>Open navigation drawer</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => navigation.navigate(\"MessageScreen\")}\n      >\n        <Text style={styles.buttonText}>Go to Message to Fife Rabbits</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => navigation.navigate(\"WeatherScreen\")}\n      >\n        <Text style={styles.buttonText}>Go to check the Fife environment</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => navigation.navigate(\"MoodScreen\")}\n      >\n        <Text style={styles.buttonText}>Go to send you color of moods</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst Drawer = createDrawerNavigator();\n\nfunction App() {\n  return (\n    <NavigationContainer>\n      <Drawer.Navigator initialRouteName=\"Home\">\n        <Drawer.Screen name=\"Home\" component={HomeScreen} />\n        <Drawer.Screen name=\"MessageScreen\" component={MessageScreen} />\n        <Drawer.Screen name=\"WeatherScreen\" component={WeatherScreen} />\n        <Drawer.Screen name=\"MoodScreen\" component={MoodScreen} />\n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  background: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  button: {\n    width: \"100%\",\n    maxWidth: 300,\n    backgroundColor: \"#1e90ff\",\n    padding: 15,\n    borderRadius: 8,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 10,\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 16,\n  },\n});\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}