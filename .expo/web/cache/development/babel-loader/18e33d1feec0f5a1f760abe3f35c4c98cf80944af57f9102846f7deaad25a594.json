{"ast":null,"code":"import { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport MessagesScreen from \"./MessagesScreen.js\";\nimport NewScreen from \"./WeatherScreen.js\";\nimport MoodScreen from \"./MoodScreen.js\";\nimport Video from 'react-native-video';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: styles.homeContainer,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.homeButton,\n      onPress: navigation.openDrawer,\n      children: _jsx(Text, {\n        style: styles.homeButtonText,\n        children: \"Open navigation drawer\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.homeButton,\n      onPress: function onPress() {\n        return navigation.navigate('Message to Fife Rabbits');\n      },\n      children: _jsx(Text, {\n        style: styles.homeButtonText,\n        children: \"Go to Message to Fife Rabbits\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.homeButton,\n      onPress: function onPress() {\n        return navigation.navigate('Environment');\n      },\n      children: _jsx(Text, {\n        style: styles.homeButtonText,\n        children: \"Go to check the Fife environment\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.homeButton,\n      onPress: function onPress() {\n        return navigation.navigate('Mood Color');\n      },\n      children: _jsx(Text, {\n        style: styles.homeButtonText,\n        children: \"Go to send you color of moods\"\n      })\n    })]\n  });\n}\nvar Drawer = createDrawerNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Drawer.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Drawer.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"Message to Fife Rabbits\",\n        component: MessagesScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"Mood Color\",\n        component: MoodScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"Environment\",\n        component: NewScreen\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  homeContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  homeButton: {\n    width: 250,\n    height: 50,\n    margin: 5,\n    backgroundColor: '#007AFF',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 5\n  },\n  homeButtonText: {\n    color: 'white',\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["createDrawerNavigator","NavigationContainer","TouchableOpacity","View","Text","StyleSheet","MessagesScreen","NewScreen","MoodScreen","Video","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","style","styles","homeContainer","children","homeButton","onPress","openDrawer","homeButtonText","navigate","Drawer","App","Navigator","initialRouteName","Screen","name","component","create","flex","alignItems","justifyContent","width","height","margin","backgroundColor","borderRadius","color","fontSize"],"sources":["/cs/home/sz78/Documents/my-expo-app/examples-master/with-drawer-navigation/App.js"],"sourcesContent":["import { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { TouchableOpacity, View, Text, StyleSheet } from \"react-native\";\nimport MessagesScreen from './MessagesScreen.js'; // 导入 MessagesScreen\nimport NewScreen from './WeatherScreen.js'; // NewScreen\nimport MoodScreen from './MoodScreen.js'; // NewScreen\nimport Video from 'react-native-video';\n\nfunction HomeScreen({ navigation }) {\n  return (\n    <View style={styles.homeContainer}>\n      <TouchableOpacity style={styles.homeButton} onPress={navigation.openDrawer}>\n        <Text style={styles.homeButtonText}>Open navigation drawer</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.homeButton} onPress={() => navigation.navigate('Message to Fife Rabbits')}>\n        <Text style={styles.homeButtonText}>Go to Message to Fife Rabbits</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.homeButton} onPress={() => navigation.navigate('Environment')}>\n        <Text style={styles.homeButtonText}>Go to check the Fife environment</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.homeButton} onPress={() => navigation.navigate('Mood Color')}>\n        <Text style={styles.homeButtonText}>Go to send you color of moods</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst Drawer = createDrawerNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Drawer.Navigator initialRouteName=\"Home\">\n        <Drawer.Screen name=\"Home\" component={HomeScreen} />\n        <Drawer.Screen name=\"Message to Fife Rabbits\" component={MessagesScreen} />\n        <Drawer.Screen name=\"Mood Color\" component={MoodScreen} />\n        <Drawer.Screen name=\"Environment\" component={NewScreen} />\n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  homeContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  homeButton: {\n    width: 250,\n    height: 50,\n    margin: 5,\n    backgroundColor: '#007AFF',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 5,\n  },\n  homeButtonText: {\n    color: 'white',\n    fontSize: 16,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}