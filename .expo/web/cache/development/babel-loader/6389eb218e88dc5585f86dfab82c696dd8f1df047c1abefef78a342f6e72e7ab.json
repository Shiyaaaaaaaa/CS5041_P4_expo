{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { getDatabase, ref, push, serverTimestamp } from 'firebase/database';\nimport { initializeApp } from 'firebase/app';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDBjUEw_DQNMQsZJWfTtLL0PQJoH-xF0kk\",\n  authDomain: \"sta-cs5041.firebaseapp.com\",\n  databaseURL: \"https://sta-cs5041-p4.firebaseio.com\",\n  projectId: \"sta-cs5041\",\n  storageBucket: \"sta-cs5041.appspot.com\",\n  messagingSenderId: \"639987847762\",\n  appId: \"1:639987847762:web:c5a35616a1aa1cf243458b\"\n};\nvar firebaseToken = \"9dd8d43a-01db-4286-b0e8-371d24237380\";\ninitializeApp(firebaseConfig);\nvar emotions = [{\n  name: 'Happy',\n  color: '#F9D342'\n}, {\n  name: 'Sad',\n  color: '#4A90E2'\n}, {\n  name: 'Angry',\n  color: '#FF6B6B'\n}, {\n  name: 'Excited',\n  color: '#1DE9B6'\n}, {\n  name: 'Calm',\n  color: '#9ED8F6'\n}, {\n  name: 'Anxious',\n  color: '#FFB200'\n}, {\n  name: 'Bored',\n  color: '#AA96DA'\n}, {\n  name: 'Surprised',\n  color: '#FFA87A'\n}, {\n  name: 'Neutral',\n  color: '#D0D1D4'\n}];\nvar deviceWidth = Dimensions.get('window').width;\nvar deviceHeight = Dimensions.get('window').height;\nvar cardSize = deviceWidth / 4;\nvar cardMargin = deviceWidth * 0.01 / 2;\nvar MoodScreen = function MoodScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    inputText = _useState4[0],\n    setInputText = _useState4[1];\n  var handleCardPress = function handleCardPress() {\n    setModalVisible(true);\n  };\n  var handleSubmit = function handleSubmit() {\n    var database = getDatabase();\n    push(ref(database, 'data'), {\n      userId: 'userId_placeholder',\n      groupId: 30,\n      timestamp: serverTimestamp(),\n      type: 'str',\n      string: inputText\n    });\n    setModalVisible(false);\n    setInputText('');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.emotionCardsContainer,\n      children: emotions.map(function (emotion, index) {\n        return _jsx(TouchableOpacity, {\n          onPress: handleCardPress,\n          style: [styles.emotionCard, {\n            backgroundColor: emotion.color\n          }],\n          children: _jsx(Text, {\n            style: styles.emotionText,\n            children: emotion.name\n          })\n        }, index);\n      })\n    }), _jsx(View, {\n      style: {\n        flex: 1\n      }\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        setModalVisible(!modalVisible);\n      },\n      children: _jsx(View, {\n        style: styles.centeredView,\n        children: _jsxs(View, {\n          style: styles.modalView,\n          children: [_jsx(TextInput, {\n            style: styles.input,\n            onChangeText: function onChangeText(text) {\n              return setInputText(text);\n            },\n            value: inputText,\n            placeholder: \"Enter your message\"\n          }), _jsx(Button, {\n            onPress: handleSubmit,\n            title: \"Submit\",\n            color: \"#2196F3\"\n          })]\n        })\n      })\n    })]\n  });\n};\nexport default MoodScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  emotionCardsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    width: '100%',\n    height: deviceHeight * 0.8,\n    alignItems: 'center'\n  },\n  emotionCard: {\n    width: cardSize,\n    height: cardSize,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: cardMargin,\n    borderRadius: 10\n  },\n  emotionText: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: 'white'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","Dimensions","TouchableOpacity","Modal","TextInput","Button","getDatabase","ref","push","serverTimestamp","initializeApp","jsx","_jsx","jsxs","_jsxs","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseToken","emotions","name","color","deviceWidth","get","width","deviceHeight","height","cardSize","cardMargin","MoodScreen","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","_useState3","_useState4","inputText","setInputText","handleCardPress","handleSubmit","database","userId","groupId","timestamp","type","string","style","styles","container","children","emotionCardsContainer","map","emotion","index","onPress","emotionCard","backgroundColor","emotionText","flex","animationType","transparent","visible","onRequestClose","centeredView","modalView","input","onChangeText","text","value","placeholder","title","create","justifyContent","alignItems","flexDirection","flexWrap","margin","borderRadius","fontSize","fontWeight"],"sources":["/cs/home/sz78/Documents/my-expo-app/examples-master/with-drawer-navigation/MoodScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Dimensions,\n  TouchableOpacity,\n  Modal,\n  TextInput,\n  Button,\n} from 'react-native';\nimport { getDatabase, ref, push, serverTimestamp } from 'firebase/database';\nimport { initializeApp } from 'firebase/app';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDBjUEw_DQNMQsZJWfTtLL0PQJoH-xF0kk\",\n  authDomain: \"sta-cs5041.firebaseapp.com\",\n  databaseURL: \"https://sta-cs5041-p4.firebaseio.com\",\n  projectId: \"sta-cs5041\",\n  storageBucket: \"sta-cs5041.appspot.com\",\n  messagingSenderId: \"639987847762\",\n  appId: \"1:639987847762:web:c5a35616a1aa1cf243458b\"\n};\nconst firebaseToken = \"9dd8d43a-01db-4286-b0e8-371d24237380\";\n\ninitializeApp(firebaseConfig);\n\n\nconst emotions = [\n  { name: 'Happy', color: '#F9D342' },\n  { name: 'Sad', color: '#4A90E2' },\n  { name: 'Angry', color: '#FF6B6B' },\n  { name: 'Excited', color: '#1DE9B6' },\n  { name: 'Calm', color: '#9ED8F6' },\n  { name: 'Anxious', color: '#FFB200' },\n  { name: 'Bored', color: '#AA96DA' },\n  { name: 'Surprised', color: '#FFA87A' },\n  { name: 'Neutral', color: '#D0D1D4' },\n];\n\nconst deviceWidth = Dimensions.get('window').width;\nconst deviceHeight = Dimensions.get('window').height;\nconst cardSize = deviceWidth / 4; // Reduce the card size\nconst cardMargin = (deviceWidth * 0.01) / 2; // Reduce the card margin\n\nconst MoodScreen = () => {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [inputText, setInputText] = useState('');\n\n  const handleCardPress = () => {\n    setModalVisible(true);\n  };\n\n  const handleSubmit = () => {\n    const database = getDatabase();\n    push(ref(database, 'data'), {\n      // Replace `userId` with the appropriate value\n      userId: 'userId_placeholder',\n      groupId: 30,\n      timestamp: serverTimestamp(),\n      type: 'str',\n      string: inputText,\n    });\n\n    setModalVisible(false);\n    setInputText('');\n  };\n\n  // ...\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.emotionCardsContainer}>\n        {emotions.map((emotion, index) => (\n          <TouchableOpacity\n            key={index}\n            onPress={handleCardPress}\n            style={[styles.emotionCard, { backgroundColor: emotion.color }]}\n          >\n            <Text style={styles.emotionText}>{emotion.name}</Text>\n          </TouchableOpacity>\n        ))}\n      </View>\n      <View style={{ flex: 1 }} />\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          setModalVisible(!modalVisible);\n        }}\n      >\n        <View style={styles.centeredView}>\n          <View style={styles.modalView}>\n            <TextInput\n              style={styles.input}\n              onChangeText={(text) => setInputText(text)}\n              value={inputText}\n              placeholder=\"Enter your message\"\n            />\n            <Button onPress={handleSubmit} title=\"Submit\" color=\"#2196F3\" />\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\nexport default MoodScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  emotionCardsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    width: '100%',\n    height: deviceHeight * 0.8,\n    alignItems: 'center',\n  },\n\n  emotionCard: {\n    width: cardSize,\n    height: cardSize,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: cardMargin,\n    borderRadius: 10,\n  },\n\n  emotionText: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}