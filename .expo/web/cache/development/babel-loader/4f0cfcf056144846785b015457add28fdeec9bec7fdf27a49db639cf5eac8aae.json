{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Provider as PaperProvider, TextInput, Button as PaperButton, Card as PaperCard, Paragraph } from 'react-native-paper';\nimport { useEffect, useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithCustomToken } from \"firebase/auth\";\nimport { getDatabase, ref, push, serverTimestamp, query, orderByChild, equalTo, limitToLast } from \"firebase/database\";\nimport { getFunctions, httpsCallable } from 'firebase/functions';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useList } from 'react-firebase-hooks/database';\nimport { ListItem, Input, Button } from 'react-native-elements';\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDBjUEw_DQNMQsZJWfTtLL0PQJoH-xF0kk\",\n  authDomain: \"sta-cs5041.firebaseapp.com\",\n  databaseURL: \"https://sta-cs5041-p4.firebaseio.com\",\n  projectId: \"sta-cs5041\",\n  storageBucket: \"sta-cs5041.appspot.com\",\n  messagingSenderId: \"639987847762\",\n  appId: \"1:639987847762:web:c5a35616a1aa1cf243458b\"\n};\nvar firebaseToken = \"9dd8d43a-01db-4286-b0e8-371d24237380\";\nvar firebaseApp = initializeApp(firebaseConfig);\nvar auth = getAuth(firebaseApp);\nvar database = getDatabase(firebaseApp);\nvar functions = getFunctions(firebaseApp);\nvar TemperatureCard = function TemperatureCard(_ref) {\n  var title = _ref.title,\n    message = _ref.message,\n    iconName = _ref.iconName;\n  return _jsx(PaperCard, {\n    style: styles.card,\n    children: _jsxs(PaperCard.Content, {\n      children: [_jsxs(View, {\n        style: styles.cardHeader,\n        children: [_jsx(Text, {\n          style: styles.cardTitle,\n          children: title\n        }), _jsx(FontAwesome, {\n          name: iconName,\n          size: 24,\n          color: \"#000\"\n        })]\n      }), _jsx(Text, {\n        style: styles.cardNumber,\n        children: message.type === 'int' ? message.integer : 'unknown'\n      })]\n    })\n  });\n};\nvar Add = function Add(_ref2) {\n  var user = _ref2.user;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    text = _useState2[0],\n    setText = _useState2[1];\n  return _jsxs(View, {\n    style: styles.inputContainer,\n    children: [_jsx(Input, {\n      containerStyle: styles.textInput,\n      placeholder: \"Message\",\n      value: text,\n      onChangeText: function onChangeText(text) {\n        return setText(text);\n      }\n    }), _jsx(Button, {\n      icon: {\n        name: 'send',\n        color: 'white'\n      },\n      buttonStyle: styles.sendButton,\n      onPress: function onPress() {\n        push(ref(database, 'data'), {\n          userId: user.uid,\n          groupId: 8,\n          timestamp: serverTimestamp(),\n          type: 'int',\n          integer: parseInt(text)\n        });\n      },\n      title: \"Post\"\n    })]\n  });\n};\nvar renderItem = function renderItem(_ref3) {\n  var item = _ref3.item;\n  return _jsx(ListItem, {\n    bottomDivider: true,\n    children: _jsx(ListItem.Content, {\n      children: _jsx(ListItem.Title, {\n        children: item.string\n      })\n    })\n  });\n};\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Messages = function Messages(_ref4) {\n  var _groupID8Messages$, _groupID8Messages$$va, _outsideMessages$, _insideMessages$, _outsideHumidityMessa, _insideHumidityMessag, _groupID8Messages$2, _outsideMessages$2, _insideMessages$2, _outsideHumidityMessa2, _insideHumidityMessag2;\n  var outsideMessages = _ref4.outsideMessages,\n    insideMessages = _ref4.insideMessages,\n    outsideHumidityMessages = _ref4.outsideHumidityMessages,\n    insideHumidityMessages = _ref4.insideHumidityMessages,\n    groupID8Messages = _ref4.groupID8Messages;\n  var showImage = groupID8Messages && ((_groupID8Messages$ = groupID8Messages[0]) == null ? void 0 : (_groupID8Messages$$va = _groupID8Messages$.val()) == null ? void 0 : _groupID8Messages$$va.integer) === 1;\n  console.log(\"Outside Temperature:\", (_outsideMessages$ = outsideMessages[0]) == null ? void 0 : _outsideMessages$.val());\n  console.log(\"Inside Temperature:\", (_insideMessages$ = insideMessages[0]) == null ? void 0 : _insideMessages$.val());\n  console.log(\"Outside Humidity:\", (_outsideHumidityMessa = outsideHumidityMessages[0]) == null ? void 0 : _outsideHumidityMessa.val());\n  console.log(\"Inside Humidity:\", (_insideHumidityMessag = insideHumidityMessages[0]) == null ? void 0 : _insideHumidityMessag.val());\n  console.log(\"GroupID 8 Message:\", (_groupID8Messages$2 = groupID8Messages[0]) == null ? void 0 : _groupID8Messages$2.val());\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: styles.row,\n      children: [_jsx(TemperatureCard, {\n        title: \"Outside Temperature\",\n        message: ((_outsideMessages$2 = outsideMessages[0]) == null ? void 0 : _outsideMessages$2.val()) || {},\n        iconName: \"thermometer-empty\"\n      }), _jsx(TemperatureCard, {\n        title: \"Inside Temperature\",\n        message: ((_insideMessages$2 = insideMessages[0]) == null ? void 0 : _insideMessages$2.val()) || {},\n        iconName: \"thermometer-half\"\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(TemperatureCard, {\n        title: \"Outside Humidity\",\n        message: ((_outsideHumidityMessa2 = outsideHumidityMessages[0]) == null ? void 0 : _outsideHumidityMessa2.val()) || {},\n        iconName: \"tint\"\n      }), _jsx(TemperatureCard, {\n        title: \"Inside Humidity\",\n        message: ((_insideHumidityMessag2 = insideHumidityMessages[0]) == null ? void 0 : _insideHumidityMessag2.val()) || {},\n        iconName: \"tint\"\n      })]\n    }), showImage && _jsx(Image, {\n      source: {\n        uri: 'https://path-to-your-image.com/image.jpg'\n      },\n      style: {\n        width: '100%',\n        height: 200\n      }\n    })]\n  });\n};\nexport default function MessagesScreen() {\n  var _useAuthState = useAuthState(auth),\n    _useAuthState2 = _slicedToArray(_useAuthState, 3),\n    user = _useAuthState2[0],\n    authLoading = _useAuthState2[1],\n    authError = _useAuthState2[2];\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var _token$data, _token$data2;\n      var getToken = httpsCallable(functions, 'getToken');\n      var token = yield getToken({\n        token: firebaseToken\n      });\n      if ((token == null ? void 0 : (_token$data = token.data) == null ? void 0 : _token$data.result) === 'ok' && token != null && (_token$data2 = token.data) != null && _token$data2.token) {\n        signInWithCustomToken(auth, token.data.token);\n      } else {\n        var _token$data$reason, _token$data3;\n        console.error((_token$data$reason = token == null ? void 0 : (_token$data3 = token.data) == null ? void 0 : _token$data3.reason) != null ? _token$data$reason : 'unknownError');\n      }\n    })();\n  }, []);\n  var _useList = useList(user ? query(ref(database, 'data'), orderByChild('groupId'), equalTo(1), limitToLast(1)) : null),\n    _useList2 = _slicedToArray(_useList, 3),\n    snapshots = _useList2[0],\n    dbLoading = _useList2[1],\n    dbError = _useList2[2];\n  var _useList3 = useList(user ? query(ref(database, 'data'), orderByChild('groupId'), equalTo(2), limitToLast(1)) : null),\n    _useList4 = _slicedToArray(_useList3, 3),\n    insideSnapshots = _useList4[0],\n    insideDbLoading = _useList4[1],\n    insideDbError = _useList4[2];\n  var _useList5 = useList(user ? query(ref(database, 'data'), orderByChild('groupId'), equalTo(11), limitToLast(1)) : null),\n    _useList6 = _slicedToArray(_useList5, 3),\n    outsideHumiditySnapshots = _useList6[0],\n    outsideHumidityLoading = _useList6[1],\n    outsideHumidityError = _useList6[2];\n  var _useList7 = useList(user ? query(ref(database, 'data'), orderByChild('groupId'), equalTo(12), limitToLast(1)) : null),\n    _useList8 = _slicedToArray(_useList7, 3),\n    insideHumiditySnapshots = _useList8[0],\n    insideHumidityLoading = _useList8[1],\n    insideHumidityError = _useList8[2];\n  return _jsx(PaperProvider, {\n    children: _jsxs(SafeAreaView, {\n      style: styles.container,\n      children: [snapshots && insideSnapshots && outsideHumiditySnapshots && insideHumiditySnapshots ? _jsx(Messages, {\n        outsideMessages: snapshots,\n        insideMessages: insideSnapshots,\n        outsideHumidityMessages: outsideHumiditySnapshots,\n        insideHumidityMessages: insideHumiditySnapshots\n      }) : null, _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    padding: 10\n  },\n  card: {\n    flex: 1,\n    margin: 10\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  cardTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 5\n  },\n  cardNumber: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: '#2196F3',\n    textAlign: 'center'\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["Provider","PaperProvider","TextInput","Button","PaperButton","Card","PaperCard","Paragraph","useEffect","useState","StatusBar","initializeApp","getAuth","signInWithCustomToken","getDatabase","ref","push","serverTimestamp","query","orderByChild","equalTo","limitToLast","getFunctions","httpsCallable","useAuthState","useList","ListItem","Input","FontAwesome","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseToken","firebaseApp","auth","database","functions","TemperatureCard","_ref","title","message","iconName","_jsx","style","styles","card","children","_jsxs","Content","View","cardHeader","Text","cardTitle","name","size","color","cardNumber","type","integer","Add","_ref2","user","_useState","_useState2","_slicedToArray","text","setText","inputContainer","containerStyle","textInput","placeholder","value","onChangeText","icon","buttonStyle","sendButton","onPress","userId","uid","groupId","timestamp","parseInt","renderItem","_ref3","item","bottomDivider","Title","string","Image","jsx","jsxs","Fragment","_Fragment","Messages","_ref4","_groupID8Messages$","_groupID8Messages$$va","_outsideMessages$","_insideMessages$","_outsideHumidityMessa","_insideHumidityMessag","_groupID8Messages$2","_outsideMessages$2","_insideMessages$2","_outsideHumidityMessa2","_insideHumidityMessag2","outsideMessages","insideMessages","outsideHumidityMessages","insideHumidityMessages","groupID8Messages","showImage","val","console","log","row","source","uri","width","height","MessagesScreen","_useAuthState","_useAuthState2","authLoading","authError","_asyncToGenerator","_token$data","_token$data2","getToken","token","data","result","_token$data$reason","_token$data3","error","reason","_useList","_useList2","snapshots","dbLoading","dbError","_useList3","_useList4","insideSnapshots","insideDbLoading","insideDbError","_useList5","_useList6","outsideHumiditySnapshots","outsideHumidityLoading","outsideHumidityError","_useList7","_useList8","insideHumiditySnapshots","insideHumidityLoading","insideHumidityError","SafeAreaView","container","StyleSheet","create","flex","backgroundColor","padding","margin","flexDirection","justifyContent","fontSize","fontWeight","textAlign","marginBottom","alignItems"],"sources":["/cs/home/sz78/Documents/my-expo-app/examples-master/with-drawer-navigation/WeatherScreen.js"],"sourcesContent":["import {\n    ScrollView,\n    StyleSheet,\n    View,\n    SafeAreaView,\n    FlatList,\n    Text,\n  } from 'react-native';\n  \n  import {\n    Provider as PaperProvider,\n    TextInput,\n    Button as PaperButton,\n    Card as PaperCard,\n    Paragraph,\n  } from 'react-native-paper';\n  \n  import { useEffect, useState } from 'react'; // 导入 useEffect 和 useState\n  \n  import { StatusBar } from 'expo-status-bar';\n  \n  import { initializeApp } from \"firebase/app\";\n  import { getAuth, signInWithCustomToken } from \"firebase/auth\";\n  import { getDatabase, ref, push, serverTimestamp, query, orderByChild, equalTo, limitToLast } from \"firebase/database\";\n  import { getFunctions, httpsCallable } from 'firebase/functions';\n  \n  import { useAuthState } from 'react-firebase-hooks/auth';\n  import { useList } from 'react-firebase-hooks/database';\n  \n  import { ListItem, Input, Button } from 'react-native-elements';\n\n  //图标库\n  import FontAwesome from 'react-native-vector-icons/FontAwesome';\n\n  \n  const firebaseConfig = {\n    apiKey: \"AIzaSyDBjUEw_DQNMQsZJWfTtLL0PQJoH-xF0kk\",\n    authDomain: \"sta-cs5041.firebaseapp.com\",\n    databaseURL: \"https://sta-cs5041-p4.firebaseio.com\",\n    projectId: \"sta-cs5041\",\n    storageBucket: \"sta-cs5041.appspot.com\",\n    messagingSenderId: \"639987847762\",\n    appId: \"1:639987847762:web:c5a35616a1aa1cf243458b\"\n  };\n  \n  const firebaseToken = \"9dd8d43a-01db-4286-b0e8-371d24237380\";\n  \n  const firebaseApp = initializeApp(firebaseConfig);\n  const auth = getAuth(firebaseApp);\n  const database = getDatabase(firebaseApp);\n  const functions = getFunctions(firebaseApp);\n  \n  const TemperatureCard = ({ title, message, iconName }) => (\n    <PaperCard style={styles.card}>\n      <PaperCard.Content>\n        <View style={styles.cardHeader}>\n          <Text style={styles.cardTitle}>{title}</Text>\n          <FontAwesome name={iconName} size={24} color=\"#000\" />\n        </View>\n        <Text style={styles.cardNumber}>\n          {message.type === 'int' ? message.integer : 'unknown'}\n        </Text>\n      </PaperCard.Content>\n    </PaperCard>\n  );  \n  \n  \n  const Add = ({ user }) => {\n    const [text, setText] = useState('');\n  \n    return (\n      <View style={styles.inputContainer}>\n        <Input\n          containerStyle={styles.textInput}\n          placeholder=\"Message\"\n          value={text}\n          onChangeText={(text) => setText(text)}\n        />\n        <Button\n        icon={{ name: 'send', color: 'white' }}\n        buttonStyle={styles.sendButton}\n        onPress={() => {\n        push(ref(database, 'data'), {\n            userId: user.uid,\n            groupId: 8,\n            timestamp: serverTimestamp(),\n            type: 'int',\n            integer: parseInt(text),\n        });\n    }}\n    title=\"Post\"\n/>\n      </View>\n    );\n  };\n  \n  const renderItem = ({ item }) => (\n    <ListItem bottomDivider>\n      <ListItem.Content>\n        <ListItem.Title>{item.string}</ListItem.Title>\n      </ListItem.Content>\n    </ListItem>\n  );\n  \n  import { Image } from 'react-native';\n\n  const Messages = ({\n    outsideMessages,\n    insideMessages,\n    outsideHumidityMessages,\n    insideHumidityMessages,\n    groupID8Messages,\n  }) => {\n    const showImage = groupID8Messages && groupID8Messages[0]?.val()?.integer === 1;\n  \n    // 打印接收到的信号\n  console.log(\"Outside Temperature:\", outsideMessages[0]?.val());\n  console.log(\"Inside Temperature:\", insideMessages[0]?.val());\n  console.log(\"Outside Humidity:\", outsideHumidityMessages[0]?.val());\n  console.log(\"Inside Humidity:\", insideHumidityMessages[0]?.val());\n  console.log(\"GroupID 8 Message:\", groupID8Messages[0]?.val());\n    return (\n      <>\n        <View style={styles.row}>\n          <TemperatureCard\n            title=\"Outside Temperature\"\n            message={outsideMessages[0]?.val() || {}}\n            iconName=\"thermometer-empty\"\n          />\n          <TemperatureCard\n            title=\"Inside Temperature\"\n            message={insideMessages[0]?.val() || {}}\n            iconName=\"thermometer-half\"\n          />\n        </View>\n        <View style={styles.row}>\n          <TemperatureCard\n            title=\"Outside Humidity\"\n            message={outsideHumidityMessages[0]?.val() || {}}\n            iconName=\"tint\"\n          />\n          <TemperatureCard\n            title=\"Inside Humidity\"\n            message={insideHumidityMessages[0]?.val() || {}}\n            iconName=\"tint\"\n          />\n        </View>\n        {showImage && (\n          <Image\n            source={{ uri: 'https://path-to-your-image.com/image.jpg' }}\n            style={{ width: '100%', height: 200 }}\n          />\n        )}\n      </>\n    );\n  };\n  \n\n  \n  \n  export default function MessagesScreen() {\n    const [user, authLoading, authError] = useAuthState(auth);\n  \n    useEffect(() => {\n      (async () => {\n        const getToken = httpsCallable(functions, 'getToken');\n        const token = await getToken({ token: firebaseToken });\n        if (token?.data?.result === 'ok' && token?.data?.token) {\n          signInWithCustomToken(auth, token.data.token);\n        } else {\n          console.error(token?.data?.reason ?? 'unknownError');\n        }\n      })();\n    }, []);\n    \n    //外部温度\n    const [snapshots, dbLoading, dbError] = useList(\n      user\n        ? query(\n            ref(database, 'data'),\n            orderByChild('groupId'),\n            equalTo(1),\n            limitToLast(1)\n          )\n        : null\n    );\n    \n    //内部温度\n    const [insideSnapshots, insideDbLoading, insideDbError] = useList(\n        user\n          ? query(\n              ref(database, 'data'),\n              orderByChild('groupId'),\n              equalTo(2),\n              limitToLast(1)\n            )\n          : null\n      );\n\n      //外部湿度\n      const [outsideHumiditySnapshots, outsideHumidityLoading, outsideHumidityError] = useList(\n        user\n          ? query(\n              ref(database, 'data'),\n              orderByChild('groupId'),\n              equalTo(11),\n              limitToLast(1)\n            )\n          : null\n      );\n      \n      //内部湿度\n      const [insideHumiditySnapshots, insideHumidityLoading, insideHumidityError] = useList(\n        user\n          ? query(\n              ref(database, 'data'),\n              orderByChild('groupId'),\n              equalTo(12),\n              limitToLast(1)\n            )\n          : null\n      );\n      \n  \n      return (\n        <PaperProvider>\n          <SafeAreaView style={styles.container}>\n            {snapshots &&\n            insideSnapshots &&\n            outsideHumiditySnapshots &&\n            insideHumiditySnapshots ? (\n              <Messages\n                outsideMessages={snapshots}\n                insideMessages={insideSnapshots}\n                outsideHumidityMessages={outsideHumiditySnapshots}\n                insideHumidityMessages={insideHumiditySnapshots}\n              />\n            ) : null}\n            <StatusBar style=\"auto\" />\n          </SafeAreaView>\n        </PaperProvider>\n      );          \n  }\n  \n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      padding: 10,\n    },\n    card: {\n      flex: 1,\n      margin: 10,\n    },\n    row: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n    },\n    cardTitle: {\n      fontSize: 18,\n      fontWeight: 'bold',\n      textAlign: 'center',\n      marginBottom: 5,\n    },\n    cardNumber: {\n      fontSize: 36,\n      fontWeight: 'bold',\n      color: '#2196F3',\n      textAlign: 'center',\n    },\n    cardHeader: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    },    \n  });\n  \n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}