{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Video } from \"expo-av\";\nimport React, { useState } from 'react';\nimport MessageScreen from \"./MessageScreen.js\";\nimport WeatherScreen from \"./WeatherScreen.js\";\nimport MoodScreen from \"./MoodScreen.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(new Animated.Value(0)),\n    _useState2 = _slicedToArray(_useState, 1),\n    opacity = _useState2[0];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Animated.View, {\n      style: [styles.background, {\n        opacity: opacity\n      }],\n      children: _jsx(View, {\n        style: {\n          flex: 1,\n          backgroundColor: \"#000\"\n        },\n        children: _jsx(Video, {\n          isLooping: true,\n          isMuted: true,\n          positionMillis: 500,\n          onLoad: function onLoad() {\n            Animated.timing(opacity, {\n              toValue: 1,\n              duration: 500,\n              useNativeDriver: false\n            }).start();\n          },\n          resizeMode: \"cover\",\n          shouldPlay: true,\n          source: {\n            uri: \"http://d23dyxeqlo5psv.cloudfront.net/big_buck_bunny.mp4\"\n          },\n          style: styles.video\n        })\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: navigation.openDrawer,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Open navigation drawer\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(\"MessageScreen\");\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Go to Message to Fife Rabbits\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(\"WeatherScreen\");\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Go to check the Fife environment\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(\"MoodScreen\");\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Go to send you color of moods\"\n      })\n    })]\n  });\n}\nvar Drawer = createDrawerNavigator();\nfunction App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Drawer.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Drawer.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"MessageScreen\",\n        component: MessageScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"WeatherScreen\",\n        component: WeatherScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"MoodScreen\",\n        component: MoodScreen\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: width,\n    height: height,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  background: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  button: {\n    width: \"100%\",\n    maxWidth: 300,\n    backgroundColor: \"#1e90ff\",\n    padding: 15,\n    borderRadius: 8,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 10\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  },\n  video: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    width: \"100%\",\n    height: \"100%\"\n  }\n});\nexport default App;","map":{"version":3,"names":["createDrawerNavigator","NavigationContainer","View","StyleSheet","Dimensions","TouchableOpacity","Text","Animated","Video","React","useState","MessageScreen","WeatherScreen","MoodScreen","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","HomeScreen","_ref","navigation","_useState","Value","_useState2","_slicedToArray","opacity","style","styles","container","children","background","flex","backgroundColor","isLooping","isMuted","positionMillis","onLoad","timing","toValue","duration","useNativeDriver","start","resizeMode","shouldPlay","source","uri","video","button","onPress","openDrawer","buttonText","navigate","Drawer","App","Navigator","initialRouteName","Screen","name","component","create","alignItems","justifyContent","position","top","left","right","bottom","maxWidth","padding","borderRadius","marginBottom","color","fontWeight","fontSize"],"sources":["/cs/home/sz78/Documents/my-expo-app/examples-master/with-drawer-navigation/App.js"],"sourcesContent":["\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { View, StyleSheet, Dimensions } from 'react-native';\nimport { TouchableOpacity, Text, Animated } from \"react-native\";\n\nimport { Video } from \"expo-av\";\nimport React, { useState } from 'react';\n\nimport MessageScreen from './MessageScreen.js';\nimport WeatherScreen from './WeatherScreen.js';\nimport MoodScreen from './MoodScreen.js';\n\nconst { width, height } = Dimensions.get('window');\n\nfunction HomeScreen({ navigation }) {\n  const [opacity] = useState(new Animated.Value(0));\n  return (\n    <View style={styles.container}>\n      <Animated.View\n        style={[styles.background, { opacity: opacity }]}\n      >\n        <View style={{ flex: 1, backgroundColor: \"#000\" }}>\n          <Video\n            isLooping\n            isMuted\n            positionMillis={500}\n            onLoad={() => {\n              Animated.timing(opacity, {\n                toValue: 1,\n                duration: 500,\n                useNativeDriver: false,\n              }).start();\n            }}\n            resizeMode=\"cover\"\n            shouldPlay\n            source={{\n              uri: \"http://d23dyxeqlo5psv.cloudfront.net/big_buck_bunny.mp4\",\n            }}\n            style={styles.video}\n          />\n        </View>\n      </Animated.View>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={navigation.openDrawer}\n      >\n        <Text style={styles.buttonText}>Open navigation drawer</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => navigation.navigate(\"MessageScreen\")}\n      >\n        <Text style={styles.buttonText}>Go to Message to Fife Rabbits</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => navigation.navigate(\"WeatherScreen\")}\n      >\n        <Text style={styles.buttonText}>Go to check the Fife environment</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => navigation.navigate(\"MoodScreen\")}\n      >\n        <Text style={styles.buttonText}>Go to send you color of moods</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst Drawer = createDrawerNavigator();\n\nfunction App() {\n  return (\n    <NavigationContainer>\n      <Drawer.Navigator initialRouteName=\"Home\">\n        <Drawer.Screen name=\"Home\" component={HomeScreen} />\n        <Drawer.Screen name=\"MessageScreen\" component={MessageScreen} />\n        <Drawer.Screen name=\"WeatherScreen\" component={WeatherScreen} />\n        <Drawer.Screen name=\"MoodScreen\" component={MoodScreen} />\n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: width,\n    height: height,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },  \n  background: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  button: {\n    width: \"100%\",\n    maxWidth: 300,\n    backgroundColor: \"#1e90ff\",\n    padding: 15,\n    borderRadius: 8,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 10,\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 16,\n  },\n  video: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    width: \"100%\",\n    height: \"100%\",\n  },\n});\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}