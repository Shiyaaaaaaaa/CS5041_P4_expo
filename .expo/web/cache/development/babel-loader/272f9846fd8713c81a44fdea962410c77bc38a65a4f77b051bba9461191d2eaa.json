{"ast":null,"code":"import React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Video } from \"expo-av\";\nimport { useMemo } from \"react\";\nimport MessageScreen from \"./MessageScreen.js\";\nimport WeatherScreen from \"./WeatherScreen.js\";\nimport MoodScreen from \"./MoodScreen.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.background,\n      children: _jsx(Animated.View, {\n        style: [styles.backgroundViewWrapper, {\n          opacity: opacity\n        }],\n        children: _jsx(Video, {\n          isLooping: true,\n          isMuted: true,\n          positionMillis: 500,\n          onLoad: function onLoad() {\n            Animated.timing(opacity, {\n              toValue: 1,\n              useNativeDriver: true\n            }).start();\n          },\n          resizeMode: \"cover\",\n          shouldPlay: true,\n          source: {\n            uri: \"http://d23dyxeqlo5psv.cloudfront.net/big_buck_bunny.mp4\"\n          },\n          style: {\n            flex: 1\n          }\n        })\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: navigation.openDrawer,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Open navigation drawer\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(\"MessageScreen\");\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Go to Message to Fife Rabbits\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(\"WeatherScreen\");\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Go to check the Fife environment\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(\"MoodScreen\");\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Go to send you color of moods\"\n      })\n    })]\n  });\n}\nvar Drawer = createDrawerNavigator();\nfunction App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Drawer.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Drawer.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"MessageScreen\",\n        component: MessageScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"WeatherScreen\",\n        component: WeatherScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"MoodScreen\",\n        component: MoodScreen\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#f5f5f5\"\n  },\n  button: {\n    width: \"100%\",\n    maxWidth: 300,\n    backgroundColor: \"#1e90ff\",\n    padding: 15,\n    borderRadius: 8,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 10\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  }\n});\nexport default App;","map":{"version":3,"names":["React","createDrawerNavigator","NavigationContainer","Button","View","StyleSheet","TouchableOpacity","Text","Animated","Video","useMemo","MessageScreen","WeatherScreen","MoodScreen","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","style","styles","container","children","background","backgroundViewWrapper","opacity","isLooping","isMuted","positionMillis","onLoad","timing","toValue","useNativeDriver","start","resizeMode","shouldPlay","source","uri","flex","button","onPress","openDrawer","buttonText","navigate","Drawer","App","Navigator","initialRouteName","Screen","name","component","create","alignItems","justifyContent","backgroundColor","width","maxWidth","padding","borderRadius","marginBottom","color","fontWeight","fontSize"],"sources":["/cs/home/sz78/Documents/my-expo-app/examples-master/with-drawer-navigation/App.js"],"sourcesContent":["import React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { Button, View, StyleSheet } from 'react-native';\nimport { TouchableOpacity, Text } from \"react-native\";\nimport { Animated } from 'react-native';\n\n\nimport { Video } from \"expo-av\";\nimport { useMemo } from \"react\";\n\nimport MessageScreen from './MessageScreen.js';\nimport WeatherScreen from './WeatherScreen.js';\nimport MoodScreen from './MoodScreen.js';\n\nfunction HomeScreen({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <View style={styles.background}>\n        <Animated.View\n          style={[styles.backgroundViewWrapper, { opacity: opacity }]}\n        >\n          <Video\n            isLooping\n            isMuted\n            positionMillis={500}\n            onLoad={() => {\n              // https://facebook.github.io/react-native/docs/animated#timing\n              Animated.timing(opacity, {\n                toValue: 1,\n                useNativeDriver: true,\n              }).start();\n            }}\n            resizeMode=\"cover\"\n            shouldPlay\n            source={{\n              uri: \"http://d23dyxeqlo5psv.cloudfront.net/big_buck_bunny.mp4\",\n            }}\n            style={{ flex: 1 }}\n          />\n        </Animated.View>\n      </View>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={navigation.openDrawer}\n      >\n        <Text style={styles.buttonText}>Open navigation drawer</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => navigation.navigate(\"MessageScreen\")}\n      >\n        <Text style={styles.buttonText}>Go to Message to Fife Rabbits</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => navigation.navigate(\"WeatherScreen\")}\n      >\n        <Text style={styles.buttonText}>Go to check the Fife environment</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => navigation.navigate(\"MoodScreen\")}\n      >\n        <Text style={styles.buttonText}>Go to send you color of moods</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\n\n\nconst Drawer = createDrawerNavigator();\n\nfunction App() {\n  return (\n    <NavigationContainer>\n      <Drawer.Navigator initialRouteName=\"Home\">\n        <Drawer.Screen name=\"Home\" component={HomeScreen} />\n        <Drawer.Screen name=\"MessageScreen\" component={MessageScreen} />\n        <Drawer.Screen name=\"WeatherScreen\" component={WeatherScreen} />\n        <Drawer.Screen name=\"MoodScreen\" component={MoodScreen} />\n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#f5f5f5\", // 设置背景色\n  },\n  button: {\n    width: \"100%\",\n    maxWidth: 300,\n    backgroundColor: \"#1e90ff\", // 设置按钮背景色\n    padding: 15,\n    borderRadius: 8, // 设置按钮圆角\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 10, // 设置按钮之间的间距\n  },\n  buttonText: {\n    color: \"white\", // 设置按钮文本颜色\n    fontWeight: \"bold\", // 设置按钮文本加粗\n    fontSize: 16, // 设置按钮文本大小\n  },\n});\n\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}