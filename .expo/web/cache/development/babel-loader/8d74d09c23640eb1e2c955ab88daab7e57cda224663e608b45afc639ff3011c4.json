{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar emotions = [{\n  name: 'Happy',\n  color: '#F9D342'\n}, {\n  name: 'Sad',\n  color: '#4A90E2'\n}, {\n  name: 'Angry',\n  color: '#FF6B6B'\n}, {\n  name: 'Excited',\n  color: '#1DE9B6'\n}, {\n  name: 'Calm',\n  color: '#9ED8F6'\n}, {\n  name: 'Anxious',\n  color: '#FFB200'\n}, {\n  name: 'Bored',\n  color: '#AA96DA'\n}, {\n  name: 'Surprised',\n  color: '#FFA87A'\n}, {\n  name: 'Neutral',\n  color: '#D0D1D4'\n}];\nvar deviceWidth = Dimensions.get('window').width;\nvar deviceHeight = Dimensions.get('window').height;\nvar cardSize = deviceWidth / 4;\nvar cardMargin = deviceWidth * 0.01 / 2;\nvar MoodScreen = function MoodScreen() {\n  var numEmotions = emotions.length;\n  var numRows = Math.ceil(numEmotions / 3);\n  var emptyCards = Array(3 - numEmotions % 3).fill(null);\n  return _jsxs(View, {\n    style: styles.emotionCardsContainer,\n    children: [emotions.map(function (emotion, index) {\n      return _jsx(TouchableOpacity, {\n        onPress: function onPress() {},\n        children: _jsxs(View, {\n          style: [styles.emotionCard, {\n            backgroundColor: emotion.color\n          }],\n          children: [_jsx(Text, {\n            style: styles.emotionText,\n            children: emotion.name\n          }), _jsx(Icon, {\n            name: \"smile-o\",\n            size: 24,\n            color: \"white\"\n          })]\n        })\n      }, index);\n    }), emptyCards.map(function (_, index) {\n      return _jsx(View, {\n        style: styles.emotionCard\n      }, index);\n    })]\n  });\n};\nexport default MoodScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  emotionCardsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    width: '100%',\n    height: deviceHeight * 0.8,\n    alignItems: 'center'\n  },\n  emotionCard: {\n    width: cardSize,\n    height: cardSize,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: cardMargin,\n    borderRadius: 10\n  },\n  emotionText: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: 'white'\n  }\n});","map":{"version":3,"names":["React","View","Text","StyleSheet","Dimensions","TouchableOpacity","Icon","jsx","_jsx","jsxs","_jsxs","emotions","name","color","deviceWidth","get","width","deviceHeight","height","cardSize","cardMargin","MoodScreen","numEmotions","length","numRows","Math","ceil","emptyCards","Array","fill","style","styles","emotionCardsContainer","children","map","emotion","index","onPress","emotionCard","backgroundColor","emotionText","size","_","create","container","flex","justifyContent","alignItems","flexDirection","flexWrap","margin","borderRadius","fontSize","fontWeight"],"sources":["/cs/home/sz78/Documents/my-expo-app/examples-master/with-drawer-navigation/MoodScreen.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, Dimensions, TouchableOpacity } from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\n\nconst emotions = [\n  { name: 'Happy', color: '#F9D342' },\n  { name: 'Sad', color: '#4A90E2' },\n  { name: 'Angry', color: '#FF6B6B' },\n  { name: 'Excited', color: '#1DE9B6' },\n  { name: 'Calm', color: '#9ED8F6' },\n  { name: 'Anxious', color: '#FFB200' },\n  { name: 'Bored', color: '#AA96DA' },\n  { name: 'Surprised', color: '#FFA87A' },\n  { name: 'Neutral', color: '#D0D1D4' },\n];\n\nconst deviceWidth = Dimensions.get('window').width;\nconst deviceHeight = Dimensions.get('window').height;\nconst cardSize = deviceWidth / 4; // Reduce the card size\nconst cardMargin = (deviceWidth * 0.01) / 2; // Reduce the card margin\n\nconst MoodScreen = () => {\n  const numEmotions = emotions.length;\n  const numRows = Math.ceil(numEmotions / 3);\n  const emptyCards = Array(3 - (numEmotions % 3)).fill(null);\n\n  return (\n    <View style={styles.emotionCardsContainer}>\n    {emotions.map((emotion, index) => (\n    <TouchableOpacity key={index} onPress={() => {}}>\n      <View\n        style={[\n          styles.emotionCard,\n          { backgroundColor: emotion.color },\n        ]}\n      >\n        <Text style={styles.emotionText}>{emotion.name}</Text>\n        <Icon name=\"smile-o\" size={24} color=\"white\" />\n      </View>\n    </TouchableOpacity>\n    ))}\n    {emptyCards.map((_, index) => (\n    <View key={index} style={styles.emotionCard} />\n    ))}\n  </View>\n  );\n};\n\nexport default MoodScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  emotionCardsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    width: '100%',\n    height: deviceHeight * 0.8,\n    alignItems: 'center',\n  },\n\n  emotionCard: {\n    width: cardSize,\n    height: cardSize,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: cardMargin,\n    borderRadius: 10,\n  },\n\n  emotionText: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}