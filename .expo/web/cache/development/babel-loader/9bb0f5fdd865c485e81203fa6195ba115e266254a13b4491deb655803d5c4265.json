{"ast":null,"code":"import React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Video } from \"expo-av\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport MessageScreen from \"./MessageScreen\";\nimport WeatherScreen from \"./WeatherScreen\";\nimport MoodScreen from \"./MoodScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Video, {\n      isLooping: true,\n      isMuted: true,\n      resizeMode: \"cover\",\n      shouldPlay: true,\n      source: {\n        uri: \"https://cdn.coverr.co/videos/coverr-the-ocean-in-the-evening-3606/1080p.mp4\"\n      },\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        position: \"absolute\"\n      }\n    }), _jsx(Pressable, {\n      style: function style(_ref2) {\n        var pressed = _ref2.pressed;\n        return [styles.button, {\n          opacity: pressed ? 0.5 : 1\n        }];\n      },\n      onPress: navigation.openDrawer,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Open navigation drawer\"\n      })\n    }), _jsx(Pressable, {\n      style: function style(_ref3) {\n        var pressed = _ref3.pressed;\n        return [styles.button, {\n          opacity: pressed ? 0.5 : 1\n        }];\n      },\n      onPress: function onPress() {\n        return navigation.navigate(\"MessageScreen\");\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Send message to Fife Rabbits\"\n      })\n    }), _jsx(Pressable, {\n      style: function style(_ref4) {\n        var pressed = _ref4.pressed;\n        return [styles.button, {\n          opacity: pressed ? 0.5 : 1\n        }];\n      },\n      onPress: function onPress() {\n        return navigation.navigate(\"MoodScreen\");\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Send your color of moods\"\n      })\n    }), _jsx(Pressable, {\n      style: function style(_ref5) {\n        var pressed = _ref5.pressed;\n        return [styles.button, {\n          opacity: pressed ? 0.5 : 1\n        }];\n      },\n      onPress: function onPress() {\n        return navigation.navigate(\"WeatherScreen\");\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Go to check the Fife environment\"\n      })\n    })]\n  });\n}\nvar Drawer = createDrawerNavigator();\nfunction App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Drawer.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Drawer.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"MessageScreen\",\n        component: MessageScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"WeatherScreen\",\n        component: WeatherScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"MoodScreen\",\n        component: MoodScreen\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  button: {\n    width: \"100%\",\n    maxWidth: 300,\n    backgroundColor: \"#1e90ff\",\n    padding: 15,\n    borderRadius: 8,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 10\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  }\n});\nexport default App;","map":{"version":3,"names":["React","useState","StyleSheet","View","Text","Pressable","Dimensions","Video","NavigationContainer","createDrawerNavigator","MessageScreen","WeatherScreen","MoodScreen","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","HomeScreen","_ref","navigation","style","styles","container","children","isLooping","isMuted","resizeMode","shouldPlay","source","uri","position","_ref2","pressed","button","opacity","onPress","openDrawer","buttonText","_ref3","navigate","_ref4","_ref5","Drawer","App","Navigator","initialRouteName","Screen","name","component","create","flex","alignItems","justifyContent","maxWidth","backgroundColor","padding","borderRadius","marginBottom","color","fontWeight","fontSize"],"sources":["/cs/home/sz78/Documents/P4_expo/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Pressable,\n  Dimensions,\n} from \"react-native\";\nimport { Video } from \"expo-av\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport MessageScreen from \"./MessageScreen\";\nimport WeatherScreen from \"./WeatherScreen\";\nimport MoodScreen from \"./MoodScreen\";\n\nconst { width, height } = Dimensions.get(\"window\");\n\nfunction HomeScreen({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Video\n        isLooping\n        isMuted\n        resizeMode=\"cover\"\n        shouldPlay\n        source={{\n          uri: \"https://cdn.coverr.co/videos/coverr-the-ocean-in-the-evening-3606/1080p.mp4\",\n        }}\n        style={{ width: \"100%\", height: \"100%\", position: \"absolute\" }}\n      />\n      <Pressable\n        style={({ pressed }) => [\n          styles.button,\n          { opacity: pressed ? 0.5 : 1 },\n        ]}\n        onPress={navigation.openDrawer}\n      >\n        <Text style={styles.buttonText}>Open navigation drawer</Text>\n      </Pressable>\n      <Pressable\n        style={({ pressed }) => [\n          styles.button,\n          { opacity: pressed ? 0.5 : 1 },\n        ]}\n        onPress={() => navigation.navigate(\"MessageScreen\")}\n      >\n        <Text style={styles.buttonText}>Send message to Fife Rabbits</Text>\n      </Pressable>\n      <Pressable\n        style={({ pressed }) => [\n          styles.button,\n          { opacity: pressed ? 0.5 : 1 },\n        ]}\n        onPress={() => navigation.navigate(\"MoodScreen\")}\n      >\n        <Text style={styles.buttonText}>Send your color of moods</Text>\n      </Pressable>\n      <Pressable\n        style={({ pressed }) => [\n          styles.button,\n          { opacity: pressed ? 0.5 : 1 },\n        ]}\n        onPress={() => navigation.navigate(\"WeatherScreen\")}\n      >\n        <Text style={styles.buttonText}>Go to check the Fife environment</Text>\n      </Pressable>\n    </View>\n  );\n}\n\nconst Drawer = createDrawerNavigator();\n\nfunction App() {\n  return (\n    <NavigationContainer>\n      <Drawer.Navigator initialRouteName=\"Home\">\n        <Drawer.Screen name=\"Home\" component={HomeScreen} />\n        <Drawer.Screen name=\"MessageScreen\" component={MessageScreen} />\n        <Drawer.Screen name=\"WeatherScreen\" component={WeatherScreen} />\n        <Drawer.Screen name=\"MoodScreen\" component={MoodScreen} />\n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  button: {\n    width: \"100%\",\n    maxWidth: 300,\n    backgroundColor: \"#1e90ff\",\n    padding: 15,\n    borderRadius: 8,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 10,\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 16,\n  },\n});\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}