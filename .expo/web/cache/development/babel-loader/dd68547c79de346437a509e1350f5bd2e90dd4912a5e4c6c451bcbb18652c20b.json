{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useEffect, useRef } from 'react';\nimport { makeMutable, registerSensor, unregisterSensor } from \"../core\";\nimport { SensorType, IOSReferenceFrame } from \"../commonTypes\";\nimport { callMicrotasks } from \"../threads\";\nfunction initSensorData(sensorType) {\n  if (sensorType === SensorType.ROTATION) {\n    return makeMutable({\n      qw: 0,\n      qx: 0,\n      qy: 0,\n      qz: 0,\n      yaw: 0,\n      pitch: 0,\n      roll: 0,\n      interfaceOrientation: 0\n    });\n  } else {\n    return makeMutable({\n      x: 0,\n      y: 0,\n      z: 0,\n      interfaceOrientation: 0\n    });\n  }\n}\nvar eulerToQuaternion = function () {\n  var _f = function _f(pitch, roll, yaw) {\n    var c1 = Math.cos(pitch / 2);\n    var s1 = Math.sin(pitch / 2);\n    var c2 = Math.cos(roll / 2);\n    var s2 = Math.sin(roll / 2);\n    var c3 = Math.cos(yaw / 2);\n    var s3 = Math.sin(yaw / 2);\n    return [s1 * c2 * c3 - c1 * s2 * s3, c1 * s2 * c3 + s1 * c2 * s3, c1 * c2 * s3 + s1 * s2 * c3, c1 * c2 * c3 - s1 * s2 * s3];\n  };\n  _f._closure = {};\n  _f.asString = \"function eulerToQuaternion(pitch,roll,yaw){const c1=Math.cos(pitch/2);const s1=Math.sin(pitch/2);const c2=Math.cos(roll/2);const s2=Math.sin(roll/2);const c3=Math.cos(yaw/2);const s3=Math.sin(yaw/2);return[s1*c2*c3-c1*s2*s3,c1*s2*c3+s1*c2*s3,c1*c2*s3+s1*s2*c3,c1*c2*c3-s1*s2*s3];}\";\n  _f.__workletHash = 3591825116582;\n  _f.__location = \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedSensor.js (29:0)\";\n  return _f;\n}();\nvar adjustRotationToInterfaceOrientation = function () {\n  var _f = function _f(data) {\n    var interfaceOrientation = data.interfaceOrientation,\n      pitch = data.pitch,\n      roll = data.roll,\n      yaw = data.yaw;\n    if (interfaceOrientation === 90) {\n      data.pitch = roll;\n      data.roll = -pitch;\n      data.yaw = yaw - Math.PI / 2;\n    } else if (interfaceOrientation === 270) {\n      data.pitch = -roll;\n      data.roll = pitch;\n      data.yaw = yaw + Math.PI / 2;\n    } else if (interfaceOrientation === 180) {\n      data.pitch *= -1;\n      data.roll *= -1;\n      data.yaw *= -1;\n    }\n    var q = eulerToQuaternion(data.pitch, data.roll, data.yaw);\n    data.qx = q[0];\n    data.qy = q[1];\n    data.qz = q[2];\n    data.qw = q[3];\n    return data;\n  };\n  _f._closure = {\n    eulerToQuaternion: eulerToQuaternion\n  };\n  _f.asString = \"function adjustRotationToInterfaceOrientation(data){const{eulerToQuaternion}=jsThis._closure;{const{interfaceOrientation:interfaceOrientation,pitch:pitch,roll:roll,yaw:yaw}=data;if(interfaceOrientation===90){data.pitch=roll;data.roll=-pitch;data.yaw=yaw-Math.PI/2;}else if(interfaceOrientation===270){data.pitch=-roll;data.roll=pitch;data.yaw=yaw+Math.PI/2;}else if(interfaceOrientation===180){data.pitch*=-1;data.roll*=-1;data.yaw*=-1;}const q=eulerToQuaternion(data.pitch,data.roll,data.yaw);data.qx=q[0];data.qy=q[1];data.qz=q[2];data.qw=q[3];return data;}}\";\n  _f.__workletHash = 8825715815773;\n  _f.__location = \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedSensor.js (40:0)\";\n  return _f;\n}();\nvar adjustVectorToInterfaceOrientation = function () {\n  var _f = function _f(data) {\n    var interfaceOrientation = data.interfaceOrientation,\n      x = data.x,\n      y = data.y;\n    if (interfaceOrientation === 90) {\n      data.x = -y;\n      data.y = x;\n    } else if (interfaceOrientation === 270) {\n      data.x = y;\n      data.y = -x;\n    } else if (interfaceOrientation === 180) {\n      data.x *= -1;\n      data.y *= -1;\n    }\n    return data;\n  };\n  _f._closure = {};\n  _f.asString = \"function adjustVectorToInterfaceOrientation(data){const{interfaceOrientation:interfaceOrientation,x:x,y:y}=data;if(interfaceOrientation===90){data.x=-y;data.y=x;}else if(interfaceOrientation===270){data.x=y;data.y=-x;}else if(interfaceOrientation===180){data.x*=-1;data.y*=-1;}return data;}\";\n  _f.__workletHash = 14148869364242;\n  _f.__location = \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedSensor.js (69:0)\";\n  return _f;\n}();\nexport function useAnimatedSensor(sensorType, userConfig) {\n  var ref = useRef({\n    sensor: initSensorData(sensorType),\n    unregister: function unregister() {},\n    isAvailable: false,\n    config: {\n      interval: 0,\n      adjustToInterfaceOrientation: true,\n      iosReferenceFrame: IOSReferenceFrame.Auto\n    }\n  });\n  useEffect(function () {\n    ref.current.config = _objectSpread({\n      interval: 'auto',\n      adjustToInterfaceOrientation: true,\n      iosReferenceFrame: IOSReferenceFrame.Auto\n    }, userConfig);\n    var sensorData = ref.current.sensor;\n    var id = registerSensor(sensorType, ref.current.config.interval === 'auto' ? -1 : ref.current.config.interval, ref.current.config.iosReferenceFrame, function () {\n      var _f = function _f(data) {\n        if (ref.current.config.adjustToInterfaceOrientation) {\n          if (sensorType === SensorType.ROTATION) {\n            data = adjustRotationToInterfaceOrientation(data);\n          } else {\n            data = adjustVectorToInterfaceOrientation(data);\n          }\n        }\n        sensorData.value = data;\n        callMicrotasks();\n      };\n      _f._closure = {\n        ref: {\n          current: {\n            config: {\n              adjustToInterfaceOrientation: ref.current.config.adjustToInterfaceOrientation\n            }\n          }\n        },\n        sensorType: sensorType,\n        SensorType: {\n          ROTATION: SensorType.ROTATION\n        },\n        adjustRotationToInterfaceOrientation: adjustRotationToInterfaceOrientation,\n        adjustVectorToInterfaceOrientation: adjustVectorToInterfaceOrientation,\n        sensorData: sensorData,\n        callMicrotasks: callMicrotasks\n      };\n      _f.asString = \"function _f(data){const{ref,sensorType,SensorType,adjustRotationToInterfaceOrientation,adjustVectorToInterfaceOrientation,sensorData,callMicrotasks}=jsThis._closure;{if(ref.current.config.adjustToInterfaceOrientation){if(sensorType===SensorType.ROTATION){data=adjustRotationToInterfaceOrientation(data);}else{data=adjustVectorToInterfaceOrientation(data);}}sensorData.value=data;callMicrotasks();}}\";\n      _f.__workletHash = 13907404341592;\n      _f.__location = \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedSensor.js (110:155)\";\n      return _f;\n    }());\n    if (id !== -1) {\n      ref.current.unregister = function () {\n        return unregisterSensor(id);\n      };\n      ref.current.isAvailable = true;\n    } else {\n      ref.current.unregister = function () {};\n      ref.current.isAvailable = false;\n    }\n    return function () {\n      ref.current.unregister();\n    };\n  }, [sensorType, userConfig]);\n  return ref.current;\n}","map":{"version":3,"names":["useEffect","useRef","makeMutable","registerSensor","unregisterSensor","SensorType","IOSReferenceFrame","callMicrotasks","initSensorData","sensorType","ROTATION","qw","qx","qy","qz","yaw","pitch","roll","interfaceOrientation","x","y","z","eulerToQuaternion","_f","c1","Math","cos","s1","sin","c2","s2","c3","s3","_closure","asString","__workletHash","__location","adjustRotationToInterfaceOrientation","data","PI","q","adjustVectorToInterfaceOrientation","useAnimatedSensor","userConfig","ref","sensor","unregister","isAvailable","config","interval","adjustToInterfaceOrientation","iosReferenceFrame","Auto","current","_objectSpread","sensorData","id","value"],"sources":["/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedSensor.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { makeMutable, registerSensor, unregisterSensor } from '../core';\nimport {\n  SensorType,\n  SharedValue,\n  Value3D,\n  ValueRotation,\n  IOSReferenceFrame,\n} from '../commonTypes';\nimport { callMicrotasks } from '../threads';\n\nexport type SensorConfig = {\n  interval: number | 'auto';\n  adjustToInterfaceOrientation: boolean;\n  iosReferenceFrame: IOSReferenceFrame;\n};\n\nexport type AnimatedSensor = {\n  sensor: SharedValue<Value3D | ValueRotation>;\n  unregister: () => void;\n  isAvailable: boolean;\n  config: SensorConfig;\n};\n\nfunction initSensorData(\n  sensorType: SensorType\n): SharedValue<Value3D | ValueRotation> {\n  if (sensorType === SensorType.ROTATION) {\n    return makeMutable<Value3D | ValueRotation>({\n      qw: 0,\n      qx: 0,\n      qy: 0,\n      qz: 0,\n      yaw: 0,\n      pitch: 0,\n      roll: 0,\n      interfaceOrientation: 0,\n    });\n  } else {\n    return makeMutable<Value3D | ValueRotation>({\n      x: 0,\n      y: 0,\n      z: 0,\n      interfaceOrientation: 0,\n    });\n  }\n}\n\n// euler angles are in order ZXY, z = yaw, x = pitch, y = roll\n// https://github.com/mrdoob/three.js/blob/dev/src/math/Quaternion.js#L237\nfunction eulerToQuaternion(pitch: number, roll: number, yaw: number) {\n  'worklet';\n  const c1 = Math.cos(pitch / 2);\n  const s1 = Math.sin(pitch / 2);\n  const c2 = Math.cos(roll / 2);\n  const s2 = Math.sin(roll / 2);\n  const c3 = Math.cos(yaw / 2);\n  const s3 = Math.sin(yaw / 2);\n\n  return [\n    s1 * c2 * c3 - c1 * s2 * s3,\n    c1 * s2 * c3 + s1 * c2 * s3,\n    c1 * c2 * s3 + s1 * s2 * c3,\n    c1 * c2 * c3 - s1 * s2 * s3,\n  ];\n}\n\nfunction adjustRotationToInterfaceOrientation(data: ValueRotation) {\n  'worklet';\n  const { interfaceOrientation, pitch, roll, yaw } = data;\n  if (interfaceOrientation === 90) {\n    data.pitch = roll;\n    data.roll = -pitch;\n    data.yaw = yaw - Math.PI / 2;\n  } else if (interfaceOrientation === 270) {\n    data.pitch = -roll;\n    data.roll = pitch;\n    data.yaw = yaw + Math.PI / 2;\n  } else if (interfaceOrientation === 180) {\n    data.pitch *= -1;\n    data.roll *= -1;\n    data.yaw *= -1;\n  }\n\n  const q = eulerToQuaternion(data.pitch, data.roll, data.yaw);\n  data.qx = q[0];\n  data.qy = q[1];\n  data.qz = q[2];\n  data.qw = q[3];\n  return data;\n}\n\nfunction adjustVectorToInterfaceOrientation(data: Value3D) {\n  'worklet';\n  const { interfaceOrientation, x, y } = data;\n  if (interfaceOrientation === 90) {\n    data.x = -y;\n    data.y = x;\n  } else if (interfaceOrientation === 270) {\n    data.x = y;\n    data.y = -x;\n  } else if (interfaceOrientation === 180) {\n    data.x *= -1;\n    data.y *= -1;\n  }\n  return data;\n}\n\nexport function useAnimatedSensor(\n  sensorType: SensorType,\n  userConfig?: Partial<SensorConfig>\n): AnimatedSensor {\n  const ref = useRef<AnimatedSensor>({\n    sensor: initSensorData(sensorType),\n    unregister: () => {\n      // NOOP\n    },\n    isAvailable: false,\n    config: {\n      interval: 0,\n      adjustToInterfaceOrientation: true,\n      iosReferenceFrame: IOSReferenceFrame.Auto,\n    },\n  });\n\n  useEffect(() => {\n    ref.current.config = {\n      interval: 'auto',\n      adjustToInterfaceOrientation: true,\n      iosReferenceFrame: IOSReferenceFrame.Auto,\n      ...userConfig,\n    };\n    const sensorData = ref.current.sensor!;\n    const id = registerSensor(\n      sensorType,\n      ref.current.config.interval === 'auto' ? -1 : ref.current.config.interval,\n      ref.current.config.iosReferenceFrame,\n      (data) => {\n        'worklet';\n        if (ref.current.config.adjustToInterfaceOrientation) {\n          if (sensorType === SensorType.ROTATION) {\n            data = adjustRotationToInterfaceOrientation(data as ValueRotation);\n          } else {\n            data = adjustVectorToInterfaceOrientation(data as Value3D);\n          }\n        }\n        sensorData.value = data;\n        callMicrotasks();\n      }\n    );\n\n    if (id !== -1) {\n      // if sensor is available\n      ref.current.unregister = () => unregisterSensor(id);\n      ref.current.isAvailable = true;\n    } else {\n      // if sensor is unavailable\n      ref.current.unregister = () => {\n        // NOOP\n      };\n      ref.current.isAvailable = false;\n    }\n\n    return () => {\n      ref.current.unregister();\n    };\n  }, [sensorType, userConfig]);\n\n  return ref.current;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}