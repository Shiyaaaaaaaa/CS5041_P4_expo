{"ast":null,"code":"import { addWhitelistedNativeProps } from \"../ConfigHelper\";\nexport function createAnimatedPropAdapter(adapter, nativeProps) {\n  var nativePropsToAdd = {};\n  nativeProps === null || nativeProps === void 0 ? void 0 : nativeProps.forEach(function (prop) {\n    nativePropsToAdd[prop] = true;\n  });\n  addWhitelistedNativeProps(nativePropsToAdd);\n  return adapter;\n}\nexport var SVGAdapter = createAnimatedPropAdapter(function () {\n  var _f = function _f(props) {\n    var keys = Object.keys(props);\n    if (keys.includes('transform')) {\n      if (Array.isArray(props.transform)) {\n        var _props$x, _props$y;\n        if (props.transform.length !== 6) {\n          throw new Error(\"invalid transform length of \" + props.transform.length + \", should be 6\");\n        }\n        var transform = props.transform;\n        var x = (_props$x = props.x) != null ? _props$x : 0;\n        var y = (_props$y = props.y) != null ? _props$y : 0;\n        props.transform = [{\n          translateX: transform[0] * x + transform[2] * y + transform[4]\n        }, {\n          translateY: transform[1] * x + transform[3] * y + transform[5]\n        }];\n      } else if (typeof props.transform === 'string') {\n        var _transform = props.transform;\n        var arr = _transform.replace('translate(', '').replace(')', '').split(' ');\n        props.transform = [{\n          translateX: parseFloat(arr[0])\n        }, {\n          translateY: parseFloat(arr[1])\n        }];\n      }\n    }\n  };\n  _f._closure = {};\n  _f.asString = \"function _f(props){const keys=Object.keys(props);if(keys.includes('transform')){if(Array.isArray(props.transform)){var _props$x,_props$y;if(props.transform.length!==6){throw new Error(\\\"invalid transform length of \\\"+props.transform.length+\\\", should be 6\\\");}const transform=props.transform;const x=(_props$x=props.x)!==null&&_props$x!==void 0?_props$x:0;const y=(_props$y=props.y)!==null&&_props$y!==void 0?_props$y:0;props.transform=[{translateX:transform[0]*x+transform[2]*y+transform[4]},{translateY:transform[1]*x+transform[3]*y+transform[5]}];}else if(typeof props.transform==='string'){const transform=props.transform;const arr=transform.replace('translate(','').replace(')','').split(' ');props.transform=[{translateX:parseFloat(arr[0])},{translateY:parseFloat(arr[1])}];}}}\";\n  _f.__workletHash = 13464565495388;\n  _f.__location = \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/PropAdapters.js (14:52)\";\n  return _f;\n}());\nexport var TextInputAdapter = createAnimatedPropAdapter(function () {\n  var _f = function _f(props) {\n    var keys = Object.keys(props);\n    if (keys.includes('value')) {\n      props.text = props.value;\n      delete props.value;\n    }\n  };\n  _f._closure = {};\n  _f.asString = \"function _f(props){const keys=Object.keys(props);if(keys.includes('value')){props.text=props.value;delete props.value;}}\";\n  _f.__workletHash = 10968732584604;\n  _f.__location = \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/PropAdapters.js (48:58)\";\n  return _f;\n}(), ['text']);","map":{"version":3,"names":["addWhitelistedNativeProps","createAnimatedPropAdapter","adapter","nativeProps","nativePropsToAdd","forEach","prop","SVGAdapter","_f","props","keys","Object","includes","Array","isArray","transform","_props$x","_props$y","length","Error","x","y","translateX","translateY","arr","replace","split","parseFloat","_closure","asString","__workletHash","__location","TextInputAdapter","text","value"],"sources":["/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/PropAdapters.ts"],"sourcesContent":["import { addWhitelistedNativeProps } from '../ConfigHelper';\nimport { AdapterWorkletFunction } from './commonTypes';\n\nexport function createAnimatedPropAdapter(\n  adapter: AdapterWorkletFunction,\n  nativeProps?: string[]\n): AdapterWorkletFunction {\n  const nativePropsToAdd: { [key: string]: boolean } = {};\n  // eslint-disable-next-line no-unused-expressions\n  nativeProps?.forEach((prop) => {\n    nativePropsToAdd[prop] = true;\n  });\n  addWhitelistedNativeProps(nativePropsToAdd);\n  return adapter;\n}\n\n// ADAPTERS\n\nexport const SVGAdapter: AdapterWorkletFunction = createAnimatedPropAdapter(\n  (props) => {\n    'worklet';\n    const keys = Object.keys(props);\n    // transform\n    if (keys.includes('transform')) {\n      if (Array.isArray(props.transform)) {\n        // case of array with 6 values => https://github.com/react-native-svg/react-native-svg/blob/b2e2c355204ff4b10973d3afce1495f7e4167ff7/src/elements/Shape.tsx#L200\n        if (props.transform.length !== 6) {\n          throw new Error(\n            `invalid transform length of ${props.transform.length}, should be 6`\n          );\n        }\n        const transform: number[] = props.transform as number[];\n        const x: number = (props.x as number) ?? 0;\n        const y: number = (props.y as number) ?? 0;\n        props.transform = [\n          { translateX: transform[0] * x + transform[2] * y + transform[4] },\n          { translateY: transform[1] * x + transform[3] * y + transform[5] },\n        ];\n      } else if (typeof props.transform === 'string') {\n        // case of string 'translate(translateX translateY)'\n        // todo: handle other cases of transform string like here https://github.com/react-native-svg/react-native-svg/blob/b2e2c355204ff4b10973d3afce1495f7e4167ff7/src/lib/extract/extractTransform.ts#L184\n        const transform: string = props.transform as string;\n        const arr = transform\n          .replace('translate(', '')\n          .replace(')', '')\n          .split(' ');\n        props.transform = [\n          { translateX: parseFloat(arr[0]) },\n          { translateY: parseFloat(arr[1]) },\n        ];\n      }\n    }\n    // todo: other props\n  }\n);\n\nexport const TextInputAdapter = createAnimatedPropAdapter(\n  (props) => {\n    'worklet';\n    const keys = Object.keys(props);\n    // convert text to value like RN does here: https://github.com/facebook/react-native/blob/f2c6279ca497b34d5a2bfbb6f2d33dc7a7bea02a/Libraries/Components/TextInput/TextInput.js#L878\n    if (keys.includes('value')) {\n      props.text = props.value;\n      delete props.value;\n    }\n  },\n  ['text']\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}