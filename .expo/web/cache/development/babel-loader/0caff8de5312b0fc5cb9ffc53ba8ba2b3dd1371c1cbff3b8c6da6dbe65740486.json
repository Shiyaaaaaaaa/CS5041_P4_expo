{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { useEffect, useRef } from 'react';\nimport { startMapper, stopMapper, makeRemote } from \"../core\";\nimport updateProps, { updatePropsJestWrapper } from \"../UpdateProps\";\nimport { initialUpdaterRun } from \"../animation\";\nimport NativeReanimatedModule from \"../NativeReanimated\";\nimport { useSharedValue } from \"./useSharedValue\";\nimport { buildWorkletsHash, isAnimated, shallowEqual, validateAnimatedStyles } from \"./utils\";\nimport { makeViewDescriptorsSet, makeViewsRefSet } from \"../ViewDescriptorsSet\";\nimport { isJest, shouldBeUseWeb } from \"../PlatformChecker\";\nvar prepareAnimation = function () {\n  var _f = function _f(frameTimestamp, animatedProp, lastAnimation, lastValue) {\n    if (Array.isArray(animatedProp)) {\n      animatedProp.forEach(function (prop, index) {\n        prepareAnimation(frameTimestamp, prop, lastAnimation && lastAnimation[index], lastValue && lastValue[index]);\n      });\n    }\n    if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n      var animation = animatedProp;\n      var value = animation.current;\n      if (lastValue !== undefined) {\n        if (typeof lastValue === 'object') {\n          if (lastValue.value !== undefined) {\n            value = lastValue.value;\n          } else if (lastValue.onFrame !== undefined) {\n            if ((lastAnimation === null || lastAnimation === void 0 ? void 0 : lastAnimation.current) !== undefined) {\n              value = lastAnimation.current;\n            } else if ((lastValue === null || lastValue === void 0 ? void 0 : lastValue.current) !== undefined) {\n              value = lastValue.current;\n            }\n          }\n        } else {\n          value = lastValue;\n        }\n      }\n      animation.callStart = function (timestamp) {\n        animation.onStart(animation, value, timestamp, lastAnimation);\n      };\n      animation.callStart(frameTimestamp);\n      animation.callStart = null;\n    } else if (typeof animatedProp === 'object') {\n      Object.keys(animatedProp).forEach(function (key) {\n        return prepareAnimation(frameTimestamp, animatedProp[key], lastAnimation && lastAnimation[key], lastValue && lastValue[key]);\n      });\n    }\n  };\n  _f._closure = {};\n  _f.asString = \"function prepareAnimation(frameTimestamp,animatedProp,lastAnimation,lastValue){if(Array.isArray(animatedProp)){animatedProp.forEach(function(prop,index){prepareAnimation(frameTimestamp,prop,lastAnimation&&lastAnimation[index],lastValue&&lastValue[index]);});}if(typeof animatedProp==='object'&&animatedProp.onFrame){const animation=animatedProp;let value=animation.current;if(lastValue!==undefined){if(typeof lastValue==='object'){if(lastValue.value!==undefined){value=lastValue.value;}else if(lastValue.onFrame!==undefined){if((lastAnimation===null||lastAnimation===void 0?void 0:lastAnimation.current)!==undefined){value=lastAnimation.current;}else if((lastValue===null||lastValue===void 0?void 0:lastValue.current)!==undefined){value=lastValue.current;}}}else{value=lastValue;}}animation.callStart=function(timestamp){animation.onStart(animation,value,timestamp,lastAnimation);};animation.callStart(frameTimestamp);animation.callStart=null;}else if(typeof animatedProp==='object'){Object.keys(animatedProp).forEach(function(key){return prepareAnimation(frameTimestamp,animatedProp[key],lastAnimation&&lastAnimation[key],lastValue&&lastValue[key]);});}}\";\n  _f.__workletHash = 3764206196571;\n  _f.__location = \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.js (10:0)\";\n  return _f;\n}();\nvar runAnimations = function () {\n  var _f = function _f(animation, timestamp, key, result, animationsActive) {\n    if (!animationsActive.value) {\n      return true;\n    }\n    if (Array.isArray(animation)) {\n      result[key] = [];\n      var allFinished = true;\n      animation.forEach(function (entry, index) {\n        if (!runAnimations(entry, timestamp, index, result[key], animationsActive)) {\n          allFinished = false;\n        }\n      });\n      return allFinished;\n    } else if (typeof animation === 'object' && animation.onFrame) {\n      var finished = true;\n      if (!animation.finished) {\n        if (animation.callStart) {\n          animation.callStart(timestamp);\n          animation.callStart = null;\n        }\n        finished = animation.onFrame(animation, timestamp);\n        animation.timestamp = timestamp;\n        if (finished) {\n          animation.finished = true;\n          animation.callback && animation.callback(true);\n        }\n      }\n      result[key] = animation.current;\n      return finished;\n    } else if (typeof animation === 'object') {\n      result[key] = {};\n      var _allFinished = true;\n      Object.keys(animation).forEach(function (k) {\n        if (!runAnimations(animation[k], timestamp, k, result[key], animationsActive)) {\n          _allFinished = false;\n        }\n      });\n      return _allFinished;\n    } else {\n      result[key] = animation;\n      return true;\n    }\n  };\n  _f._closure = {};\n  _f.asString = \"function runAnimations(animation,timestamp,key,result,animationsActive){if(!animationsActive.value){return true;}if(Array.isArray(animation)){result[key]=[];let allFinished=true;animation.forEach(function(entry,index){if(!runAnimations(entry,timestamp,index,result[key],animationsActive)){allFinished=false;}});return allFinished;}else if(typeof animation==='object'&&animation.onFrame){let finished=true;if(!animation.finished){if(animation.callStart){animation.callStart(timestamp);animation.callStart=null;}finished=animation.onFrame(animation,timestamp);animation.timestamp=timestamp;if(finished){animation.finished=true;animation.callback&&animation.callback(true);}}result[key]=animation.current;return finished;}else if(typeof animation==='object'){result[key]={};let allFinished=true;Object.keys(animation).forEach(function(k){if(!runAnimations(animation[k],timestamp,k,result[key],animationsActive)){allFinished=false;}});return allFinished;}else{result[key]=animation;return true;}}\";\n  _f.__workletHash = 3625332641327;\n  _f.__location = \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.js (52:0)\";\n  return _f;\n}();\nvar styleUpdater = function () {\n  var _f = function _f(viewDescriptors, updater, state, maybeViewRef, animationsActive) {\n    var _state$animations, _updater;\n    var animations = (_state$animations = state.animations) != null ? _state$animations : {};\n    var newValues = (_updater = updater()) != null ? _updater : {};\n    var oldValues = state.last;\n    var nonAnimatedNewValues = {};\n    var hasAnimations = false;\n    var frameTimestamp;\n    var hasNonAnimatedValues = false;\n    for (var key in newValues) {\n      var value = newValues[key];\n      if (isAnimated(value)) {\n        frameTimestamp = global.__frameTimestamp || performance.now();\n        prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n        animations[key] = value;\n        hasAnimations = true;\n      } else {\n        hasNonAnimatedValues = true;\n        nonAnimatedNewValues[key] = value;\n        delete animations[key];\n      }\n    }\n    if (hasAnimations) {\n      var frame = function frame(timestamp) {\n        var animations = state.animations,\n          last = state.last,\n          isAnimationCancelled = state.isAnimationCancelled;\n        if (isAnimationCancelled) {\n          state.isAnimationRunning = false;\n          return;\n        }\n        var updates = {};\n        var allFinished = true;\n        for (var propName in animations) {\n          var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n          if (finished) {\n            last[propName] = updates[propName];\n            delete animations[propName];\n          } else {\n            allFinished = false;\n          }\n        }\n        if (updates) {\n          updateProps(viewDescriptors, updates, maybeViewRef);\n        }\n        if (!allFinished) {\n          requestAnimationFrame(frame);\n        } else {\n          state.isAnimationRunning = false;\n        }\n      };\n      state.animations = animations;\n      if (!state.isAnimationRunning) {\n        state.isAnimationCancelled = false;\n        state.isAnimationRunning = true;\n        frame(frameTimestamp);\n      }\n      if (hasNonAnimatedValues) {\n        updateProps(viewDescriptors, nonAnimatedNewValues, maybeViewRef);\n      }\n    } else {\n      state.isAnimationCancelled = true;\n      state.animations = [];\n      if (!shallowEqual(oldValues, newValues)) {\n        updateProps(viewDescriptors, newValues, maybeViewRef);\n      }\n    }\n    state.last = newValues;\n  };\n  _f._closure = {\n    isAnimated: isAnimated,\n    prepareAnimation: prepareAnimation,\n    runAnimations: runAnimations,\n    updateProps: updateProps,\n    shallowEqual: shallowEqual\n  };\n  _f.asString = \"function styleUpdater(viewDescriptors,updater,state,maybeViewRef,animationsActive){const{isAnimated,prepareAnimation,runAnimations,updateProps,shallowEqual}=jsThis._closure;{var _state$animations,_updater;const animations=(_state$animations=state.animations)!==null&&_state$animations!==void 0?_state$animations:{};const newValues=(_updater=updater())!==null&&_updater!==void 0?_updater:{};const oldValues=state.last;const nonAnimatedNewValues={};let hasAnimations=false;let frameTimestamp;let hasNonAnimatedValues=false;for(const key in newValues){const value=newValues[key];if(isAnimated(value)){frameTimestamp=global.__frameTimestamp||performance.now();prepareAnimation(frameTimestamp,value,animations[key],oldValues[key]);animations[key]=value;hasAnimations=true;}else{hasNonAnimatedValues=true;nonAnimatedNewValues[key]=value;delete animations[key];}}if(hasAnimations){const frame=function(timestamp){const{animations:animations,last:last,isAnimationCancelled:isAnimationCancelled}=state;if(isAnimationCancelled){state.isAnimationRunning=false;return;}const updates={};let allFinished=true;for(const propName in animations){const finished=runAnimations(animations[propName],timestamp,propName,updates,animationsActive);if(finished){last[propName]=updates[propName];delete animations[propName];}else{allFinished=false;}}if(updates){updateProps(viewDescriptors,updates,maybeViewRef);}if(!allFinished){requestAnimationFrame(frame);}else{state.isAnimationRunning=false;}};state.animations=animations;if(!state.isAnimationRunning){state.isAnimationCancelled=false;state.isAnimationRunning=true;frame(frameTimestamp);}if(hasNonAnimatedValues){updateProps(viewDescriptors,nonAnimatedNewValues,maybeViewRef);}}else{state.isAnimationCancelled=true;state.animations=[];if(!shallowEqual(oldValues,newValues)){updateProps(viewDescriptors,newValues,maybeViewRef);}}state.last=newValues;}}\";\n  _f.__workletHash = 961261295803;\n  _f.__location = \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.js (98:0)\";\n  return _f;\n}();\nvar jestStyleUpdater = function () {\n  var _f = function _f(viewDescriptors, updater, state, maybeViewRef, animationsActive, animatedStyle) {\n    var _state$animations2, _updater2;\n    var adapters = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];\n    var animations = (_state$animations2 = state.animations) != null ? _state$animations2 : {};\n    var newValues = (_updater2 = updater()) != null ? _updater2 : {};\n    var oldValues = state.last;\n    var hasAnimations = false;\n    var frameTimestamp;\n    Object.keys(animations).forEach(function (key) {\n      var value = newValues[key];\n      if (!isAnimated(value)) {\n        delete animations[key];\n      }\n    });\n    Object.keys(newValues).forEach(function (key) {\n      var value = newValues[key];\n      if (isAnimated(value)) {\n        frameTimestamp = global.__frameTimestamp || performance.now();\n        prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n        animations[key] = value;\n        hasAnimations = true;\n      }\n    });\n    function frame(timestamp) {\n      var animations = state.animations,\n        last = state.last,\n        isAnimationCancelled = state.isAnimationCancelled;\n      if (isAnimationCancelled) {\n        state.isAnimationRunning = false;\n        return;\n      }\n      var updates = {};\n      var allFinished = true;\n      Object.keys(animations).forEach(function (propName) {\n        var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n        if (finished) {\n          last[propName] = updates[propName];\n          delete animations[propName];\n        } else {\n          allFinished = false;\n        }\n      });\n      if (Object.keys(updates).length) {\n        updatePropsJestWrapper(viewDescriptors, updates, maybeViewRef, animatedStyle, adapters);\n      }\n      if (!allFinished) {\n        requestAnimationFrame(frame);\n      } else {\n        state.isAnimationRunning = false;\n      }\n    }\n    if (hasAnimations) {\n      state.animations = animations;\n      if (!state.isAnimationRunning) {\n        state.isAnimationCancelled = false;\n        state.isAnimationRunning = true;\n        frame(frameTimestamp);\n      }\n    } else {\n      state.isAnimationCancelled = true;\n      state.animations = [];\n    }\n    state.last = newValues;\n    if (!shallowEqual(oldValues, newValues)) {\n      updatePropsJestWrapper(viewDescriptors, newValues, maybeViewRef, animatedStyle, adapters);\n    }\n  };\n  _f._closure = {\n    isAnimated: isAnimated,\n    prepareAnimation: prepareAnimation,\n    runAnimations: runAnimations,\n    updatePropsJestWrapper: updatePropsJestWrapper,\n    shallowEqual: shallowEqual\n  };\n  _f.asString = \"function jestStyleUpdater(viewDescriptors,updater,state,maybeViewRef,animationsActive,animatedStyle){const{isAnimated,prepareAnimation,runAnimations,updatePropsJestWrapper,shallowEqual}=jsThis._closure;{var _state$animations,_updater;let adapters=arguments.length>6&&arguments[6]!==undefined?arguments[6]:[];const animations=(_state$animations=state.animations)!==null&&_state$animations!==void 0?_state$animations:{};const newValues=(_updater=updater())!==null&&_updater!==void 0?_updater:{};const oldValues=state.last;let hasAnimations=false;let frameTimestamp;Object.keys(animations).forEach(function(key){const value=newValues[key];if(!isAnimated(value)){delete animations[key];}});Object.keys(newValues).forEach(function(key){const value=newValues[key];if(isAnimated(value)){frameTimestamp=global.__frameTimestamp||performance.now();prepareAnimation(frameTimestamp,value,animations[key],oldValues[key]);animations[key]=value;hasAnimations=true;}});function frame(timestamp){const{animations:animations,last:last,isAnimationCancelled:isAnimationCancelled}=state;if(isAnimationCancelled){state.isAnimationRunning=false;return;}const updates={};let allFinished=true;Object.keys(animations).forEach(function(propName){const finished=runAnimations(animations[propName],timestamp,propName,updates,animationsActive);if(finished){last[propName]=updates[propName];delete animations[propName];}else{allFinished=false;}});if(Object.keys(updates).length){updatePropsJestWrapper(viewDescriptors,updates,maybeViewRef,animatedStyle,adapters);}if(!allFinished){requestAnimationFrame(frame);}else{state.isAnimationRunning=false;}}if(hasAnimations){state.animations=animations;if(!state.isAnimationRunning){state.isAnimationCancelled=false;state.isAnimationRunning=true;frame(frameTimestamp);}}else{state.isAnimationCancelled=true;state.animations=[];}state.last=newValues;if(!shallowEqual(oldValues,newValues)){updatePropsJestWrapper(viewDescriptors,newValues,maybeViewRef,animatedStyle,adapters);}}}\";\n  _f.__workletHash = 10573298133074;\n  _f.__location = \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.js (170:0)\";\n  return _f;\n}();\nfunction checkSharedValueUsage(prop, currentKey) {\n  if (Array.isArray(prop)) {\n    for (var element of prop) {\n      checkSharedValueUsage(element, currentKey);\n    }\n  } else if (typeof prop === 'object' && prop.value === undefined) {\n    for (var key of Object.keys(prop)) {\n      checkSharedValueUsage(prop[key], key);\n    }\n  } else if (currentKey !== undefined && typeof prop === 'object' && prop.value !== undefined) {\n    throw new Error(\"invalid value passed to `\" + currentKey + \"`, maybe you forgot to use `.value`?\");\n  }\n}\nexport function useAnimatedStyle(updater, dependencies, adapters) {\n  var _updater$_closure;\n  var viewsRef = makeViewsRefSet();\n  var initRef = useRef();\n  var inputs = Object.values((_updater$_closure = updater._closure) != null ? _updater$_closure : {});\n  if (shouldBeUseWeb()) {\n    var _dependencies;\n    if (!inputs.length && (_dependencies = dependencies) !== null && _dependencies !== void 0 && _dependencies.length) {\n      inputs = dependencies;\n    }\n    if (__DEV__ && !inputs.length && !dependencies && !updater.__workletHash) {\n      throw new Error(\"useAnimatedStyle was used without a dependency array or Babel plugin. Please explicitly pass a dependency array, or enable the Babel/SWC plugin.\\n\\nFor more, see the docs: https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/web-support#web-without-a-babel-plugin\");\n    }\n  }\n  var adaptersArray = adapters ? Array.isArray(adapters) ? adapters : [adapters] : [];\n  var adaptersHash = adapters ? buildWorkletsHash(adaptersArray) : null;\n  var animationsActive = useSharedValue(true);\n  var animatedStyle = useRef({});\n  if (!dependencies) {\n    dependencies = [].concat(_toConsumableArray(inputs), [updater.__workletHash]);\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n  adaptersHash && dependencies.push(adaptersHash);\n  if (!initRef.current) {\n    var initialStyle = initialUpdaterRun(updater);\n    validateAnimatedStyles(initialStyle);\n    initRef.current = {\n      initial: {\n        value: initialStyle,\n        updater: updater\n      },\n      remoteState: makeRemote({\n        last: initialStyle,\n        animations: {},\n        isAnimationCancelled: false,\n        isAnimationRunning: false\n      }),\n      viewDescriptors: makeViewDescriptorsSet()\n    };\n  }\n  var _initRef$current = initRef.current,\n    initial = _initRef$current.initial,\n    remoteState = _initRef$current.remoteState,\n    viewDescriptors = _initRef$current.viewDescriptors;\n  var sharableViewDescriptors = viewDescriptors.sharableViewDescriptors;\n  var maybeViewRef = NativeReanimatedModule.native ? undefined : viewsRef;\n  dependencies.push(sharableViewDescriptors);\n  useEffect(function () {\n    var fun;\n    var updaterFn = updater;\n    if (adapters) {\n      updaterFn = function () {\n        var _f = function _f() {\n          var newValues = updater();\n          adaptersArray.forEach(function (adapter) {\n            adapter(newValues);\n          });\n          return newValues;\n        };\n        _f._closure = {\n          updater: updater,\n          adaptersArray: adaptersArray\n        };\n        _f.asString = \"function _f(){const{updater,adaptersArray}=jsThis._closure;{const newValues=updater();adaptersArray.forEach(function(adapter){adapter(newValues);});return newValues;}}\";\n        _f.__workletHash = 15812374835043;\n        _f.__location = \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.js (321:18)\";\n        return _f;\n      }();\n    }\n    if (isJest()) {\n      fun = function () {\n        var _f = function _f() {\n          jestStyleUpdater(sharableViewDescriptors, updater, remoteState, maybeViewRef, animationsActive, animatedStyle, adaptersArray);\n        };\n        _f._closure = {\n          jestStyleUpdater: jestStyleUpdater,\n          sharableViewDescriptors: sharableViewDescriptors,\n          updater: updater,\n          remoteState: remoteState,\n          maybeViewRef: maybeViewRef,\n          animationsActive: animationsActive,\n          animatedStyle: animatedStyle,\n          adaptersArray: adaptersArray\n        };\n        _f.asString = \"function _f(){const{jestStyleUpdater,sharableViewDescriptors,updater,remoteState,maybeViewRef,animationsActive,animatedStyle,adaptersArray}=jsThis._closure;{jestStyleUpdater(sharableViewDescriptors,updater,remoteState,maybeViewRef,animationsActive,animatedStyle,adaptersArray);}}\";\n        _f.__workletHash = 11302607948209;\n        _f.__location = \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.js (332:12)\";\n        return _f;\n      }();\n    } else {\n      fun = function () {\n        var _f = function _f() {\n          styleUpdater(sharableViewDescriptors, updaterFn, remoteState, maybeViewRef, animationsActive);\n        };\n        _f._closure = {\n          styleUpdater: styleUpdater,\n          sharableViewDescriptors: sharableViewDescriptors,\n          updaterFn: updaterFn,\n          remoteState: remoteState,\n          maybeViewRef: maybeViewRef,\n          animationsActive: animationsActive\n        };\n        _f.asString = \"function _f(){const{styleUpdater,sharableViewDescriptors,updaterFn,remoteState,maybeViewRef,animationsActive}=jsThis._closure;{styleUpdater(sharableViewDescriptors,updaterFn,remoteState,maybeViewRef,animationsActive);}}\";\n        _f.__workletHash = 15042733015377;\n        _f.__location = \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.js (338:12)\";\n        return _f;\n      }();\n    }\n    var mapperId = startMapper(fun, inputs);\n    return function () {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n  useEffect(function () {\n    animationsActive.value = true;\n    return function () {\n      animationsActive.value = false;\n    };\n  }, []);\n  checkSharedValueUsage(initial.value);\n  if (process.env.JEST_WORKER_ID) {\n    return {\n      viewDescriptors: viewDescriptors,\n      initial: initial,\n      viewsRef: viewsRef,\n      animatedStyle: animatedStyle\n    };\n  } else {\n    return {\n      viewDescriptors: viewDescriptors,\n      initial: initial,\n      viewsRef: viewsRef\n    };\n  }\n}","map":{"version":3,"names":["useEffect","useRef","startMapper","stopMapper","makeRemote","updateProps","updatePropsJestWrapper","initialUpdaterRun","NativeReanimatedModule","useSharedValue","buildWorkletsHash","isAnimated","shallowEqual","validateAnimatedStyles","makeViewDescriptorsSet","makeViewsRefSet","isJest","shouldBeUseWeb","prepareAnimation","_f","frameTimestamp","animatedProp","lastAnimation","lastValue","Array","isArray","forEach","prop","index","onFrame","animation","value","current","undefined","callStart","timestamp","onStart","Object","keys","key","_closure","asString","__workletHash","__location","runAnimations","result","animationsActive","allFinished","entry","finished","callback","k","styleUpdater","viewDescriptors","updater","state","maybeViewRef","_state$animations","_updater","animations","newValues","oldValues","last","nonAnimatedNewValues","hasAnimations","hasNonAnimatedValues","global","__frameTimestamp","performance","now","frame","isAnimationCancelled","isAnimationRunning","updates","propName","requestAnimationFrame","jestStyleUpdater","animatedStyle","_state$animations2","_updater2","adapters","arguments","length","checkSharedValueUsage","currentKey","element","Error","useAnimatedStyle","dependencies","_updater$_closure","viewsRef","initRef","inputs","values","_dependencies","__DEV__","adaptersArray","adaptersHash","concat","_toConsumableArray","push","initialStyle","initial","remoteState","_initRef$current","sharableViewDescriptors","native","fun","updaterFn","adapter","mapperId","process","env","JEST_WORKER_ID"],"sources":["/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.ts"],"sourcesContent":["import { MutableRefObject, useEffect, useRef } from 'react';\n\nimport { startMapper, stopMapper, makeRemote } from '../core';\nimport updateProps, { updatePropsJestWrapper } from '../UpdateProps';\nimport { initialUpdaterRun } from '../animation';\nimport NativeReanimatedModule from '../NativeReanimated';\nimport { useSharedValue } from './useSharedValue';\nimport {\n  buildWorkletsHash,\n  isAnimated,\n  shallowEqual,\n  validateAnimatedStyles,\n} from './utils';\nimport { DependencyList, Descriptor } from './commonTypes';\nimport {\n  makeViewDescriptorsSet,\n  makeViewsRefSet,\n  ViewDescriptorsSet,\n  ViewRefSet,\n} from '../ViewDescriptorsSet';\nimport { isJest, shouldBeUseWeb } from '../PlatformChecker';\nimport {\n  AnimationObject,\n  Timestamp,\n  AdapterWorkletFunction,\n  AnimatedStyle,\n  BasicWorkletFunction,\n  BasicWorkletFunctionOptional,\n  NestedObjectValues,\n  SharedValue,\n  StyleProps,\n} from '../commonTypes';\nexport interface AnimatedStyleResult {\n  viewDescriptors: ViewDescriptorsSet;\n  initial: AnimatedStyle;\n  viewsRef: ViewRefSet<any>;\n  animatedStyle?: MutableRefObject<AnimatedStyle>;\n}\n\ninterface AnimatedState {\n  last: AnimatedStyle;\n  animations: AnimatedStyle;\n  isAnimationRunning: boolean;\n  isAnimationCancelled: boolean;\n}\n\ninterface AnimationRef {\n  initial: {\n    value: AnimatedStyle;\n    updater: () => AnimatedStyle;\n  };\n  remoteState: AnimatedState;\n  viewDescriptors: ViewDescriptorsSet;\n}\n\nfunction prepareAnimation(\n  frameTimestamp: number,\n  animatedProp: AnimatedStyle,\n  lastAnimation: AnimatedStyle,\n  lastValue: AnimatedStyle\n): void {\n  'worklet';\n  if (Array.isArray(animatedProp)) {\n    animatedProp.forEach((prop, index) => {\n      prepareAnimation(\n        frameTimestamp,\n        prop,\n        lastAnimation && lastAnimation[index],\n        lastValue && lastValue[index]\n      );\n    });\n    // return animatedProp;\n  }\n  if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n    const animation = animatedProp;\n\n    let value = animation.current;\n    if (lastValue !== undefined) {\n      if (typeof lastValue === 'object') {\n        if (lastValue.value !== undefined) {\n          // previously it was a shared value\n          value = lastValue.value;\n        } else if (lastValue.onFrame !== undefined) {\n          if (lastAnimation?.current !== undefined) {\n            // it was an animation before, copy its state\n            value = lastAnimation.current;\n          } else if (lastValue?.current !== undefined) {\n            // it was initialized\n            value = lastValue.current;\n          }\n        }\n      } else {\n        // previously it was a plain value, just set it as starting point\n        value = lastValue;\n      }\n    }\n\n    animation.callStart = (timestamp: Timestamp) => {\n      animation.onStart(animation, value, timestamp, lastAnimation);\n    };\n    animation.callStart(frameTimestamp);\n    animation.callStart = null;\n  } else if (typeof animatedProp === 'object') {\n    // it is an object\n    Object.keys(animatedProp).forEach((key) =>\n      prepareAnimation(\n        frameTimestamp,\n        animatedProp[key],\n        lastAnimation && lastAnimation[key],\n        lastValue && lastValue[key]\n      )\n    );\n  }\n}\n\nfunction runAnimations(\n  animation: AnimatedStyle,\n  timestamp: Timestamp,\n  key: number | string,\n  result: AnimatedStyle,\n  animationsActive: SharedValue<boolean>\n): boolean {\n  'worklet';\n  if (!animationsActive.value) {\n    return true;\n  }\n  if (Array.isArray(animation)) {\n    result[key] = [];\n    let allFinished = true;\n    animation.forEach((entry, index) => {\n      if (\n        !runAnimations(entry, timestamp, index, result[key], animationsActive)\n      ) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else if (typeof animation === 'object' && animation.onFrame) {\n    let finished = true;\n    if (!animation.finished) {\n      if (animation.callStart) {\n        animation.callStart(timestamp);\n        animation.callStart = null;\n      }\n      finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n      if (finished) {\n        animation.finished = true;\n        animation.callback && animation.callback(true /* finished */);\n      }\n    }\n    result[key] = animation.current;\n    return finished;\n  } else if (typeof animation === 'object') {\n    result[key] = {};\n    let allFinished = true;\n    Object.keys(animation).forEach((k) => {\n      if (\n        !runAnimations(\n          animation[k],\n          timestamp,\n          k,\n          result[key],\n          animationsActive\n        )\n      ) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else {\n    result[key] = animation;\n    return true;\n  }\n}\n\nfunction styleUpdater(\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updater: BasicWorkletFunction<AnimatedStyle>,\n  state: AnimatedState,\n  maybeViewRef: ViewRefSet<any> | undefined,\n  animationsActive: SharedValue<boolean>\n): void {\n  'worklet';\n  const animations = state.animations ?? {};\n  const newValues = updater() ?? {};\n  const oldValues = state.last;\n  const nonAnimatedNewValues: StyleProps = {};\n\n  let hasAnimations = false;\n  let frameTimestamp: number | undefined;\n  let hasNonAnimatedValues = false;\n  for (const key in newValues) {\n    const value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp = global.__frameTimestamp || performance.now();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    } else {\n      hasNonAnimatedValues = true;\n      nonAnimatedNewValues[key] = value;\n      delete animations[key];\n    }\n  }\n\n  if (hasAnimations) {\n    const frame = (timestamp: Timestamp) => {\n      const { animations, last, isAnimationCancelled } = state;\n      if (isAnimationCancelled) {\n        state.isAnimationRunning = false;\n        return;\n      }\n\n      const updates: AnimatedStyle = {};\n      let allFinished = true;\n      for (const propName in animations) {\n        const finished = runAnimations(\n          animations[propName],\n          timestamp,\n          propName,\n          updates,\n          animationsActive\n        );\n        if (finished) {\n          last[propName] = updates[propName];\n          delete animations[propName];\n        } else {\n          allFinished = false;\n        }\n      }\n\n      if (updates) {\n        updateProps(viewDescriptors, updates, maybeViewRef);\n      }\n\n      if (!allFinished) {\n        requestAnimationFrame(frame);\n      } else {\n        state.isAnimationRunning = false;\n      }\n    };\n\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp!);\n    }\n\n    if (hasNonAnimatedValues) {\n      updateProps(viewDescriptors, nonAnimatedNewValues, maybeViewRef);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n\n    if (!shallowEqual(oldValues, newValues)) {\n      updateProps(viewDescriptors, newValues, maybeViewRef);\n    }\n  }\n  state.last = newValues;\n}\n\nfunction jestStyleUpdater(\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updater: BasicWorkletFunction<AnimatedStyle>,\n  state: AnimatedState,\n  maybeViewRef: ViewRefSet<any> | undefined,\n  animationsActive: SharedValue<boolean>,\n  animatedStyle: MutableRefObject<AnimatedStyle>,\n  adapters: AdapterWorkletFunction[] = []\n): void {\n  'worklet';\n  const animations: AnimatedStyle = state.animations ?? {};\n  const newValues = updater() ?? {};\n  const oldValues = state.last;\n\n  // extract animated props\n  let hasAnimations = false;\n  let frameTimestamp: number | undefined;\n  Object.keys(animations).forEach((key) => {\n    const value = newValues[key];\n    if (!isAnimated(value)) {\n      delete animations[key];\n    }\n  });\n  Object.keys(newValues).forEach((key) => {\n    const value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp = global.__frameTimestamp || performance.now();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    }\n  });\n\n  function frame(timestamp: Timestamp) {\n    const { animations, last, isAnimationCancelled } = state;\n    if (isAnimationCancelled) {\n      state.isAnimationRunning = false;\n      return;\n    }\n\n    const updates: AnimatedStyle = {};\n    let allFinished = true;\n    Object.keys(animations).forEach((propName) => {\n      const finished = runAnimations(\n        animations[propName],\n        timestamp,\n        propName,\n        updates,\n        animationsActive\n      );\n      if (finished) {\n        last[propName] = updates[propName];\n        delete animations[propName];\n      } else {\n        allFinished = false;\n      }\n    });\n\n    if (Object.keys(updates).length) {\n      updatePropsJestWrapper(\n        viewDescriptors,\n        updates,\n        maybeViewRef,\n        animatedStyle,\n        adapters\n      );\n    }\n\n    if (!allFinished) {\n      requestAnimationFrame(frame);\n    } else {\n      state.isAnimationRunning = false;\n    }\n  }\n\n  if (hasAnimations) {\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp!);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n  }\n\n  // calculate diff\n  state.last = newValues;\n\n  if (!shallowEqual(oldValues, newValues)) {\n    updatePropsJestWrapper(\n      viewDescriptors,\n      newValues,\n      maybeViewRef,\n      animatedStyle,\n      adapters\n    );\n  }\n}\n\n// check for invalid usage of shared values in returned object\nfunction checkSharedValueUsage(\n  prop: NestedObjectValues<AnimationObject>,\n  currentKey?: string\n): void {\n  if (Array.isArray(prop)) {\n    // if it's an array (i.ex. transform) validate all its elements\n    for (const element of prop) {\n      checkSharedValueUsage(element, currentKey);\n    }\n  } else if (typeof prop === 'object' && prop.value === undefined) {\n    // if it's a nested object, run validation for all its props\n    for (const key of Object.keys(prop)) {\n      checkSharedValueUsage(prop[key], key);\n    }\n  } else if (\n    currentKey !== undefined &&\n    typeof prop === 'object' &&\n    prop.value !== undefined\n  ) {\n    // if shared value is passed insted of its value, throw an error\n    throw new Error(\n      `invalid value passed to \\`${currentKey}\\`, maybe you forgot to use \\`.value\\`?`\n    );\n  }\n}\n\nexport function useAnimatedStyle<T extends AnimatedStyle>(\n  updater: BasicWorkletFunction<T>,\n  dependencies?: DependencyList,\n  adapters?: AdapterWorkletFunction | AdapterWorkletFunction[]\n): AnimatedStyleResult {\n  const viewsRef: ViewRefSet<any> = makeViewsRefSet();\n  const initRef = useRef<AnimationRef>();\n  let inputs = Object.values(updater._closure ?? {});\n  if (shouldBeUseWeb()) {\n    if (!inputs.length && dependencies?.length) {\n      // let web work without a Babel/SWC plugin\n      inputs = dependencies;\n    }\n    if (__DEV__ && !inputs.length && !dependencies && !updater.__workletHash) {\n      throw new Error(\n        `useAnimatedStyle was used without a dependency array or Babel plugin. Please explicitly pass a dependency array, or enable the Babel/SWC plugin.\n\nFor more, see the docs: https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/web-support#web-without-a-babel-plugin`\n      );\n    }\n  }\n  const adaptersArray: AdapterWorkletFunction[] = adapters\n    ? Array.isArray(adapters)\n      ? adapters\n      : [adapters]\n    : [];\n  const adaptersHash = adapters ? buildWorkletsHash(adaptersArray) : null;\n  const animationsActive = useSharedValue<boolean>(true);\n  const animatedStyle: MutableRefObject<AnimatedStyle> = useRef<AnimatedStyle>(\n    {}\n  );\n\n  // build dependencies\n  if (!dependencies) {\n    dependencies = [...inputs, updater.__workletHash];\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n  adaptersHash && dependencies.push(adaptersHash);\n\n  if (!initRef.current) {\n    const initialStyle: AnimatedStyle = initialUpdaterRun(updater);\n    validateAnimatedStyles(initialStyle);\n    initRef.current = {\n      initial: {\n        value: initialStyle,\n        updater: updater,\n      },\n      remoteState: makeRemote<AnimatedState>({\n        last: initialStyle,\n        animations: {},\n        isAnimationCancelled: false,\n        isAnimationRunning: false,\n      }),\n      viewDescriptors: makeViewDescriptorsSet(),\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const { initial, remoteState, viewDescriptors } = initRef.current!;\n  const sharableViewDescriptors = viewDescriptors.sharableViewDescriptors;\n  const maybeViewRef = NativeReanimatedModule.native ? undefined : viewsRef;\n\n  dependencies.push(sharableViewDescriptors);\n\n  useEffect(() => {\n    let fun;\n    let updaterFn = updater as BasicWorkletFunctionOptional<T>;\n    if (adapters) {\n      updaterFn = () => {\n        'worklet';\n        const newValues = updater();\n        adaptersArray.forEach((adapter) => {\n          adapter(newValues);\n        });\n        return newValues;\n      };\n    }\n\n    if (isJest()) {\n      fun = () => {\n        'worklet';\n        jestStyleUpdater(\n          sharableViewDescriptors,\n          updater,\n          remoteState,\n          maybeViewRef,\n          animationsActive,\n          animatedStyle,\n          adaptersArray\n        );\n      };\n    } else {\n      fun = () => {\n        'worklet';\n        styleUpdater(\n          sharableViewDescriptors,\n          updaterFn,\n          remoteState,\n          maybeViewRef,\n          animationsActive\n        );\n      };\n    }\n    const mapperId = startMapper(fun, inputs);\n    return () => {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n\n  useEffect(() => {\n    animationsActive.value = true;\n    return () => {\n      animationsActive.value = false;\n    };\n  }, []);\n\n  checkSharedValueUsage(initial.value);\n\n  if (process.env.JEST_WORKER_ID) {\n    return { viewDescriptors, initial: initial, viewsRef, animatedStyle };\n  } else {\n    return { viewDescriptors, initial: initial, viewsRef };\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}