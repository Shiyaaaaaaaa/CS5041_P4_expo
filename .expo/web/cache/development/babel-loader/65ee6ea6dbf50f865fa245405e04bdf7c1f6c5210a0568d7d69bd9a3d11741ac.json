{"ast":null,"code":"import { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport MessagesScreen from \"./MessagesScreen.js\";\nimport NewScreen from \"./WeatherScreen.js\";\nimport MoodScreen from \"./MoodScreen.js\";\nimport { Button } from \"react-native-elements\";\nimport DrawerLayoutAndroid from \"react-native-web/dist/exports/DrawerLayoutAndroid\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Button, {\n      buttonStyle: styles.button,\n      titleStyle: styles.title,\n      onPress: navigation.openDrawer,\n      title: \"Open navigation drawer\"\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        return navigation.navigate(\"MessagesScreen\");\n      },\n      title: \"Go to Message to Fife Rabbits\"\n    }), _jsx(Button, {\n      buttonStyle: styles.button,\n      titleStyle: styles.title,\n      onPress: function onPress() {\n        return navigation.navigate(\"Environment\");\n      },\n      title: \"Go to check the Fife environment\"\n    }), _jsx(Button, {\n      buttonStyle: styles.button,\n      titleStyle: styles.title,\n      onPress: function onPress() {\n        return navigation.navigate(\"Mood Color\");\n      },\n      title: \"Go to send you color of moods\"\n    })]\n  });\n}\nvar Drawer = createDrawerNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Drawer.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Drawer.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"Message to Fife Rabbits\",\n        component: MessagesScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"Mood Color\",\n        component: MoodScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"Environment\",\n        component: NewScreen\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  button: {\n    backgroundColor: \"#0088cc\",\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    marginVertical: 5\n  },\n  title: {\n    fontSize: 18,\n    color: \"white\",\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"names":["createDrawerNavigator","NavigationContainer","StyleSheet","View","MessagesScreen","NewScreen","MoodScreen","Button","DrawerLayoutAndroid","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","style","styles","container","children","buttonStyle","button","titleStyle","title","onPress","openDrawer","navigate","Drawer","App","Navigator","initialRouteName","Screen","name","component","create","flex","alignItems","justifyContent","backgroundColor","paddingVertical","paddingHorizontal","borderRadius","marginVertical","fontSize","color","textAlign"],"sources":["/cs/home/sz78/Documents/my-expo-app/examples-master/with-drawer-navigation/App.js"],"sourcesContent":["import { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { StyleSheet, View } from \"react-native\";\nimport MessagesScreen from \"./MessagesScreen.js\";\nimport NewScreen from \"./WeatherScreen.js\";\nimport MoodScreen from \"./MoodScreen.js\";\nimport { Button } from \"react-native-elements\";\nimport { DrawerLayoutAndroid } from \"react-native\";\n\n\nfunction HomeScreen({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Button\n        buttonStyle={styles.button}\n        titleStyle={styles.title}\n        onPress={navigation.openDrawer}\n        title=\"Open navigation drawer\"\n      />\n      <Button\n      onPress={() => navigation.navigate(\"MessagesScreen\")}\n      title=\"Go to Message to Fife Rabbits\"\n     />\n      <Button\n        buttonStyle={styles.button}\n        titleStyle={styles.title}\n        onPress={() => navigation.navigate(\"Environment\")}\n        title=\"Go to check the Fife environment\"\n      />\n      <Button\n        buttonStyle={styles.button}\n        titleStyle={styles.title}\n        onPress={() => navigation.navigate(\"Mood Color\")}\n        title=\"Go to send you color of moods\"\n      />\n    </View>\n  );\n}\n\nconst Drawer = createDrawerNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Drawer.Navigator initialRouteName=\"Home\">\n        <Drawer.Screen name=\"Home\" component={HomeScreen} />\n        <Drawer.Screen name=\"Message to Fife Rabbits\" component={MessagesScreen} />\n        <Drawer.Screen name=\"Mood Color\" component={MoodScreen} />\n        <Drawer.Screen name=\"Environment\" component={NewScreen} />\n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  button: {\n    backgroundColor: \"#0088cc\",\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    marginVertical: 5,\n  },\n  title: {\n    fontSize: 18,\n    color: \"white\",\n    textAlign: \"center\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}