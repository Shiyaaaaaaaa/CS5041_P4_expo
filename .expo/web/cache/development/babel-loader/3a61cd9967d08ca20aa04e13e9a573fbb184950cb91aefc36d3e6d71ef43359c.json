{"ast":null,"code":"import { useEvent, useHandler } from \"./Hooks\";\nexport function useAnimatedScrollHandler(handlers, dependencies) {\n  var scrollHandlers = typeof handlers === 'function' ? {\n    onScroll: handlers\n  } : handlers;\n  var _useHandler = useHandler(scrollHandlers, dependencies),\n    context = _useHandler.context,\n    doDependenciesDiffer = _useHandler.doDependenciesDiffer;\n  var subscribeForEvents = ['onScroll'];\n  if (scrollHandlers.onBeginDrag !== undefined) {\n    subscribeForEvents.push('onScrollBeginDrag');\n  }\n  if (scrollHandlers.onEndDrag !== undefined) {\n    subscribeForEvents.push('onScrollEndDrag');\n  }\n  if (scrollHandlers.onMomentumBegin !== undefined) {\n    subscribeForEvents.push('onMomentumScrollBegin');\n  }\n  if (scrollHandlers.onMomentumEnd !== undefined) {\n    subscribeForEvents.push('onMomentumScrollEnd');\n  }\n  return useEvent(function () {\n    var _f = function _f(event) {\n      var onScroll = scrollHandlers.onScroll,\n        onBeginDrag = scrollHandlers.onBeginDrag,\n        onEndDrag = scrollHandlers.onEndDrag,\n        onMomentumBegin = scrollHandlers.onMomentumBegin,\n        onMomentumEnd = scrollHandlers.onMomentumEnd;\n      if (onScroll && event.eventName.endsWith('onScroll')) {\n        onScroll(event, context);\n      } else if (onBeginDrag && event.eventName.endsWith('onScrollBeginDrag')) {\n        onBeginDrag(event, context);\n      } else if (onEndDrag && event.eventName.endsWith('onScrollEndDrag')) {\n        onEndDrag(event, context);\n      } else if (onMomentumBegin && event.eventName.endsWith('onMomentumScrollBegin')) {\n        onMomentumBegin(event, context);\n      } else if (onMomentumEnd && event.eventName.endsWith('onMomentumScrollEnd')) {\n        onMomentumEnd(event, context);\n      }\n    };\n    _f._closure = {\n      scrollHandlers: scrollHandlers,\n      context: context\n    };\n    _f.asString = \"function _f(event){const{scrollHandlers,context}=jsThis._closure;{const{onScroll:onScroll,onBeginDrag:onBeginDrag,onEndDrag:onEndDrag,onMomentumBegin:onMomentumBegin,onMomentumEnd:onMomentumEnd}=scrollHandlers;if(onScroll&&event.eventName.endsWith('onScroll')){onScroll(event,context);}else if(onBeginDrag&&event.eventName.endsWith('onScrollBeginDrag')){onBeginDrag(event,context);}else if(onEndDrag&&event.eventName.endsWith('onScrollEndDrag')){onEndDrag(event,context);}else if(onMomentumBegin&&event.eventName.endsWith('onMomentumScrollBegin')){onMomentumBegin(event,context);}else if(onMomentumEnd&&event.eventName.endsWith('onMomentumScrollEnd')){onMomentumEnd(event,context);}}}\";\n    _f.__workletHash = 10951464444062;\n    _f.__location = \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedScrollHandler.js (26:18)\";\n    return _f;\n  }(), subscribeForEvents, doDependenciesDiffer);\n}","map":{"version":3,"names":["useEvent","useHandler","useAnimatedScrollHandler","handlers","dependencies","scrollHandlers","onScroll","_useHandler","context","doDependenciesDiffer","subscribeForEvents","onBeginDrag","undefined","push","onEndDrag","onMomentumBegin","onMomentumEnd","_f","event","eventName","endsWith","_closure","asString","__workletHash","__location"],"sources":["/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedScrollHandler.ts"],"sourcesContent":["import { RefObject } from 'react';\nimport { NativeScrollEvent } from 'react-native';\nimport { Context, NativeEvent, WorkletFunction } from '../commonTypes';\nimport WorkletEventHandler from '../WorkletEventHandler';\nimport { DependencyList } from './commonTypes';\nimport { useEvent, useHandler } from './Hooks';\n\nexport interface ScrollHandler<TContext extends Context>\n  extends WorkletFunction {\n  (event: NativeScrollEvent, context?: TContext): void;\n}\n\nexport interface ScrollEvent\n  extends NativeScrollEvent,\n    NativeEvent<ScrollEvent> {\n  eventName: string;\n}\nexport interface ScrollHandlers<TContext extends Context> {\n  [key: string]: ScrollHandler<TContext> | undefined;\n  onScroll?: ScrollHandler<TContext>;\n  onBeginDrag?: ScrollHandler<TContext>;\n  onEndDrag?: ScrollHandler<TContext>;\n  onMomentumBegin?: ScrollHandler<TContext>;\n  onMomentumEnd?: ScrollHandler<TContext>;\n}\n\nexport function useAnimatedScrollHandler<TContext extends Context>(\n  handlers: ScrollHandlers<TContext> | ScrollHandler<TContext>,\n  dependencies?: DependencyList\n): RefObject<WorkletEventHandler<ScrollEvent>> {\n  // case when handlers is a function\n  const scrollHandlers: ScrollHandlers<TContext> =\n    typeof handlers === 'function' ? { onScroll: handlers } : handlers;\n  const { context, doDependenciesDiffer } = useHandler<ScrollEvent, TContext>(\n    scrollHandlers,\n    dependencies\n  );\n\n  // build event subscription array\n  const subscribeForEvents = ['onScroll'];\n  if (scrollHandlers.onBeginDrag !== undefined) {\n    subscribeForEvents.push('onScrollBeginDrag');\n  }\n  if (scrollHandlers.onEndDrag !== undefined) {\n    subscribeForEvents.push('onScrollEndDrag');\n  }\n  if (scrollHandlers.onMomentumBegin !== undefined) {\n    subscribeForEvents.push('onMomentumScrollBegin');\n  }\n  if (scrollHandlers.onMomentumEnd !== undefined) {\n    subscribeForEvents.push('onMomentumScrollEnd');\n  }\n\n  return useEvent<ScrollEvent>(\n    (event: ScrollEvent) => {\n      'worklet';\n      const {\n        onScroll,\n        onBeginDrag,\n        onEndDrag,\n        onMomentumBegin,\n        onMomentumEnd,\n      } = scrollHandlers;\n      if (onScroll && event.eventName.endsWith('onScroll')) {\n        onScroll(event, context);\n      } else if (onBeginDrag && event.eventName.endsWith('onScrollBeginDrag')) {\n        onBeginDrag(event, context);\n      } else if (onEndDrag && event.eventName.endsWith('onScrollEndDrag')) {\n        onEndDrag(event, context);\n      } else if (\n        onMomentumBegin &&\n        event.eventName.endsWith('onMomentumScrollBegin')\n      ) {\n        onMomentumBegin(event, context);\n      } else if (\n        onMomentumEnd &&\n        event.eventName.endsWith('onMomentumScrollEnd')\n      ) {\n        onMomentumEnd(event, context);\n      }\n    },\n    subscribeForEvents,\n    doDependenciesDiffer\n  );\n}\n"],"mappings":"AAKA,SAASA,QAAQ,EAAEC,UAAU;AAqB7B,OAAO,SAASC,wBAAwBA,CACtCC,QAA4D,EAC5DC,YAA6B,EACgB;EAE7C,IAAMC,cAAwC,GAC5C,OAAOF,QAAQ,KAAK,UAAU,GAAG;IAAEG,QAAQ,EAAEH;EAAS,CAAC,GAAGA,QAAQ;EACpE,IAAAI,WAAA,GAA0CN,UAAU,CAClDI,cAAc,EACdD,YAAY,CACb;IAHOI,OAAO,GAAAD,WAAA,CAAPC,OAAO;IAAEC,oBAAA,GAAAF,WAAA,CAAAE,oBAAA;EAMjB,IAAMC,kBAAkB,GAAG,CAAC,UAAU,CAAC;EACvC,IAAIL,cAAc,CAACM,WAAW,KAAKC,SAAS,EAAE;IAC5CF,kBAAkB,CAACG,IAAI,CAAC,mBAAmB,CAAC;EAC9C;EACA,IAAIR,cAAc,CAACS,SAAS,KAAKF,SAAS,EAAE;IAC1CF,kBAAkB,CAACG,IAAI,CAAC,iBAAiB,CAAC;EAC5C;EACA,IAAIR,cAAc,CAACU,eAAe,KAAKH,SAAS,EAAE;IAChDF,kBAAkB,CAACG,IAAI,CAAC,uBAAuB,CAAC;EAClD;EACA,IAAIR,cAAc,CAACW,aAAa,KAAKJ,SAAS,EAAE;IAC9CF,kBAAkB,CAACG,IAAI,CAAC,qBAAqB,CAAC;EAChD;EAEA,OAAOb,QAAQ;IAAA,IAAAiB,EAAA,YAAAA,GACZC,KAAkB,EAAK;MAEtB,IACEZ,QAAQ,GAKND,cAAc,CALhBC,QAAQ;QACRK,WAAW,GAITN,cAAc,CAJhBM,WAAW;QACXG,SAAS,GAGPT,cAAc,CAHhBS,SAAS;QACTC,eAAe,GAEbV,cAAc,CAFhBU,eAAe;QACfC,aAAA,GACEX,cAAc,CADhBW,aAAA;MAEF,IAAIV,QAAQ,IAAIY,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,UAAU,CAAC,EAAE;QACpDd,QAAQ,CAACY,KAAK,EAAEV,OAAO,CAAC;MAC1B,CAAC,MAAM,IAAIG,WAAW,IAAIO,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,mBAAmB,CAAC,EAAE;QACvET,WAAW,CAACO,KAAK,EAAEV,OAAO,CAAC;MAC7B,CAAC,MAAM,IAAIM,SAAS,IAAII,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;QACnEN,SAAS,CAACI,KAAK,EAAEV,OAAO,CAAC;MAC3B,CAAC,MAAM,IACLO,eAAe,IACfG,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,uBAAuB,CAAC,EACjD;QACAL,eAAe,CAACG,KAAK,EAAEV,OAAO,CAAC;MACjC,CAAC,MAAM,IACLQ,aAAa,IACbE,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,qBAAqB,CAAC,EAC/C;QACAJ,aAAa,CAACE,KAAK,EAAEV,OAAO,CAAC;MAC/B;IACF,CAAC;IAAAS,EAAA,CAAAI,QAAA;MAAAhB,cAAA,EA/CcA,cAAA;MAAAG,OAAA,EAYjBA;IAAA;IAAAS,EAAA,CAAAK,QAAA;IAAAL,EAAA,CAAAM,aAAA;IAAAN,EAAA,CAAAO,UAAA;IAAA,OAAAP,EAAA;EAAA,KAoCEP,kBAAkB,EAClBD,oBAAoB,CACrB;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}