{"ast":null,"code":"export { stopMapper } from \"./mappers\";\nexport var valueSetter = function () {\n  var _f = function _f(sv, value) {\n    var previousAnimation = sv._animation;\n    if (previousAnimation) {\n      previousAnimation.cancelled = true;\n      sv._animation = null;\n    }\n    if (typeof value === 'function' || value !== null && typeof value === 'object' && value.onFrame !== undefined) {\n      var animation = typeof value === 'function' ? value() : value;\n      if (sv._value === animation.current && !animation.isHigherOrder) {\n        animation.callback && animation.callback(true);\n        return;\n      }\n      var initializeAnimation = function initializeAnimation(timestamp) {\n        animation.onStart(animation, sv.value, timestamp, previousAnimation);\n      };\n      var currentTimestamp = global.__frameTimestamp || performance.now();\n      initializeAnimation(currentTimestamp);\n      var step = function step(timestamp) {\n        if (animation.cancelled) {\n          animation.callback && animation.callback(false);\n          return;\n        }\n        var finished = animation.onFrame(animation, timestamp);\n        animation.finished = true;\n        animation.timestamp = timestamp;\n        sv._value = animation.current;\n        if (finished) {\n          animation.callback && animation.callback(true);\n        } else {\n          requestAnimationFrame(step);\n        }\n      };\n      sv._animation = animation;\n      step(currentTimestamp);\n    } else {\n      if (sv._value === value) {\n        return;\n      }\n      sv._value = value;\n    }\n  };\n  _f._closure = {};\n  _f.asString = \"function valueSetter(sv,value){const previousAnimation=sv._animation;if(previousAnimation){previousAnimation.cancelled=true;sv._animation=null;}if(typeof value==='function'||value!==null&&typeof value==='object'&&value.onFrame!==undefined){const animation=typeof value==='function'?value():value;if(sv._value===animation.current&&!animation.isHigherOrder){animation.callback&&animation.callback(true);return;}const initializeAnimation=function(timestamp){animation.onStart(animation,sv.value,timestamp,previousAnimation);};const currentTimestamp=global.__frameTimestamp||performance.now();initializeAnimation(currentTimestamp);const step=function(timestamp){if(animation.cancelled){animation.callback&&animation.callback(false);return;}const finished=animation.onFrame(animation,timestamp);animation.finished=true;animation.timestamp=timestamp;sv._value=animation.current;if(finished){animation.callback&&animation.callback(true);}else{requestAnimationFrame(step);}};sv._animation=animation;step(currentTimestamp);}else{if(sv._value===value){return;}sv._value=value;}}\";\n  _f.__workletHash = 11313024012434;\n  _f.__location = \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/valueSetter.js (2:7)\";\n  return _f;\n}();","map":{"version":3,"names":["stopMapper","valueSetter","_f","sv","value","previousAnimation","_animation","cancelled","onFrame","undefined","animation","_value","current","isHigherOrder","callback","initializeAnimation","timestamp","onStart","currentTimestamp","global","__frameTimestamp","performance","now","step","finished","requestAnimationFrame","_closure","asString","__workletHash","__location"],"sources":["/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/valueSetter.ts"],"sourcesContent":["import { AnimationObject, AnimatableValue } from './commonTypes';\nimport { Descriptor } from './hook/commonTypes';\nexport { stopMapper } from './mappers';\n\nexport function valueSetter(sv: any, value: any): void {\n  'worklet';\n  const previousAnimation = sv._animation;\n  if (previousAnimation) {\n    previousAnimation.cancelled = true;\n    sv._animation = null;\n  }\n  if (\n    typeof value === 'function' ||\n    (value !== null &&\n      typeof value === 'object' &&\n      (value as AnimationObject).onFrame !== undefined)\n  ) {\n    const animation: AnimationObject =\n      typeof value === 'function'\n        ? (value as () => AnimationObject)()\n        : (value as AnimationObject);\n    // prevent setting again to the same value\n    // and triggering the mappers that treat this value as an input\n    // this happens when the animation's target value(stored in animation.current until animation.onStart is called) is set to the same value as a current one(this._value)\n    // built in animations that are not higher order(withTiming, withSpring) hold target value in .current\n    if (sv._value === animation.current && !animation.isHigherOrder) {\n      animation.callback && animation.callback(true);\n      return;\n    }\n    // animated set\n    const initializeAnimation = (timestamp: number) => {\n      animation.onStart(animation, sv.value, timestamp, previousAnimation);\n    };\n    const currentTimestamp = global.__frameTimestamp || performance.now();\n    initializeAnimation(currentTimestamp);\n    const step = (timestamp: number) => {\n      if (animation.cancelled) {\n        animation.callback && animation.callback(false /* finished */);\n        return;\n      }\n      const finished = animation.onFrame(animation, timestamp);\n      animation.finished = true;\n      animation.timestamp = timestamp;\n      sv._value = animation.current;\n      if (finished) {\n        animation.callback && animation.callback(true /* finished */);\n      } else {\n        requestAnimationFrame(step);\n      }\n    };\n\n    sv._animation = animation;\n\n    step(currentTimestamp);\n  } else {\n    // prevent setting again to the same value\n    // and triggering the mappers that treat this value as an input\n    if (sv._value === value) {\n      return;\n    }\n    sv._value = value as Descriptor | AnimatableValue;\n  }\n}\n"],"mappings":"AAEA,SAASA,UAAU;AAEnB,WAAgBC,WAAW;EAAA,IAAAC,EAAA,YAAAA,GAACC,EAAO,EAAEC,KAAU,EAAQ;IAErD,IAAMC,iBAAiB,GAAGF,EAAE,CAACG,UAAU;IACvC,IAAID,iBAAiB,EAAE;MACrBA,iBAAiB,CAACE,SAAS,GAAG,IAAI;MAClCJ,EAAE,CAACG,UAAU,GAAG,IAAI;IACtB;IACA,IACE,OAAOF,KAAK,KAAK,UAAU,IAC1BA,KAAK,KAAK,IAAI,IACb,OAAOA,KAAK,KAAK,QAAQ,IACxBA,KAAK,CAAqBI,OAAO,KAAKC,SAAU,EACnD;MACA,IAAMC,SAA0B,GAC9B,OAAON,KAAK,KAAK,UAAU,GACtBA,KAAK,EAA4B,GACjCA,KAAyB;MAKhC,IAAID,EAAE,CAACQ,MAAM,KAAKD,SAAS,CAACE,OAAO,IAAI,CAACF,SAAS,CAACG,aAAa,EAAE;QAC/DH,SAAS,CAACI,QAAQ,IAAIJ,SAAS,CAACI,QAAQ,CAAC,IAAI,CAAC;QAC9C;MACF;MAEA,IAAMC,mBAAmB,GAAI,SAAvBA,mBAAmBA,CAAIC,SAAiB,EAAK;QACjDN,SAAS,CAACO,OAAO,CAACP,SAAS,EAAEP,EAAE,CAACC,KAAK,EAAEY,SAAS,EAAEX,iBAAiB,CAAC;MACtE,CAAC;MACD,IAAMa,gBAAgB,GAAGC,MAAM,CAACC,gBAAgB,IAAIC,WAAW,CAACC,GAAG,EAAE;MACrEP,mBAAmB,CAACG,gBAAgB,CAAC;MACrC,IAAMK,IAAI,GAAI,SAARA,IAAIA,CAAIP,SAAiB,EAAK;QAClC,IAAIN,SAAS,CAACH,SAAS,EAAE;UACvBG,SAAS,CAACI,QAAQ,IAAIJ,SAAS,CAACI,QAAQ,CAAC,KAAM,CAAe;UAC9D;QACF;QACA,IAAMU,QAAQ,GAAGd,SAAS,CAACF,OAAO,CAACE,SAAS,EAAEM,SAAS,CAAC;QACxDN,SAAS,CAACc,QAAQ,GAAG,IAAI;QACzBd,SAAS,CAACM,SAAS,GAAGA,SAAS;QAC/Bb,EAAE,CAACQ,MAAM,GAAGD,SAAS,CAACE,OAAO;QAC7B,IAAIY,QAAQ,EAAE;UACZd,SAAS,CAACI,QAAQ,IAAIJ,SAAS,CAACI,QAAQ,CAAC,IAAK,CAAe;QAC/D,CAAC,MAAM;UACLW,qBAAqB,CAACF,IAAI,CAAC;QAC7B;MACF,CAAC;MAEDpB,EAAE,CAACG,UAAU,GAAGI,SAAS;MAEzBa,IAAI,CAACL,gBAAgB,CAAC;IACxB,CAAC,MAAM;MAGL,IAAIf,EAAE,CAACQ,MAAM,KAAKP,KAAK,EAAE;QACvB;MACF;MACAD,EAAE,CAACQ,MAAM,GAAGP,KAAqC;IACnD;EACF;EAAAF,EAAA,CAAAwB,QAAA;EAAAxB,EAAA,CAAAyB,QAAA;EAAAzB,EAAA,CAAA0B,aAAA;EAAA1B,EAAA,CAAA2B,UAAA;EAAA,OAAA3B,EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}