{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Card } from 'react-native-elements';\nimport { getDatabase, ref, onValue } from 'firebase/database';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MuseumStoryCards = function MuseumStoryCards() {\n  var _React$useState = React.useState([]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    stories = _React$useState2[0],\n    setStories = _React$useState2[1];\n  React.useEffect(function () {\n    var database = getDatabase();\n    var storyRef = ref(database, 'data');\n    var onValueChange = onValue(storyRef, function (snapshot) {\n      var data = snapshot.val();\n      var formattedStories = formatStories(data);\n      setStories(formattedStories);\n    });\n    return function () {\n      storyRef.off('value', onValueChange);\n    };\n  }, []);\n  var formatStories = function formatStories(data) {\n    var formattedStories = [];\n    if (!data) return formattedStories;\n    var groupedStories = {};\n    for (var key in data) {\n      var story = data[key];\n      if (!groupedStories[story.userId]) {\n        groupedStories[story.userId] = {\n          alias: '',\n          location: '',\n          time: '',\n          recipient: '',\n          story: ''\n        };\n      }\n      switch (story.groupId) {\n        case 30:\n          groupedStories[story.userId].alias = story.string;\n          break;\n        case 31:\n          groupedStories[story.userId].location = story.string;\n          break;\n        case 32:\n          groupedStories[story.userId].time = story.string;\n          break;\n        case 33:\n          groupedStories[story.userId].recipient = story.string;\n          break;\n        case 34:\n          groupedStories[story.userId].story = story.string;\n          break;\n        default:\n          break;\n      }\n    }\n    for (var userId in groupedStories) {\n      formattedStories.push(groupedStories[userId]);\n    }\n    return formattedStories;\n  };\n  return _jsx(ScrollView, {\n    children: stories.map(function (story, index) {\n      return _jsxs(Card, {\n        children: [_jsx(Card.Title, {\n          children: story.alias\n        }), _jsx(Card.Divider, {}), _jsxs(View, {\n          children: [_jsxs(Text, {\n            style: styles.text,\n            children: [\"Location: \", story.location]\n          }), _jsxs(Text, {\n            style: styles.text,\n            children: [\"Time: \", story.time]\n          }), _jsxs(Text, {\n            style: styles.text,\n            children: [\"Recipient: \", story.recipient]\n          }), _jsxs(Text, {\n            style: styles.text,\n            children: [\"Story: \", story.story]\n          })]\n        })]\n      }, index);\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  text: {\n    marginBottom: 10\n  }\n});\nexport default MuseumStoryCards;","map":{"version":3,"names":["React","View","Text","StyleSheet","ScrollView","Card","getDatabase","ref","onValue","jsx","_jsx","jsxs","_jsxs","MuseumStoryCards","_React$useState","useState","_React$useState2","_slicedToArray","stories","setStories","useEffect","database","storyRef","onValueChange","snapshot","data","val","formattedStories","formatStories","off","groupedStories","key","story","userId","alias","location","time","recipient","groupId","string","push","children","map","index","Title","Divider","style","styles","text","create","marginBottom"],"sources":["/cs/home/sz78/Documents/P4_expo/MuseumStoryCards.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\nimport { Card } from 'react-native-elements';\nimport { getDatabase, ref, onValue } from 'firebase/database';\n\nconst MuseumStoryCards = () => {\n  const [stories, setStories] = React.useState([]);\n\n  React.useEffect(() => {\n    const database = getDatabase();\n    const storyRef = ref(database, 'data');\n    const onValueChange = onValue(storyRef, (snapshot) => {\n      const data = snapshot.val();\n      const formattedStories = formatStories(data);\n      setStories(formattedStories);\n    });\n\n    return () => {\n      storyRef.off('value', onValueChange);\n    };\n  }, []);\n\n  const formatStories = (data) => {\n    const formattedStories = [];\n    if (!data) return formattedStories;\n\n    const groupedStories = {};\n\n    for (const key in data) {\n      const story = data[key];\n      if (!groupedStories[story.userId]) {\n        groupedStories[story.userId] = {\n          alias: '',\n          location: '',\n          time: '',\n          recipient: '',\n          story: '',\n        };\n      }\n      switch (story.groupId) {\n        case 30:\n          groupedStories[story.userId].alias = story.string;\n          break;\n        case 31:\n          groupedStories[story.userId].location = story.string;\n          break;\n        case 32:\n          groupedStories[story.userId].time = story.string;\n          break;\n        case 33:\n          groupedStories[story.userId].recipient = story.string;\n          break;\n        case 34:\n          groupedStories[story.userId].story = story.string;\n          break;\n        default:\n          break;\n      }\n    }\n\n    for (const userId in groupedStories) {\n      formattedStories.push(groupedStories[userId]);\n    }\n\n    return formattedStories;\n  };\n\n  return (\n    <ScrollView>\n      {stories.map((story, index) => (\n        <Card key={index}>\n          <Card.Title>{story.alias}</Card.Title>\n          <Card.Divider />\n          <View>\n            <Text style={styles.text}>Location: {story.location}</Text>\n            <Text style={styles.text}>Time: {story.time}</Text>\n            <Text style={styles.text}>Recipient: {story.recipient}</Text>\n            <Text style={styles.text}>Story: {story.story}</Text>\n          </View>\n        </Card>\n      ))}\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    marginBottom: 10,\n  },\n});\n\nexport default MuseumStoryCards;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,IAAI,QAAQ,uBAAuB;AAC5C,SAASC,WAAW,EAAEC,GAAG,EAAEC,OAAO,QAAQ,mBAAmB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE9D,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;EAC7B,IAAAC,eAAA,GAA8Bd,KAAK,CAACe,QAAQ,CAAC,EAAE,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAzCI,OAAO,GAAAF,gBAAA;IAAEG,UAAU,GAAAH,gBAAA;EAE1BhB,KAAK,CAACoB,SAAS,CAAC,YAAM;IACpB,IAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;IAC9B,IAAMgB,QAAQ,GAAGf,GAAG,CAACc,QAAQ,EAAE,MAAM,CAAC;IACtC,IAAME,aAAa,GAAGf,OAAO,CAACc,QAAQ,EAAE,UAACE,QAAQ,EAAK;MACpD,IAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC;MAC3B,IAAMC,gBAAgB,GAAGC,aAAa,CAACH,IAAI,CAAC;MAC5CN,UAAU,CAACQ,gBAAgB,CAAC;IAC9B,CAAC,CAAC;IAEF,OAAO,YAAM;MACXL,QAAQ,CAACO,GAAG,CAAC,OAAO,EAAEN,aAAa,CAAC;IACtC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMK,aAAa,GAAG,SAAhBA,aAAaA,CAAIH,IAAI,EAAK;IAC9B,IAAME,gBAAgB,GAAG,EAAE;IAC3B,IAAI,CAACF,IAAI,EAAE,OAAOE,gBAAgB;IAElC,IAAMG,cAAc,GAAG,CAAC,CAAC;IAEzB,KAAK,IAAMC,GAAG,IAAIN,IAAI,EAAE;MACtB,IAAMO,KAAK,GAAGP,IAAI,CAACM,GAAG,CAAC;MACvB,IAAI,CAACD,cAAc,CAACE,KAAK,CAACC,MAAM,CAAC,EAAE;QACjCH,cAAc,CAACE,KAAK,CAACC,MAAM,CAAC,GAAG;UAC7BC,KAAK,EAAE,EAAE;UACTC,QAAQ,EAAE,EAAE;UACZC,IAAI,EAAE,EAAE;UACRC,SAAS,EAAE,EAAE;UACbL,KAAK,EAAE;QACT,CAAC;MACH;MACA,QAAQA,KAAK,CAACM,OAAO;QACnB,KAAK,EAAE;UACLR,cAAc,CAACE,KAAK,CAACC,MAAM,CAAC,CAACC,KAAK,GAAGF,KAAK,CAACO,MAAM;UACjD;QACF,KAAK,EAAE;UACLT,cAAc,CAACE,KAAK,CAACC,MAAM,CAAC,CAACE,QAAQ,GAAGH,KAAK,CAACO,MAAM;UACpD;QACF,KAAK,EAAE;UACLT,cAAc,CAACE,KAAK,CAACC,MAAM,CAAC,CAACG,IAAI,GAAGJ,KAAK,CAACO,MAAM;UAChD;QACF,KAAK,EAAE;UACLT,cAAc,CAACE,KAAK,CAACC,MAAM,CAAC,CAACI,SAAS,GAAGL,KAAK,CAACO,MAAM;UACrD;QACF,KAAK,EAAE;UACLT,cAAc,CAACE,KAAK,CAACC,MAAM,CAAC,CAACD,KAAK,GAAGA,KAAK,CAACO,MAAM;UACjD;QACF;UACE;MACJ;IACF;IAEA,KAAK,IAAMN,MAAM,IAAIH,cAAc,EAAE;MACnCH,gBAAgB,CAACa,IAAI,CAACV,cAAc,CAACG,MAAM,CAAC,CAAC;IAC/C;IAEA,OAAON,gBAAgB;EACzB,CAAC;EAED,OACEjB,IAAA,CAACN,UAAU;IAAAqC,QAAA,EACRvB,OAAO,CAACwB,GAAG,CAAC,UAACV,KAAK,EAAEW,KAAK;MAAA,OACxB/B,KAAA,CAACP,IAAI;QAAAoC,QAAA,GACH/B,IAAA,CAACL,IAAI,CAACuC,KAAK;UAAAH,QAAA,EAAET,KAAK,CAACE;QAAK,CAAa,CAAC,EACtCxB,IAAA,CAACL,IAAI,CAACwC,OAAO,IAAE,CAAC,EAChBjC,KAAA,CAACX,IAAI;UAAAwC,QAAA,GACH7B,KAAA,CAACV,IAAI;YAAC4C,KAAK,EAAEC,MAAM,CAACC,IAAK;YAAAP,QAAA,GAAC,YAAU,EAACT,KAAK,CAACG,QAAQ;UAAA,CAAO,CAAC,EAC3DvB,KAAA,CAACV,IAAI;YAAC4C,KAAK,EAAEC,MAAM,CAACC,IAAK;YAAAP,QAAA,GAAC,QAAM,EAACT,KAAK,CAACI,IAAI;UAAA,CAAO,CAAC,EACnDxB,KAAA,CAACV,IAAI;YAAC4C,KAAK,EAAEC,MAAM,CAACC,IAAK;YAAAP,QAAA,GAAC,aAAW,EAACT,KAAK,CAACK,SAAS;UAAA,CAAO,CAAC,EAC7DzB,KAAA,CAACV,IAAI;YAAC4C,KAAK,EAAEC,MAAM,CAACC,IAAK;YAAAP,QAAA,GAAC,SAAO,EAACT,KAAK,CAACA,KAAK;UAAA,CAAO,CAAC;QAAA,CACjD,CAAC;MAAA,GAREW,KASL,CAAC;IAAA,CACR;EAAC,CACQ,CAAC;AAEjB,CAAC;AAED,IAAMI,MAAM,GAAG5C,UAAU,CAAC8C,MAAM,CAAC;EAC/BD,IAAI,EAAE;IACJE,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAerC,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}