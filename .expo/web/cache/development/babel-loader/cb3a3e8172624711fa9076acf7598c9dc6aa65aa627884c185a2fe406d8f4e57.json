{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDatabase, ref, push, serverTimestamp } from \"firebase/database\";\nimport { getFunctions } from 'firebase/functions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDBjUEw_DQNMQsZJWfTtLL0PQJoH-xF0kk\",\n  authDomain: \"sta-cs5041.firebaseapp.com\",\n  databaseURL: \"https://sta-cs5041-p4.firebaseio.com\",\n  projectId: \"sta-cs5041\",\n  storageBucket: \"sta-cs5041.appspot.com\",\n  messagingSenderId: \"639987847762\",\n  appId: \"1:639987847762:web:c5a35616a1aa1cf243458b\"\n};\nvar firebaseToken = \"9dd8d43a-01db-4286-b0e8-371d24237380\";\nvar firebaseApp = initializeApp(firebaseConfig);\nvar auth = getAuth(firebaseApp);\nvar database = getDatabase(firebaseApp);\nvar functions = getFunctions(firebaseApp);\nvar emotions = [{\n  name: 'Surprised',\n  color: '#FFA87A',\n  icon: require(\"./asserts/surprised.png\")\n}, {\n  name: 'Excited',\n  color: '#FFC0CB',\n  icon: require(\"./asserts/excited.png\")\n}, {\n  name: 'Happy',\n  color: '#F9D342',\n  icon: require(\"./asserts/happy.png\")\n}, {\n  name: 'Calm',\n  color: '#9ED8F6',\n  icon: require(\"./asserts/calm.png\")\n}, {\n  name: 'Neutral',\n  color: '#D0D1D4',\n  icon: require(\"./asserts/neutral.png\")\n}, {\n  name: 'Bored',\n  color: '#AA96DA',\n  icon: require(\"./asserts/bored.png\")\n}, {\n  name: 'Anxious',\n  color: '#FFB200',\n  icon: require(\"./asserts/anxious.png\")\n}, {\n  name: 'Sad',\n  color: '#4A90E2',\n  icon: require(\"./asserts/sad.png\")\n}, {\n  name: 'Angry',\n  color: '#FF6B6B',\n  icon: require(\"./asserts/angry.png\")\n}];\nvar deviceWidth = Dimensions.get('window').width;\nvar deviceHeight = Dimensions.get('window').height;\nvar cardSize = deviceWidth / 4;\nvar cardMargin = deviceWidth * 0.01 / 2;\nvar MoodScreen = function MoodScreen() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedEmotion = _useState2[0],\n    setSelectedEmotion = _useState2[1];\n  var numEmotions = emotions.length;\n  var numRows = Math.ceil(numEmotions / 3);\n  var emptyCards = Array(3 - numEmotions % 3).fill(null);\n  var sendNumber = function () {\n    var _ref = _asyncToGenerator(function* (index) {\n      var database = getDatabase();\n      yield push(ref(database, 'data'), {\n        groupId: 30,\n        timestamp: serverTimestamp(),\n        type: 'num',\n        number: index + 1\n      });\n    });\n    return function sendNumber(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.emotionCardsContainer,\n      children: [emotions.map(function (emotion, index) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setSelectedEmotion(emotion);\n            sendNumber(index);\n          },\n          children: _jsxs(View, {\n            style: [styles.emotionCard, {\n              backgroundColor: emotion.color\n            }],\n            children: [_jsx(Text, {\n              style: styles.emotionText,\n              children: emotion.name\n            }), selectedEmotion === emotion && _jsx(Image, {\n              source: emotion.icon,\n              style: styles.emotionIcon\n            })]\n          })\n        }, index);\n      }), emptyCards.map(function (_, index) {\n        return _jsx(View, {\n          style: styles.emotionCard\n        }, index);\n      })]\n    }), _jsx(View, {\n      style: {\n        flex: 1\n      }\n    })]\n  });\n};\nexport default MoodScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  emotionCardsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    width: '100%',\n    height: deviceHeight * 0.8,\n    alignItems: 'center'\n  },\n  emotionCard: {\n    width: cardSize,\n    height: cardSize,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: cardMargin,\n    borderRadius: 10\n  },\n  emotionText: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 8\n  },\n  emotionIcon: {\n    width: 100,\n    height: 100\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","Dimensions","TouchableOpacity","Image","initializeApp","getAuth","getDatabase","ref","push","serverTimestamp","getFunctions","jsx","_jsx","jsxs","_jsxs","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseToken","firebaseApp","auth","database","functions","emotions","name","color","icon","require","deviceWidth","get","width","deviceHeight","height","cardSize","cardMargin","MoodScreen","_useState","_useState2","_slicedToArray","selectedEmotion","setSelectedEmotion","numEmotions","length","numRows","Math","ceil","emptyCards","Array","fill","sendNumber","_ref","_asyncToGenerator","index","groupId","timestamp","type","number","_x","apply","arguments","style","styles","container","children","emotionCardsContainer","map","emotion","onPress","emotionCard","backgroundColor","emotionText","source","emotionIcon","_","flex","create","justifyContent","alignItems","flexDirection","flexWrap","margin","borderRadius","fontSize","fontWeight","marginBottom"],"sources":["/cs/home/sz78/Documents/my-expo-app/examples-master/with-drawer-navigation/MoodScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, StyleSheet, Dimensions, TouchableOpacity, Image } from 'react-native';\n// 导入所需的Firebase函数\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDatabase, ref, push, serverTimestamp } from \"firebase/database\";\nimport { getFunctions } from 'firebase/functions';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDBjUEw_DQNMQsZJWfTtLL0PQJoH-xF0kk\",\n  authDomain: \"sta-cs5041.firebaseapp.com\",\n  databaseURL: \"https://sta-cs5041-p4.firebaseio.com\",\n  projectId: \"sta-cs5041\",\n  storageBucket: \"sta-cs5041.appspot.com\",\n  messagingSenderId: \"639987847762\",\n  appId: \"1:639987847762:web:c5a35616a1aa1cf243458b\"\n};\n\nconst firebaseToken = \"9dd8d43a-01db-4286-b0e8-371d24237380\";\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst auth = getAuth(firebaseApp);\nconst database = getDatabase(firebaseApp);\nconst functions = getFunctions(firebaseApp);\n\nconst emotions = [\n  { name: 'Surprised', color: '#FFA87A', icon: require('./asserts/surprised.png') },\n  { name: 'Excited', color: '#FFC0CB', icon: require('./asserts/excited.png') },\n  { name: 'Happy', color: '#F9D342', icon: require('./asserts/happy.png') },\n  { name: 'Calm', color: '#9ED8F6', icon: require('./asserts/calm.png') },\n  { name: 'Neutral', color: '#D0D1D4', icon: require('./asserts/neutral.png') },\n  { name: 'Bored', color: '#AA96DA', icon: require('./asserts/bored.png') },\n  { name: 'Anxious', color: '#FFB200', icon: require('./asserts/anxious.png') },\n  { name: 'Sad', color: '#4A90E2', icon: require('./asserts/sad.png') },\n  { name: 'Angry', color: '#FF6B6B', icon: require('./asserts/angry.png') },\n \n];\n\n\nconst deviceWidth = Dimensions.get('window').width;\nconst deviceHeight = Dimensions.get('window').height;\nconst cardSize = deviceWidth / 4;\nconst cardMargin = (deviceWidth * 0.01) / 2;\n\nconst MoodScreen = () => {\n  const [selectedEmotion, setSelectedEmotion] = useState(null);\n\n  const numEmotions = emotions.length;\n  const numRows = Math.ceil(numEmotions / 3);\n  const emptyCards = Array(3 - (numEmotions % 3)).fill(null);\n\n  // 实现一个名为sendNumber的函数，根据索引值向groupId为30的组发送相应的数字\n  const sendNumber = async (index) => {\n    const database = getDatabase();\n    await push(ref(database, 'data'), {\n      \n      groupId: 30,\n      timestamp: serverTimestamp(),\n      type: 'num',\n      number: index + 1,\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.emotionCardsContainer}>\n        {emotions.map((emotion, index) => (\n          // 在onPress属性中添加sendNumber函数\n          <TouchableOpacity key={index} onPress={() => { setSelectedEmotion(emotion); sendNumber(index); }}>\n            <View\n              style={[\n                styles.emotionCard,\n                { backgroundColor: emotion.color },\n              ]}\n            >\n              <Text style={styles.emotionText}>{emotion.name}</Text>\n              {selectedEmotion === emotion && (\n                <Image source={emotion.icon} style={styles.emotionIcon} />\n              )}\n            </View>\n          </TouchableOpacity>\n        ))}\n        {emptyCards.map((_, index) => (\n          <View key={index} style={styles.emotionCard} />\n        ))}\n      </View>\n      <View style={{ flex: 1 }} />\n    </View>\n  );\n};\n\nexport default MoodScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  emotionCardsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    width: '100%',\n    height: deviceHeight * 0.8,\n    alignItems: 'center',\n  },\n\n  emotionCard: {\n    width: cardSize,\n    height: cardSize,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: cardMargin,\n    borderRadius: 10,\n  },\n\n  emotionText: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 8,\n  },\n\n  emotionIcon: {\n    width: 100,\n    height: 100,\n  },\n});"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAGxC,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,WAAW,EAAEC,GAAG,EAAEC,IAAI,EAAEC,eAAe,QAAQ,mBAAmB;AAC3E,SAASC,YAAY,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElD,IAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,4BAA4B;EACxCC,WAAW,EAAE,sCAAsC;EACnDC,SAAS,EAAE,YAAY;EACvBC,aAAa,EAAE,wBAAwB;EACvCC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;AAED,IAAMC,aAAa,GAAG,sCAAsC;AAE5D,IAAMC,WAAW,GAAGpB,aAAa,CAACW,cAAc,CAAC;AACjD,IAAMU,IAAI,GAAGpB,OAAO,CAACmB,WAAW,CAAC;AACjC,IAAME,QAAQ,GAAGpB,WAAW,CAACkB,WAAW,CAAC;AACzC,IAAMG,SAAS,GAAGjB,YAAY,CAACc,WAAW,CAAC;AAE3C,IAAMI,QAAQ,GAAG,CACf;EAAEC,IAAI,EAAE,WAAW;EAAEC,KAAK,EAAE,SAAS;EAAEC,IAAI,EAAEC,OAAO,0BAA0B;AAAE,CAAC,EACjF;EAAEH,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE,SAAS;EAAEC,IAAI,EAAEC,OAAO,wBAAwB;AAAE,CAAC,EAC7E;EAAEH,IAAI,EAAE,OAAO;EAAEC,KAAK,EAAE,SAAS;EAAEC,IAAI,EAAEC,OAAO,sBAAsB;AAAE,CAAC,EACzE;EAAEH,IAAI,EAAE,MAAM;EAAEC,KAAK,EAAE,SAAS;EAAEC,IAAI,EAAEC,OAAO,qBAAqB;AAAE,CAAC,EACvE;EAAEH,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE,SAAS;EAAEC,IAAI,EAAEC,OAAO,wBAAwB;AAAE,CAAC,EAC7E;EAAEH,IAAI,EAAE,OAAO;EAAEC,KAAK,EAAE,SAAS;EAAEC,IAAI,EAAEC,OAAO,sBAAsB;AAAE,CAAC,EACzE;EAAEH,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE,SAAS;EAAEC,IAAI,EAAEC,OAAO,wBAAwB;AAAE,CAAC,EAC7E;EAAEH,IAAI,EAAE,KAAK;EAAEC,KAAK,EAAE,SAAS;EAAEC,IAAI,EAAEC,OAAO,oBAAoB;AAAE,CAAC,EACrE;EAAEH,IAAI,EAAE,OAAO;EAAEC,KAAK,EAAE,SAAS;EAAEC,IAAI,EAAEC,OAAO,sBAAsB;AAAE,CAAC,CAE1E;AAGD,IAAMC,WAAW,GAAGhC,UAAU,CAACiC,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK;AAClD,IAAMC,YAAY,GAAGnC,UAAU,CAACiC,GAAG,CAAC,QAAQ,CAAC,CAACG,MAAM;AACpD,IAAMC,QAAQ,GAAGL,WAAW,GAAG,CAAC;AAChC,IAAMM,UAAU,GAAIN,WAAW,GAAG,IAAI,GAAI,CAAC;AAE3C,IAAMO,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACvB,IAAAC,SAAA,GAA8C5C,QAAQ,CAAC,IAAI,CAAC;IAAA6C,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArDG,eAAe,GAAAF,UAAA;IAAEG,kBAAkB,GAAAH,UAAA;EAE1C,IAAMI,WAAW,GAAGlB,QAAQ,CAACmB,MAAM;EACnC,IAAMC,OAAO,GAAGC,IAAI,CAACC,IAAI,CAACJ,WAAW,GAAG,CAAC,CAAC;EAC1C,IAAMK,UAAU,GAAGC,KAAK,CAAC,CAAC,GAAIN,WAAW,GAAG,CAAE,CAAC,CAACO,IAAI,CAAC,IAAI,CAAC;EAG1D,IAAMC,UAAU;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,KAAK,EAAK;MAClC,IAAM/B,QAAQ,GAAGpB,WAAW,CAAC,CAAC;MAC9B,MAAME,IAAI,CAACD,GAAG,CAACmB,QAAQ,EAAE,MAAM,CAAC,EAAE;QAEhCgC,OAAO,EAAE,EAAE;QACXC,SAAS,EAAElD,eAAe,CAAC,CAAC;QAC5BmD,IAAI,EAAE,KAAK;QACXC,MAAM,EAAEJ,KAAK,GAAG;MAClB,CAAC,CAAC;IACJ,CAAC;IAAA,gBATKH,UAAUA,CAAAQ,EAAA;MAAA,OAAAP,IAAA,CAAAQ,KAAA,OAAAC,SAAA;IAAA;EAAA,GASf;EAED,OACElD,KAAA,CAAChB,IAAI;IAACmE,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BtD,KAAA,CAAChB,IAAI;MAACmE,KAAK,EAAEC,MAAM,CAACG,qBAAsB;MAAAD,QAAA,GACvCxC,QAAQ,CAAC0C,GAAG,CAAC,UAACC,OAAO,EAAEd,KAAK;QAAA,OAE3B7C,IAAA,CAACV,gBAAgB;UAAasE,OAAO,EAAE,SAAAA,QAAA,EAAM;YAAE3B,kBAAkB,CAAC0B,OAAO,CAAC;YAAEjB,UAAU,CAACG,KAAK,CAAC;UAAE,CAAE;UAAAW,QAAA,EAC/FtD,KAAA,CAAChB,IAAI;YACHmE,KAAK,EAAE,CACLC,MAAM,CAACO,WAAW,EAClB;cAAEC,eAAe,EAAEH,OAAO,CAACzC;YAAM,CAAC,CAClC;YAAAsC,QAAA,GAEFxD,IAAA,CAACb,IAAI;cAACkE,KAAK,EAAEC,MAAM,CAACS,WAAY;cAAAP,QAAA,EAAEG,OAAO,CAAC1C;YAAI,CAAO,CAAC,EACrDe,eAAe,KAAK2B,OAAO,IAC1B3D,IAAA,CAACT,KAAK;cAACyE,MAAM,EAAEL,OAAO,CAACxC,IAAK;cAACkC,KAAK,EAAEC,MAAM,CAACW;YAAY,CAAE,CAC1D;UAAA,CACG;QAAC,GAXcpB,KAYL,CAAC;MAAA,CACpB,CAAC,EACDN,UAAU,CAACmB,GAAG,CAAC,UAACQ,CAAC,EAAErB,KAAK;QAAA,OACvB7C,IAAA,CAACd,IAAI;UAAamE,KAAK,EAAEC,MAAM,CAACO;QAAY,GAAjChB,KAAmC,CAAC;MAAA,CAChD,CAAC;IAAA,CACE,CAAC,EACP7C,IAAA,CAACd,IAAI;MAACmE,KAAK,EAAE;QAAEc,IAAI,EAAE;MAAE;IAAE,CAAE,CAAC;EAAA,CACxB,CAAC;AAEX,CAAC;AAED,eAAevC,UAAU;AAEzB,IAAM0B,MAAM,GAAGlE,UAAU,CAACgF,MAAM,CAAC;EAC/Bb,SAAS,EAAE;IACTY,IAAI,EAAE,CAAC;IACPE,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EAEDb,qBAAqB,EAAE;IACrBc,aAAa,EAAE,KAAK;IACpBC,QAAQ,EAAE,MAAM;IAChBH,cAAc,EAAE,QAAQ;IACxB9C,KAAK,EAAE,MAAM;IACbE,MAAM,EAAED,YAAY,GAAG,GAAG;IAC1B8C,UAAU,EAAE;EACd,CAAC;EAEDT,WAAW,EAAE;IACXtC,KAAK,EAAEG,QAAQ;IACfD,MAAM,EAAEC,QAAQ;IAChB2C,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBG,MAAM,EAAE9C,UAAU;IAClB+C,YAAY,EAAE;EAChB,CAAC;EAEDX,WAAW,EAAE;IACXY,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClB1D,KAAK,EAAE,OAAO;IACd2D,YAAY,EAAE;EAChB,CAAC;EAEDZ,WAAW,EAAE;IACX1C,KAAK,EAAE,GAAG;IACVE,MAAM,EAAE;EACV;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}