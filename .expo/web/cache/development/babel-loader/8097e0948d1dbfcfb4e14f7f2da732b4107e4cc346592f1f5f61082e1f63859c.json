{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { Video } from 'expo-av';\nimport MessageScreen from \"./MessageScreen\";\nimport WeatherScreen from \"./WeatherScreen\";\nimport MoodScreen from \"./MoodScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(new Animated.Value(0)),\n    _useState2 = _slicedToArray(_useState, 2),\n    opacity = _useState2[0],\n    setOpacity = _useState2[1];\n  var handleHoverIn = function handleHoverIn() {\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: 200,\n      useNativeDriver: false\n    }).start();\n  };\n  var handleHoverOut = function handleHoverOut() {\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: 200,\n      useNativeDriver: false\n    }).start();\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Animated.View, {\n      style: [styles.background, {\n        opacity: opacity\n      }],\n      children: _jsx(Video, {\n        isLooping: true,\n        isMuted: true,\n        positionMillis: 500,\n        onLoad: function onLoad() {\n          Animated.timing(opacity, {\n            toValue: 1,\n            duration: 500,\n            useNativeDriver: false\n          }).start();\n        },\n        resizeMode: \"cover\",\n        shouldPlay: true,\n        source: {\n          uri: 'https://cdn.coverr.co/videos/coverr-the-ocean-in-the-evening-3606/1080p.mp4'\n        },\n        style: {\n          width: '100%',\n          height: '100%',\n          position: 'cover'\n        }\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: navigation.openDrawer,\n      onMouseEnter: handleHoverIn,\n      onMouseLeave: handleHoverOut,\n      children: _jsx(Text, {\n        style: [styles.buttonText, {\n          opacity: opacity\n        }],\n        children: \"Open navigation drawer\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate('MessageScreen');\n      },\n      onMouseEnter: handleHoverIn,\n      onMouseLeave: handleHoverOut,\n      children: _jsx(Text, {\n        style: [styles.buttonText, {\n          opacity: opacity\n        }],\n        children: \"Send message to Fife Rabbits\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate('MoodScreen');\n      },\n      onMouseEnter: handleHoverIn,\n      onMouseLeave: handleHoverOut,\n      children: _jsx(Text, {\n        style: [styles.buttonText, {\n          opacity: opacity\n        }],\n        children: \"Send your color of moods\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate('WeatherScreen');\n      },\n      onMouseEnter: handleHoverIn,\n      onMouseLeave: handleHoverOut,\n      children: _jsx(Text, {\n        style: [styles.buttonText, {\n          opacity: opacity\n        }],\n        children: \"Go to check the Fife environment\"\n      })\n    })]\n  });\n}\nvar Drawer = createDrawerNavigator();\nfunction App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Drawer.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Drawer.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"MessageScreen\",\n        component: MessageScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"WeatherScreen\",\n        component: WeatherScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"MoodScreen\",\n        component: MoodScreen\n      })]\n    })\n  });\n}\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  button: {\n    width: \"100%\",\n    maxWidth: 300,\n    backgroundColor: \"#1e90ff\",\n    padding: 15,\n    borderRadius: 8,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 10\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","Text","TouchableOpacity","View","Dimensions","Animated","NavigationContainer","createDrawerNavigator","Video","MessageScreen","WeatherScreen","MoodScreen","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","HomeScreen","_ref","navigation","_useState","Value","_useState2","_slicedToArray","opacity","setOpacity","handleHoverIn","timing","toValue","duration","useNativeDriver","start","handleHoverOut","style","styles","container","children","background","isLooping","isMuted","positionMillis","onLoad","resizeMode","shouldPlay","source","uri","position","button","onPress","openDrawer","onMouseEnter","onMouseLeave","buttonText","navigate","Drawer","App","Navigator","initialRouteName","Screen","name","component","create","flex","alignItems","justifyContent","maxWidth","backgroundColor","padding","borderRadius","marginBottom","color","fontWeight","fontSize"],"sources":["/cs/home/sz78/Documents/P4_expo/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View, Dimensions, Animated } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { Video } from 'expo-av';\n\nimport MessageScreen from './MessageScreen'; \nimport WeatherScreen from './WeatherScreen';\nimport MoodScreen from './MoodScreen';\n\nconst { width, height } = Dimensions.get('window');\n\nfunction HomeScreen({ navigation }) {\n  const [opacity, setOpacity] = useState(new Animated.Value(0));\n\n  const handleHoverIn = () => {\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: 200,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  const handleHoverOut = () => {\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: 200,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  return (\n    <View style={styles.container}>\n      <Animated.View style={[styles.background, { opacity }]}>\n        <Video\n          isLooping\n          isMuted\n          positionMillis={500}\n          onLoad={() => {\n            Animated.timing(opacity, {\n              toValue: 1,\n              duration: 500,\n              useNativeDriver: false,\n            }).start();\n          }}\n          resizeMode=\"cover\"\n          shouldPlay\n          source={{\n            uri: 'https://cdn.coverr.co/videos/coverr-the-ocean-in-the-evening-3606/1080p.mp4',\n          }}\n          style={{ width: '100%', height: '100%', position: 'cover' }} // 修改这里\n        />\n      </Animated.View>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={navigation.openDrawer}\n        onMouseEnter={handleHoverIn}\n        onMouseLeave={handleHoverOut}\n      >\n        <Text style={[styles.buttonText, { opacity }]}>Open navigation drawer</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => navigation.navigate('MessageScreen')}\n        onMouseEnter={handleHoverIn}\n        onMouseLeave={handleHoverOut}\n      >\n        <Text style={[styles.buttonText, { opacity }]}>Send message to Fife Rabbits</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => navigation.navigate('MoodScreen')}\n        onMouseEnter={handleHoverIn}\n        onMouseLeave={handleHoverOut}\n      >\n        <Text style={[styles.buttonText, { opacity }]}>Send your color of moods</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => navigation.navigate('WeatherScreen')}\n        onMouseEnter={handleHoverIn}\n        onMouseLeave={handleHoverOut}\n      >\n        <Text style={[styles.buttonText, { opacity }]}>Go to check the Fife environment</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst Drawer = createDrawerNavigator();\n\nfunction App() {\n  return (\n    <NavigationContainer>\n      <Drawer.Navigator initialRouteName=\"Home\">\n        <Drawer.Screen name=\"Home\" component={HomeScreen} />\n        <Drawer.Screen name=\"MessageScreen\" component={MessageScreen} />\n        <Drawer.Screen name=\"WeatherScreen\" component={WeatherScreen} />\n        <Drawer.Screen name=\"MoodScreen\" component={MoodScreen} />\n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  button: {\n    width: \"100%\",\n    maxWidth: 300,\n    backgroundColor: \"#1e90ff\",\n    padding: 15,\n    borderRadius: 8,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 10,\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 16,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}