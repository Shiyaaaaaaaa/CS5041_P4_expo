{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { getDatabase, ref, push, serverTimestamp } from 'firebase/database';\nimport { getAuth } from 'firebase/auth';\nimport { signInWithCustomToken } from 'firebase/auth';\nimport { getFunctions } from 'firebase/functions';\nimport { initializeApp } from 'firebase/app';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDBjUEw_DQNMQsZJWfTtLL0PQJoH-xF0kk\",\n  authDomain: \"sta-cs5041.firebaseapp.com\",\n  databaseURL: \"https://sta-cs5041-p4.firebaseio.com\",\n  projectId: \"sta-cs5041\",\n  storageBucket: \"sta-cs5041.appspot.com\",\n  messagingSenderId: \"639987847762\",\n  appId: \"1:639987847762:web:c5a35616a1aa1cf243458b\"\n};\nvar firebaseToken = \"9dd8d43a-01db-4286-b0e8-371d24237380\";\nvar firebaseApp = initializeApp(firebaseConfig);\nvar auth = getAuth(firebaseApp);\nvar database = getDatabase(firebaseApp);\nsignInWithCustomToken(auth, firebaseToken).then(function (userCredential) {\n  var user = userCredential.user;\n  console.log('Signed in:', user);\n}).catch(function (error) {\n  var errorCode = error.code;\n  var errorMessage = error.message;\n  console.error('Error signing in:', errorCode, errorMessage);\n});\ninitializeApp(firebaseConfig);\nvar emotions = [{\n  name: 'Happy',\n  color: '#F9D342'\n}, {\n  name: 'Sad',\n  color: '#4A90E2'\n}, {\n  name: 'Angry',\n  color: '#FF6B6B'\n}, {\n  name: 'Excited',\n  color: '#1DE9B6'\n}, {\n  name: 'Calm',\n  color: '#9ED8F6'\n}, {\n  name: 'Anxious',\n  color: '#FFB200'\n}, {\n  name: 'Bored',\n  color: '#AA96DA'\n}, {\n  name: 'Surprised',\n  color: '#FFA87A'\n}, {\n  name: 'Neutral',\n  color: '#D0D1D4'\n}];\nvar deviceWidth = Dimensions.get('window').width;\nvar deviceHeight = Dimensions.get('window').height;\nvar cardSize = deviceWidth / 4;\nvar cardMargin = deviceWidth * 0.01 / 2;\nvar MoodScreen = function MoodScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    inputText = _useState4[0],\n    setInputText = _useState4[1];\n  var handleCardPress = function handleCardPress() {\n    setModalVisible(true);\n  };\n  var handleSubmit = function handleSubmit() {\n    if (inputText.trim()) {\n      push(ref(database, 'data'), {\n        userId: auth.currentUser.uid,\n        groupId: 20,\n        timestamp: serverTimestamp(),\n        type: 'str',\n        string: inputText.trim()\n      });\n      setModalVisible(false);\n      setInputText('');\n    }\n  };\n  var numEmotions = emotions.length;\n  var numRows = Math.ceil(numEmotions / 3);\n  var emptyCards = Array(3 - numEmotions % 3).fill(null);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.emotionCardsContainer,\n      children: emotions.map(function (emotion, index) {\n        return _jsx(TouchableOpacity, {\n          onPress: handleCardPress,\n          style: [styles.emotionCard, {\n            backgroundColor: emotion.color\n          }],\n          children: _jsx(Text, {\n            style: styles.emotionText,\n            children: emotion.name\n          })\n        }, index);\n      })\n    }), _jsx(View, {\n      style: {\n        flex: 1\n      }\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        setModalVisible(!modalVisible);\n      },\n      children: _jsx(View, {\n        style: styles.centeredView,\n        children: _jsxs(View, {\n          style: styles.modalView,\n          children: [_jsx(TextInput, {\n            style: styles.input,\n            onChangeText: function onChangeText(text) {\n              return setInputText(text);\n            },\n            value: inputText,\n            placeholder: \"Enter your message\"\n          }), _jsx(Button, {\n            onPress: handleSubmit,\n            title: \"Submit\",\n            color: \"#2196F3\"\n          })]\n        })\n      })\n    })]\n  });\n};\nexport default MoodScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  emotionCardsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    width: '100%',\n    height: deviceHeight * 0.8,\n    alignItems: 'center'\n  },\n  emotionCard: {\n    width: cardSize,\n    height: cardSize,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: cardMargin,\n    borderRadius: 10\n  },\n  emotionText: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: 'white'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","Dimensions","TouchableOpacity","Modal","TextInput","Button","getDatabase","ref","push","serverTimestamp","getAuth","signInWithCustomToken","getFunctions","initializeApp","jsx","_jsx","jsxs","_jsxs","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseToken","firebaseApp","auth","database","then","userCredential","user","console","log","catch","error","errorCode","code","errorMessage","message","emotions","name","color","deviceWidth","get","width","deviceHeight","height","cardSize","cardMargin","MoodScreen","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","_useState3","_useState4","inputText","setInputText","handleCardPress","handleSubmit","trim","userId","currentUser","uid","groupId","timestamp","type","string","numEmotions","length","numRows","Math","ceil","emptyCards","Array","fill","style","styles","container","children","emotionCardsContainer","map","emotion","index","onPress","emotionCard","backgroundColor","emotionText","flex","animationType","transparent","visible","onRequestClose","centeredView","modalView","input","onChangeText","text","value","placeholder","title","create","justifyContent","alignItems","flexDirection","flexWrap","margin","borderRadius","fontSize","fontWeight"],"sources":["/cs/home/sz78/Documents/my-expo-app/examples-master/with-drawer-navigation/MoodScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Dimensions,\n  TouchableOpacity,\n  Modal,\n  TextInput,\n  Button,\n} from 'react-native';\nimport { getDatabase, ref, push, serverTimestamp } from 'firebase/database';\nimport { getAuth } from 'firebase/auth';\nimport { signInWithCustomToken } from 'firebase/auth';\nimport { getFunctions } from 'firebase/functions';\n\nimport { initializeApp } from 'firebase/app';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDBjUEw_DQNMQsZJWfTtLL0PQJoH-xF0kk\",\n  authDomain: \"sta-cs5041.firebaseapp.com\",\n  databaseURL: \"https://sta-cs5041-p4.firebaseio.com\",\n  projectId: \"sta-cs5041\",\n  storageBucket: \"sta-cs5041.appspot.com\",\n  messagingSenderId: \"639987847762\",\n  appId: \"1:639987847762:web:c5a35616a1aa1cf243458b\"\n};\nconst firebaseToken = \"9dd8d43a-01db-4286-b0e8-371d24237380\";\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst auth = getAuth(firebaseApp);\nconst database = getDatabase(firebaseApp);\n\nsignInWithCustomToken(auth, firebaseToken)\n  .then((userCredential) => {\n    // Signed in\n    const user = userCredential.user;\n    console.log('Signed in:', user);\n  })\n  .catch((error) => {\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    console.error('Error signing in:', errorCode, errorMessage);\n  });\n\n\ninitializeApp(firebaseConfig);\n\n\nconst emotions = [\n  { name: 'Happy', color: '#F9D342' },\n  { name: 'Sad', color: '#4A90E2' },\n  { name: 'Angry', color: '#FF6B6B' },\n  { name: 'Excited', color: '#1DE9B6' },\n  { name: 'Calm', color: '#9ED8F6' },\n  { name: 'Anxious', color: '#FFB200' },\n  { name: 'Bored', color: '#AA96DA' },\n  { name: 'Surprised', color: '#FFA87A' },\n  { name: 'Neutral', color: '#D0D1D4' },\n];\n\nconst deviceWidth = Dimensions.get('window').width;\nconst deviceHeight = Dimensions.get('window').height;\nconst cardSize = deviceWidth / 4; // Reduce the card size\nconst cardMargin = (deviceWidth * 0.01) / 2; // Reduce the card margin\n\nconst MoodScreen = () => {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [inputText, setInputText] = useState('');\n\n  const handleCardPress = () => {\n    setModalVisible(true);\n  };\n\n  const handleSubmit = () => {\n    if (inputText.trim()) {\n      push(ref(database, 'data'), {\n        userId: auth.currentUser.uid,\n        groupId: 20,\n        timestamp: serverTimestamp(),\n        type: 'str',\n        string: inputText.trim(),\n      });\n  \n      setModalVisible(false);\n      setInputText('');\n    }\n  };\n  \n  //\n  const numEmotions = emotions.length;\n  const numRows = Math.ceil(numEmotions / 3);\n  const emptyCards = Array(3 - (numEmotions % 3)).fill(null);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.emotionCardsContainer}>\n        {emotions.map((emotion, index) => (\n          <TouchableOpacity\n            key={index}\n            onPress={handleCardPress}\n            style={[styles.emotionCard, { backgroundColor: emotion.color }]}\n          >\n            <Text style={styles.emotionText}>{emotion.name}</Text>\n          </TouchableOpacity>\n        ))}\n      </View>\n      <View style={{ flex: 1 }} />\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          setModalVisible(!modalVisible);\n        }}\n      >\n        <View style={styles.centeredView}>\n          <View style={styles.modalView}>\n            <TextInput\n              style={styles.input}\n              onChangeText={(text) => setInputText(text)}\n              value={inputText}\n              placeholder=\"Enter your message\"\n            />\n            <Button onPress={handleSubmit} title=\"Submit\" color=\"#2196F3\" />\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\nexport default MoodScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  emotionCardsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    width: '100%',\n    height: deviceHeight * 0.8,\n    alignItems: 'center',\n  },\n\n  emotionCard: {\n    width: cardSize,\n    height: cardSize,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: cardMargin,\n    borderRadius: 10,\n  },\n\n  emotionText: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}