{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport NativeReanimatedModule from \"./NativeReanimated\";\nimport { isJest, shouldBeUseWeb } from \"./PlatformChecker\";\nimport { makeShareableCloneOnUIRecursive, makeShareableCloneRecursive } from \"./shareables\";\nvar IS_JEST = isJest();\nvar IS_WEB = shouldBeUseWeb();\nvar _runOnUIQueue = [];\nexport var setupMicrotasks = function () {\n  var _f = function _f() {\n    var microtasksQueue = [];\n    var isExecutingMicrotasksQueue = false;\n    global.queueMicrotask = function (callback) {\n      microtasksQueue.push(callback);\n      return -1;\n    };\n    global.__callMicrotasks = function () {\n      if (isExecutingMicrotasksQueue) {\n        return;\n      }\n      try {\n        isExecutingMicrotasksQueue = true;\n        for (var index = 0; index < microtasksQueue.length; index += 1) {\n          microtasksQueue[index]();\n        }\n        microtasksQueue = [];\n        global._maybeFlushUIUpdatesQueue();\n      } finally {\n        isExecutingMicrotasksQueue = false;\n      }\n    };\n  };\n  _f._closure = {};\n  _f.asString = \"function setupMicrotasks(){let microtasksQueue=[];let isExecutingMicrotasksQueue=false;global.queueMicrotask=function(callback){microtasksQueue.push(callback);return-1;};global.__callMicrotasks=function(){if(isExecutingMicrotasksQueue){return;}try{isExecutingMicrotasksQueue=true;for(let index=0;index<microtasksQueue.length;index+=1){microtasksQueue[index]();}microtasksQueue=[];global._maybeFlushUIUpdatesQueue();}finally{isExecutingMicrotasksQueue=false;}};}\";\n  _f.__workletHash = 7409359648188;\n  _f.__location = \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js (7:7)\";\n  return _f;\n}();\nvar callMicrotasksOnUIThread = function () {\n  var _f = function _f() {\n    global.__callMicrotasks();\n  };\n  _f._closure = {};\n  _f.asString = \"function callMicrotasksOnUIThread(){global.__callMicrotasks();}\";\n  _f.__workletHash = 3679683358222;\n  _f.__location = \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js (35:0)\";\n  return _f;\n}();\nexport var callMicrotasks = shouldBeUseWeb() ? function () {} : callMicrotasksOnUIThread;\nexport function runOnUI(worklet) {\n  if (__DEV__ && !IS_WEB && worklet.__workletHash === undefined) {\n    throw new Error('runOnUI() can only be used on worklets');\n  }\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (IS_JEST) {\n      NativeReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function () {\n        var _f = function _f() {\n          worklet.apply(void 0, args);\n        };\n        _f._closure = {\n          worklet: worklet,\n          args: args\n        };\n        _f.asString = \"function _f(){const{worklet,args}=jsThis._closure;{worklet(...args);}}\";\n        _f.__workletHash = 182486250719;\n        _f.__location = \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js (67:70)\";\n        return _f;\n      }()));\n      return;\n    }\n    if (__DEV__) {\n      makeShareableCloneRecursive(worklet);\n      makeShareableCloneRecursive(args);\n    }\n    _runOnUIQueue.push([worklet, args]);\n    if (_runOnUIQueue.length === 1) {\n      queueMicrotask(function () {\n        var queue = _runOnUIQueue;\n        _runOnUIQueue = [];\n        NativeReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function () {\n          var _f = function _f() {\n            queue.forEach(function (_ref) {\n              var _ref2 = _slicedToArray(_ref, 2),\n                worklet = _ref2[0],\n                args = _ref2[1];\n              worklet.apply(void 0, _toConsumableArray(args));\n            });\n            callMicrotasks();\n          };\n          _f._closure = {\n            queue: queue,\n            callMicrotasks: callMicrotasks\n          };\n          _f.asString = \"function _f(){const{queue,callMicrotasks}=jsThis._closure;{queue.forEach(function(_ref){let[worklet,args]=_ref;worklet(...args);});callMicrotasks();}}\";\n          _f.__workletHash = 14317184750737;\n          _f.__location = \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js (88:72)\";\n          return _f;\n        }()));\n      });\n    }\n  };\n}\nexport function runOnUIImmediately(worklet) {\n  if (__DEV__ && !IS_WEB && worklet.__workletHash === undefined) {\n    throw new Error('runOnUI() can only be used on worklets');\n  }\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    NativeReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function () {\n      var _f = function _f() {\n        worklet.apply(void 0, args);\n      };\n      _f._closure = {\n        worklet: worklet,\n        args: args\n      };\n      _f.asString = \"function _f(){const{worklet,args}=jsThis._closure;{worklet(...args);}}\";\n      _f.__workletHash = 182486250719;\n      _f.__location = \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js (113:68)\";\n      return _f;\n    }()));\n  };\n}\nif (__DEV__) {\n  try {\n    runOnUI(function () {\n      var _f = function _f() {};\n      _f._closure = {};\n      _f.asString = \"function _f(){}\";\n      _f.__workletHash = 16394749715515;\n      _f.__location = \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js (122:12)\";\n      return _f;\n    }());\n  } catch (e) {\n    throw new Error('Failed to create a worklet. Did you forget to add Reanimated Babel plugin in babel.config.js? See installation docs at https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/installation#babel-plugin.');\n  }\n}\nexport var runOnJS = function () {\n  var _f = function _f(fun) {\n    if (fun.__remoteFunction) {\n      fun = fun.__remoteFunction;\n    }\n    if (!_WORKLET) {\n      return fun;\n    }\n    return function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      _scheduleOnJS(fun, args.length > 0 ? makeShareableCloneOnUIRecursive(args) : undefined);\n    };\n  };\n  _f._closure = {\n    _scheduleOnJS: _scheduleOnJS,\n    makeShareableCloneOnUIRecursive: makeShareableCloneOnUIRecursive\n  };\n  _f.asString = \"function runOnJS(fun){const{_scheduleOnJS,makeShareableCloneOnUIRecursive}=jsThis._closure;{if(fun.__remoteFunction){fun=fun.__remoteFunction;}if(!_WORKLET){return fun;}return function(){for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3];}_scheduleOnJS(fun,args.length>0?makeShareableCloneOnUIRecursive(args):undefined);};}}\";\n  _f.__workletHash = 1688633282750;\n  _f.__location = \"/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js (129:7)\";\n  return _f;\n}();","map":{"version":3,"names":["NativeReanimatedModule","isJest","shouldBeUseWeb","makeShareableCloneOnUIRecursive","makeShareableCloneRecursive","IS_JEST","IS_WEB","_runOnUIQueue","setupMicrotasks","_f","microtasksQueue","isExecutingMicrotasksQueue","global","queueMicrotask","callback","push","__callMicrotasks","index","length","_maybeFlushUIUpdatesQueue","_closure","asString","__workletHash","__location","callMicrotasksOnUIThread","callMicrotasks","runOnUI","worklet","__DEV__","undefined","Error","_len","arguments","args","Array","_key","scheduleOnUI","apply","queue","forEach","_ref","_ref2","_slicedToArray","_toConsumableArray","runOnUIImmediately","_len2","_key2","e","runOnJS","fun","__remoteFunction","_WORKLET","_len3","_key3","_scheduleOnJS"],"sources":["/cs/home/sz78/Documents/P4_expo/node_modules/react-native-reanimated/lib/module/reanimated2/threads.ts"],"sourcesContent":["import NativeReanimatedModule from './NativeReanimated';\nimport { isJest, shouldBeUseWeb } from './PlatformChecker';\nimport { ComplexWorkletFunction } from './commonTypes';\nimport {\n  makeShareableCloneOnUIRecursive,\n  makeShareableCloneRecursive,\n} from './shareables';\n\nconst IS_JEST = isJest();\nconst IS_WEB = shouldBeUseWeb();\n\nlet _runOnUIQueue: Array<[ComplexWorkletFunction<any[], any>, any[]]> = [];\n\nexport function setupMicrotasks() {\n  'worklet';\n\n  let microtasksQueue: Array<() => void> = [];\n  let isExecutingMicrotasksQueue = false;\n\n  // @ts-ignore â€“ typescript expects this to conform to NodeJS definition and expects the return value to be NodeJS.Immediate which is an object and not a number\n  global.queueMicrotask = (callback: () => void): number => {\n    microtasksQueue.push(callback);\n    return -1;\n  };\n\n  global.__callMicrotasks = () => {\n    if (isExecutingMicrotasksQueue) {\n      return;\n    }\n    try {\n      isExecutingMicrotasksQueue = true;\n      for (let index = 0; index < microtasksQueue.length; index += 1) {\n        // we use classic 'for' loop because the size of the currentTasks array may change while executing some of the callbacks due to queueMicrotask calls\n        microtasksQueue[index]();\n      }\n      microtasksQueue = [];\n      global._maybeFlushUIUpdatesQueue();\n    } finally {\n      isExecutingMicrotasksQueue = false;\n    }\n  };\n}\n\nfunction callMicrotasksOnUIThread() {\n  'worklet';\n  global.__callMicrotasks();\n}\n\nexport const callMicrotasks = shouldBeUseWeb()\n  ? () => {\n      // on web flushing is a noop as immediates are handled by the browser\n    }\n  : callMicrotasksOnUIThread;\n\n/**\n * Schedule a worklet to execute on the UI runtime. This method does not schedule the work immediately but instead\n * waits for other worklets to be scheduled within the same JS loop. It uses queueMicrotask to schedule all the worklets\n * at once making sure they will run within the same frame boundaries on the UI thread.\n */\nexport function runOnUI<A extends any[], R>(\n  worklet: ComplexWorkletFunction<A, R>\n): (...args: A) => void {\n  if (__DEV__ && !IS_WEB && worklet.__workletHash === undefined) {\n    throw new Error('runOnUI() can only be used on worklets');\n  }\n  return (...args) => {\n    if (IS_JEST) {\n      // Mocking time in Jest is tricky as both requestAnimationFrame and queueMicrotask\n      // callbacks run on the same queue and can be interleaved. There is no way\n      // to flush particular queue in Jest and the only control over mocked timers\n      // is by using jest.advanceTimersByTime() method which advances all types\n      // of timers including immediate and animation callbacks. Ideally we'd like\n      // to have some way here to schedule work along with React updates, but\n      // that's not possible, and hence in Jest environment instead of using scheduling\n      // mechanism we just schedule the work ommiting the queue. This is ok for the\n      // uses that we currently have but may not be ok for future tests that we write.\n      NativeReanimatedModule.scheduleOnUI(\n        makeShareableCloneRecursive(() => {\n          'worklet';\n          worklet(...args);\n        })\n      );\n      return;\n    }\n    if (__DEV__) {\n      // in DEV mode we call shareable conversion here because in case the object\n      // can't be converted, we will get a meaningful stack-trace as opposed to the\n      // situation when conversion is only done via microtask queue. This does not\n      // make the app particularily less efficient as converted objects are cached\n      // and for a given worklet the conversion only happens once.\n      makeShareableCloneRecursive(worklet);\n      makeShareableCloneRecursive(args);\n    }\n    _runOnUIQueue.push([worklet, args]);\n    if (_runOnUIQueue.length === 1) {\n      queueMicrotask(() => {\n        const queue = _runOnUIQueue;\n        _runOnUIQueue = [];\n        NativeReanimatedModule.scheduleOnUI(\n          makeShareableCloneRecursive(() => {\n            'worklet';\n            queue.forEach(([worklet, args]) => {\n              worklet(...args);\n            });\n            callMicrotasks();\n          })\n        );\n      });\n    }\n  };\n}\n\n/**\n * Schedule a worklet to execute on the UI runtime skipping batching mechanism.\n */\nexport function runOnUIImmediately<A extends any[], R>(\n  worklet: ComplexWorkletFunction<A, R>\n): (...args: A) => void {\n  if (__DEV__ && !IS_WEB && worklet.__workletHash === undefined) {\n    throw new Error('runOnUI() can only be used on worklets');\n  }\n  return (...args) => {\n    NativeReanimatedModule.scheduleOnUI(\n      makeShareableCloneRecursive(() => {\n        'worklet';\n        worklet(...args);\n      })\n    );\n  };\n}\n\nif (__DEV__) {\n  try {\n    runOnUI(() => {\n      'worklet';\n    });\n  } catch (e) {\n    throw new Error(\n      'Failed to create a worklet. Did you forget to add Reanimated Babel plugin in babel.config.js? See installation docs at https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/installation#babel-plugin.'\n    );\n  }\n}\n\nexport function runOnJS<A extends any[], R>(\n  fun: ComplexWorkletFunction<A, R>\n): (...args: A) => void {\n  'worklet';\n  if (fun.__remoteFunction) {\n    // in development mode the function provided as `fun` throws an error message\n    // such that when someone accidently calls it directly on the UI runtime, they\n    // see that they should use `runOnJS` instead. To facilitate that we purt the\n    // reference to the original remote function in the `__remoteFunction` property.\n    fun = fun.__remoteFunction;\n  }\n  if (!_WORKLET) {\n    return fun;\n  }\n  return (...args) => {\n    _scheduleOnJS(\n      fun,\n      args.length > 0 ? makeShareableCloneOnUIRecursive(args) : undefined\n    );\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}